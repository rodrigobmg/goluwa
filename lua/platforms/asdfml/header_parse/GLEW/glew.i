typedef __w64 int ptrdiff_t;
typedef unsigned int GLenum;
typedef unsigned int GLbitfield;
typedef unsigned int GLuint;
typedef int GLint;
typedef int GLsizei;
typedef unsigned char GLboolean;
typedef signed char GLbyte;
typedef short GLshort;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned long GLulong;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void GLvoid;
typedef signed long long GLint64EXT;
typedef unsigned long long GLuint64EXT;
typedef GLint64EXT  GLint64;
typedef GLuint64EXT GLuint64;
typedef struct __GLsync *GLsync;
typedef char GLchar;

void glAccum (GLenum op, GLfloat value);
void glAlphaFunc (GLenum func, GLclampf ref);
GLboolean glAreTexturesResident (GLsizei n, const GLuint *textures, GLboolean *residences);
void glArrayElement (GLint i);
void glBegin (GLenum mode);
void glBindTexture (GLenum target, GLuint texture);
void glBitmap (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
void glBlendFunc (GLenum sfactor, GLenum dfactor);
void glCallList (GLuint list);
void glCallLists (GLsizei n, GLenum type, const GLvoid *lists);
void glClear (GLbitfield mask);
void glClearAccum (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void glClearDepth (GLclampd depth);
void glClearIndex (GLfloat c);
void glClearStencil (GLint s);
void glClipPlane (GLenum plane, const GLdouble *equation);
void glColor3b (GLbyte red, GLbyte green, GLbyte blue);
void glColor3bv (const GLbyte *v);
void glColor3d (GLdouble red, GLdouble green, GLdouble blue);
void glColor3dv (const GLdouble *v);
void glColor3f (GLfloat red, GLfloat green, GLfloat blue);
void glColor3fv (const GLfloat *v);
void glColor3i (GLint red, GLint green, GLint blue);
void glColor3iv (const GLint *v);
void glColor3s (GLshort red, GLshort green, GLshort blue);
void glColor3sv (const GLshort *v);
void glColor3ub (GLubyte red, GLubyte green, GLubyte blue);
void glColor3ubv (const GLubyte *v);
void glColor3ui (GLuint red, GLuint green, GLuint blue);
void glColor3uiv (const GLuint *v);
void glColor3us (GLushort red, GLushort green, GLushort blue);
void glColor3usv (const GLushort *v);
void glColor4b (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void glColor4bv (const GLbyte *v);
void glColor4d (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void glColor4dv (const GLdouble *v);
void glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void glColor4fv (const GLfloat *v);
void glColor4i (GLint red, GLint green, GLint blue, GLint alpha);
void glColor4iv (const GLint *v);
void glColor4s (GLshort red, GLshort green, GLshort blue, GLshort alpha);
void glColor4sv (const GLshort *v);
void glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void glColor4ubv (const GLubyte *v);
void glColor4ui (GLuint red, GLuint green, GLuint blue, GLuint alpha);
void glColor4uiv (const GLuint *v);
void glColor4us (GLushort red, GLushort green, GLushort blue, GLushort alpha);
void glColor4usv (const GLushort *v);
void glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void glColorMaterial (GLenum face, GLenum mode);
void glColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void glCopyPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
void glCopyTexImage1D (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
void glCopyTexImage2D (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCullFace (GLenum mode);
void glDeleteLists (GLuint list, GLsizei range);
void glDeleteTextures (GLsizei n, const GLuint *textures);
void glDepthFunc (GLenum func);
void glDepthMask (GLboolean flag);
void glDepthRange (GLclampd zNear, GLclampd zFar);
void glDisable (GLenum cap);
void glDisableClientState (GLenum array);
void glDrawArrays (GLenum mode, GLint first, GLsizei count);
void glDrawBuffer (GLenum mode);
void glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
void glDrawPixels (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
void glEdgeFlag (GLboolean flag);
void glEdgeFlagPointer (GLsizei stride, const GLvoid *pointer);
void glEdgeFlagv (const GLboolean *flag);
void glEnable (GLenum cap);
void glEnableClientState (GLenum array);
void glEnd (void);
void glEndList (void);
void glEvalCoord1d (GLdouble u);
void glEvalCoord1dv (const GLdouble *u);
void glEvalCoord1f (GLfloat u);
void glEvalCoord1fv (const GLfloat *u);
void glEvalCoord2d (GLdouble u, GLdouble v);
void glEvalCoord2dv (const GLdouble *u);
void glEvalCoord2f (GLfloat u, GLfloat v);
void glEvalCoord2fv (const GLfloat *u);
void glEvalMesh1 (GLenum mode, GLint i1, GLint i2);
void glEvalMesh2 (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void glEvalPoint1 (GLint i);
void glEvalPoint2 (GLint i, GLint j);
void glFeedbackBuffer (GLsizei size, GLenum type, GLfloat *buffer);
void glFinish (void);
void glFlush (void);
void glFogf (GLenum pname, GLfloat param);
void glFogfv (GLenum pname, const GLfloat *params);
void glFogi (GLenum pname, GLint param);
void glFogiv (GLenum pname, const GLint *params);
void glFrontFace (GLenum mode);
void glFrustum (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLuint glGenLists (GLsizei range);
void glGenTextures (GLsizei n, GLuint *textures);
void glGetBooleanv (GLenum pname, GLboolean *params);
void glGetClipPlane (GLenum plane, GLdouble *equation);
void glGetDoublev (GLenum pname, GLdouble *params);
GLenum glGetError (void);
void glGetFloatv (GLenum pname, GLfloat *params);
void glGetIntegerv (GLenum pname, GLint *params);
void glGetLightfv (GLenum light, GLenum pname, GLfloat *params);
void glGetLightiv (GLenum light, GLenum pname, GLint *params);
void glGetMapdv (GLenum target, GLenum query, GLdouble *v);
void glGetMapfv (GLenum target, GLenum query, GLfloat *v);
void glGetMapiv (GLenum target, GLenum query, GLint *v);
void glGetMaterialfv (GLenum face, GLenum pname, GLfloat *params);
void glGetMaterialiv (GLenum face, GLenum pname, GLint *params);
void glGetPixelMapfv (GLenum map, GLfloat *values);
void glGetPixelMapuiv (GLenum map, GLuint *values);
void glGetPixelMapusv (GLenum map, GLushort *values);
void glGetPointerv (GLenum pname, GLvoid* *params);
void glGetPolygonStipple (GLubyte *mask);
const GLubyte * glGetString (GLenum name);
void glGetTexEnvfv (GLenum target, GLenum pname, GLfloat *params);
void glGetTexEnviv (GLenum target, GLenum pname, GLint *params);
void glGetTexGendv (GLenum coord, GLenum pname, GLdouble *params);
void glGetTexGenfv (GLenum coord, GLenum pname, GLfloat *params);
void glGetTexGeniv (GLenum coord, GLenum pname, GLint *params);
void glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
void glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat *params);
void glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params);
void glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);
void glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);
void glHint (GLenum target, GLenum mode);
void glIndexMask (GLuint mask);
void glIndexPointer (GLenum type, GLsizei stride, const GLvoid *pointer);
void glIndexd (GLdouble c);
void glIndexdv (const GLdouble *c);
void glIndexf (GLfloat c);
void glIndexfv (const GLfloat *c);
void glIndexi (GLint c);
void glIndexiv (const GLint *c);
void glIndexs (GLshort c);
void glIndexsv (const GLshort *c);
void glIndexub (GLubyte c);
void glIndexubv (const GLubyte *c);
void glInitNames (void);
void glInterleavedArrays (GLenum format, GLsizei stride, const GLvoid *pointer);
GLboolean glIsEnabled (GLenum cap);
GLboolean glIsList (GLuint list);
GLboolean glIsTexture (GLuint texture);
void glLightModelf (GLenum pname, GLfloat param);
void glLightModelfv (GLenum pname, const GLfloat *params);
void glLightModeli (GLenum pname, GLint param);
void glLightModeliv (GLenum pname, const GLint *params);
void glLightf (GLenum light, GLenum pname, GLfloat param);
void glLightfv (GLenum light, GLenum pname, const GLfloat *params);
void glLighti (GLenum light, GLenum pname, GLint param);
void glLightiv (GLenum light, GLenum pname, const GLint *params);
void glLineStipple (GLint factor, GLushort pattern);
void glLineWidth (GLfloat width);
void glListBase (GLuint base);
void glLoadIdentity (void);
void glLoadMatrixd (const GLdouble *m);
void glLoadMatrixf (const GLfloat *m);
void glLoadName (GLuint name);
void glLogicOp (GLenum opcode);
void glMap1d (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
void glMap1f (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
void glMap2d (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
void glMap2f (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
void glMapGrid1d (GLint un, GLdouble u1, GLdouble u2);
void glMapGrid1f (GLint un, GLfloat u1, GLfloat u2);
void glMapGrid2d (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void glMapGrid2f (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void glMaterialf (GLenum face, GLenum pname, GLfloat param);
void glMaterialfv (GLenum face, GLenum pname, const GLfloat *params);
void glMateriali (GLenum face, GLenum pname, GLint param);
void glMaterialiv (GLenum face, GLenum pname, const GLint *params);
void glMatrixMode (GLenum mode);
void glMultMatrixd (const GLdouble *m);
void glMultMatrixf (const GLfloat *m);
void glNewList (GLuint list, GLenum mode);
void glNormal3b (GLbyte nx, GLbyte ny, GLbyte nz);
void glNormal3bv (const GLbyte *v);
void glNormal3d (GLdouble nx, GLdouble ny, GLdouble nz);
void glNormal3dv (const GLdouble *v);
void glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz);
void glNormal3fv (const GLfloat *v);
void glNormal3i (GLint nx, GLint ny, GLint nz);
void glNormal3iv (const GLint *v);
void glNormal3s (GLshort nx, GLshort ny, GLshort nz);
void glNormal3sv (const GLshort *v);
void glNormalPointer (GLenum type, GLsizei stride, const GLvoid *pointer);
void glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void glPassThrough (GLfloat token);
void glPixelMapfv (GLenum map, GLsizei mapsize, const GLfloat *values);
void glPixelMapuiv (GLenum map, GLsizei mapsize, const GLuint *values);
void glPixelMapusv (GLenum map, GLsizei mapsize, const GLushort *values);
void glPixelStoref (GLenum pname, GLfloat param);
void glPixelStorei (GLenum pname, GLint param);
void glPixelTransferf (GLenum pname, GLfloat param);
void glPixelTransferi (GLenum pname, GLint param);
void glPixelZoom (GLfloat xfactor, GLfloat yfactor);
void glPointSize (GLfloat size);
void glPolygonMode (GLenum face, GLenum mode);
void glPolygonOffset (GLfloat factor, GLfloat units);
void glPolygonStipple (const GLubyte *mask);
void glPopAttrib (void);
void glPopClientAttrib (void);
void glPopMatrix (void);
void glPopName (void);
void glPrioritizeTextures (GLsizei n, const GLuint *textures, const GLclampf *priorities);
void glPushAttrib (GLbitfield mask);
void glPushClientAttrib (GLbitfield mask);
void glPushMatrix (void);
void glPushName (GLuint name);
void glRasterPos2d (GLdouble x, GLdouble y);
void glRasterPos2dv (const GLdouble *v);
void glRasterPos2f (GLfloat x, GLfloat y);
void glRasterPos2fv (const GLfloat *v);
void glRasterPos2i (GLint x, GLint y);
void glRasterPos2iv (const GLint *v);
void glRasterPos2s (GLshort x, GLshort y);
void glRasterPos2sv (const GLshort *v);
void glRasterPos3d (GLdouble x, GLdouble y, GLdouble z);
void glRasterPos3dv (const GLdouble *v);
void glRasterPos3f (GLfloat x, GLfloat y, GLfloat z);
void glRasterPos3fv (const GLfloat *v);
void glRasterPos3i (GLint x, GLint y, GLint z);
void glRasterPos3iv (const GLint *v);
void glRasterPos3s (GLshort x, GLshort y, GLshort z);
void glRasterPos3sv (const GLshort *v);
void glRasterPos4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glRasterPos4dv (const GLdouble *v);
void glRasterPos4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glRasterPos4fv (const GLfloat *v);
void glRasterPos4i (GLint x, GLint y, GLint z, GLint w);
void glRasterPos4iv (const GLint *v);
void glRasterPos4s (GLshort x, GLshort y, GLshort z, GLshort w);
void glRasterPos4sv (const GLshort *v);
void glReadBuffer (GLenum mode);
void glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
void glRectd (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void glRectdv (const GLdouble *v1, const GLdouble *v2);
void glRectf (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void glRectfv (const GLfloat *v1, const GLfloat *v2);
void glRecti (GLint x1, GLint y1, GLint x2, GLint y2);
void glRectiv (const GLint *v1, const GLint *v2);
void glRects (GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void glRectsv (const GLshort *v1, const GLshort *v2);
GLint glRenderMode (GLenum mode);
void glRotated (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void glScaled (GLdouble x, GLdouble y, GLdouble z);
void glScalef (GLfloat x, GLfloat y, GLfloat z);
void glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
void glSelectBuffer (GLsizei size, GLuint *buffer);
void glShadeModel (GLenum mode);
void glStencilFunc (GLenum func, GLint ref, GLuint mask);
void glStencilMask (GLuint mask);
void glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
void glTexCoord1d (GLdouble s);
void glTexCoord1dv (const GLdouble *v);
void glTexCoord1f (GLfloat s);
void glTexCoord1fv (const GLfloat *v);
void glTexCoord1i (GLint s);
void glTexCoord1iv (const GLint *v);
void glTexCoord1s (GLshort s);
void glTexCoord1sv (const GLshort *v);
void glTexCoord2d (GLdouble s, GLdouble t);
void glTexCoord2dv (const GLdouble *v);
void glTexCoord2f (GLfloat s, GLfloat t);
void glTexCoord2fv (const GLfloat *v);
void glTexCoord2i (GLint s, GLint t);
void glTexCoord2iv (const GLint *v);
void glTexCoord2s (GLshort s, GLshort t);
void glTexCoord2sv (const GLshort *v);
void glTexCoord3d (GLdouble s, GLdouble t, GLdouble r);
void glTexCoord3dv (const GLdouble *v);
void glTexCoord3f (GLfloat s, GLfloat t, GLfloat r);
void glTexCoord3fv (const GLfloat *v);
void glTexCoord3i (GLint s, GLint t, GLint r);
void glTexCoord3iv (const GLint *v);
void glTexCoord3s (GLshort s, GLshort t, GLshort r);
void glTexCoord3sv (const GLshort *v);
void glTexCoord4d (GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void glTexCoord4dv (const GLdouble *v);
void glTexCoord4f (GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void glTexCoord4fv (const GLfloat *v);
void glTexCoord4i (GLint s, GLint t, GLint r, GLint q);
void glTexCoord4iv (const GLint *v);
void glTexCoord4s (GLshort s, GLshort t, GLshort r, GLshort q);
void glTexCoord4sv (const GLshort *v);
void glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void glTexEnvf (GLenum target, GLenum pname, GLfloat param);
void glTexEnvfv (GLenum target, GLenum pname, const GLfloat *params);
void glTexEnvi (GLenum target, GLenum pname, GLint param);
void glTexEnviv (GLenum target, GLenum pname, const GLint *params);
void glTexGend (GLenum coord, GLenum pname, GLdouble param);
void glTexGendv (GLenum coord, GLenum pname, const GLdouble *params);
void glTexGenf (GLenum coord, GLenum pname, GLfloat param);
void glTexGenfv (GLenum coord, GLenum pname, const GLfloat *params);
void glTexGeni (GLenum coord, GLenum pname, GLint param);
void glTexGeniv (GLenum coord, GLenum pname, const GLint *params);
void glTexImage1D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
void glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
void glTexParameterf (GLenum target, GLenum pname, GLfloat param);
void glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);
void glTexParameteri (GLenum target, GLenum pname, GLint param);
void glTexParameteriv (GLenum target, GLenum pname, const GLint *params);
void glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
void glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
void glTranslated (GLdouble x, GLdouble y, GLdouble z);
void glTranslatef (GLfloat x, GLfloat y, GLfloat z);
void glVertex2d (GLdouble x, GLdouble y);
void glVertex2dv (const GLdouble *v);
void glVertex2f (GLfloat x, GLfloat y);
void glVertex2fv (const GLfloat *v);
void glVertex2i (GLint x, GLint y);
void glVertex2iv (const GLint *v);
void glVertex2s (GLshort x, GLshort y);
void glVertex2sv (const GLshort *v);
void glVertex3d (GLdouble x, GLdouble y, GLdouble z);
void glVertex3dv (const GLdouble *v);
void glVertex3f (GLfloat x, GLfloat y, GLfloat z);
void glVertex3fv (const GLfloat *v);
void glVertex3i (GLint x, GLint y, GLint z);
void glVertex3iv (const GLint *v);
void glVertex3s (GLshort x, GLshort y, GLshort z);
void glVertex3sv (const GLshort *v);
void glVertex4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glVertex4dv (const GLdouble *v);
void glVertex4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glVertex4fv (const GLfloat *v);
void glVertex4i (GLint x, GLint y, GLint z, GLint w);
void glVertex4iv (const GLint *v);
void glVertex4s (GLshort x, GLshort y, GLshort z, GLshort w);
void glVertex4sv (const GLshort *v);
void glVertexPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void glViewport (GLint x, GLint y, GLsizei width, GLsizei height);

extern "C" {

const GLubyte* gluErrorString (
    GLenum   errCode);
const wchar_t* gluErrorUnicodeStringEXT (
    GLenum   errCode);
const GLubyte* gluGetString (
    GLenum   name);
void gluOrtho2D (
    GLdouble left, 
    GLdouble right, 
    GLdouble bottom, 
    GLdouble top);
void gluPerspective (
    GLdouble fovy, 
    GLdouble aspect, 
    GLdouble zNear, 
    GLdouble zFar);
void gluPickMatrix (
    GLdouble x, 
    GLdouble y, 
    GLdouble width, 
    GLdouble height, 
    GLint    viewport[4]);
void gluLookAt (
    GLdouble eyex, 
    GLdouble eyey, 
    GLdouble eyez, 
    GLdouble centerx, 
    GLdouble centery, 
    GLdouble centerz, 
    GLdouble upx, 
    GLdouble upy, 
    GLdouble upz);
int gluProject (
    GLdouble        objx, 
    GLdouble        objy, 
    GLdouble        objz,  
    const GLdouble  modelMatrix[16], 
    const GLdouble  projMatrix[16], 
    const GLint     viewport[4], 
    GLdouble        *winx, 
    GLdouble        *winy, 
    GLdouble        *winz);
int gluUnProject (
    GLdouble       winx, 
    GLdouble       winy, 
    GLdouble       winz, 
    const GLdouble modelMatrix[16], 
    const GLdouble projMatrix[16], 
    const GLint    viewport[4], 
    GLdouble       *objx, 
    GLdouble       *objy, 
    GLdouble       *objz);
int gluScaleImage (
    GLenum      format, 
    GLint       widthin, 
    GLint       heightin, 
    GLenum      typein, 
    const void  *datain, 
    GLint       widthout, 
    GLint       heightout, 
    GLenum      typeout, 
    void        *dataout);
int gluBuild1DMipmaps (
    GLenum      target, 
    GLint       components, 
    GLint       width, 
    GLenum      format, 
    GLenum      type, 
    const void  *data);
int gluBuild2DMipmaps (
    GLenum      target, 
    GLint       components, 
    GLint       width, 
    GLint       height, 
    GLenum      format, 
    GLenum      type, 
    const void  *data);
class GLUnurbs;
class GLUquadric;
class GLUtesselator;
typedef class GLUnurbs GLUnurbsObj;
typedef class GLUquadric GLUquadricObj;
typedef class GLUtesselator GLUtesselatorObj;
typedef class GLUtesselator GLUtriangulatorObj;

GLUquadric* gluNewQuadric (void);
void gluDeleteQuadric (
    GLUquadric          *state);
void gluQuadricNormals (
    GLUquadric          *quadObject, 
    GLenum              normals);
void gluQuadricTexture (
    GLUquadric          *quadObject, 
    GLboolean           textureCoords);
void gluQuadricOrientation (
    GLUquadric          *quadObject, 
    GLenum              orientation);
void gluQuadricDrawStyle (
    GLUquadric          *quadObject, 
    GLenum              drawStyle);
void gluCylinder (
    GLUquadric          *qobj, 
    GLdouble            baseRadius, 
    GLdouble            topRadius, 
    GLdouble            height, 
    GLint               slices, 
    GLint               stacks);
void gluDisk (
    GLUquadric          *qobj, 
    GLdouble            innerRadius, 
    GLdouble            outerRadius, 
    GLint               slices, 
    GLint               loops);
void gluPartialDisk (
    GLUquadric          *qobj, 
    GLdouble            innerRadius, 
    GLdouble            outerRadius, 
    GLint               slices, 
    GLint               loops, 
    GLdouble            startAngle, 
    GLdouble            sweepAngle);
void gluSphere (
    GLUquadric          *qobj, 
    GLdouble            radius, 
    GLint               slices, 
    GLint               stacks);
void gluQuadricCallback (
    GLUquadric          *qobj, 
    GLenum              which, 
    void                (__stdcall* fn)());
GLUtesselator*  gluNewTess(          
    void );
void  gluDeleteTess(       
    GLUtesselator       *tess );
void  gluTessBeginPolygon( 
    GLUtesselator       *tess,
    void                *polygon_data );
void  gluTessBeginContour( 
    GLUtesselator       *tess );
void  gluTessVertex(       
    GLUtesselator       *tess,
    GLdouble            coords[3], 
    void                *data );
void  gluTessEndContour(   
    GLUtesselator       *tess );
void  gluTessEndPolygon(   
    GLUtesselator       *tess );
void  gluTessProperty(     
    GLUtesselator       *tess,
    GLenum              which, 
    GLdouble            value );
 
void  gluTessNormal(       
    GLUtesselator       *tess, 
    GLdouble            x,
    GLdouble            y, 
    GLdouble            z );
void  gluTessCallback(     
    GLUtesselator       *tess,
    GLenum              which, 
    void                (*fn)());
void  gluGetTessProperty(  
    GLUtesselator       *tess,
    GLenum              which, 
    GLdouble            *value );
 
GLUnurbs* gluNewNurbsRenderer (void);
void gluDeleteNurbsRenderer (
    GLUnurbs            *nobj);
void gluBeginSurface (
    GLUnurbs            *nobj);
void gluBeginCurve (
    GLUnurbs            *nobj);
void gluEndCurve (
    GLUnurbs            *nobj);
void gluEndSurface (
    GLUnurbs            *nobj);
void gluBeginTrim (
    GLUnurbs            *nobj);
void gluEndTrim (
    GLUnurbs            *nobj);
void gluPwlCurve (
    GLUnurbs            *nobj, 
    GLint               count, 
    GLfloat             *array, 
    GLint               stride, 
    GLenum              type);
void gluNurbsCurve (
    GLUnurbs            *nobj, 
    GLint               nknots, 
    GLfloat             *knot, 
    GLint               stride, 
    GLfloat             *ctlarray, 
    GLint               order, 
    GLenum              type);
void 
gluNurbsSurface(     
    GLUnurbs            *nobj, 
    GLint               sknot_count, 
    float               *sknot, 
    GLint               tknot_count, 
    GLfloat             *tknot, 
    GLint               s_stride, 
    GLint               t_stride, 
    GLfloat             *ctlarray, 
    GLint               sorder, 
    GLint               torder, 
    GLenum              type);
void 
gluLoadSamplingMatrices (
    GLUnurbs            *nobj, 
    const GLfloat       modelMatrix[16], 
    const GLfloat       projMatrix[16], 
    const GLint         viewport[4] );
void 
gluNurbsProperty (
    GLUnurbs            *nobj, 
    GLenum              property, 
    GLfloat             value );
void 
gluGetNurbsProperty (
    GLUnurbs            *nobj, 
    GLenum              property, 
    GLfloat             *value );
void 
gluNurbsCallback (
    GLUnurbs            *nobj, 
    GLenum              which, 
    void                (__stdcall* fn)() );
typedef void (__stdcall* GLUquadricErrorProc) (GLenum);
typedef void (__stdcall* GLUtessBeginProc)        (GLenum);
typedef void (__stdcall* GLUtessEdgeFlagProc)     (GLboolean);
typedef void (__stdcall* GLUtessVertexProc)       (void *);
typedef void (__stdcall* GLUtessEndProc)          (void);
typedef void (__stdcall* GLUtessErrorProc)        (GLenum);
typedef void (__stdcall* GLUtessCombineProc)      (GLdouble[3],
                                                  void*[4], 
                                                  GLfloat[4],
                                                  void** );
typedef void (__stdcall* GLUtessBeginDataProc)    (GLenum, void *);
typedef void (__stdcall* GLUtessEdgeFlagDataProc) (GLboolean, void *);
typedef void (__stdcall* GLUtessVertexDataProc)   (void *, void *);
typedef void (__stdcall* GLUtessEndDataProc)      (void *);
typedef void (__stdcall* GLUtessErrorDataProc)    (GLenum, void *);
typedef void (__stdcall* GLUtessCombineDataProc)  (GLdouble[3],
                                                  void*[4], 
                                                  GLfloat[4],
                                                  void**,
                                                  void* );
typedef void (__stdcall* GLUnurbsErrorProc)   (GLenum);
void   gluBeginPolygon( GLUtesselator *tess );
void   gluNextContour(  GLUtesselator *tess, 
                                 GLenum        type );
void   gluEndPolygon(   GLUtesselator *tess );
}
typedef void (* PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (* PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
typedef void (* PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (* PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (* PFNGLACTIVETEXTUREPROC) (GLenum texture);
typedef void (* PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);
typedef void (* PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (* PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (* PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (* PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (* PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (* PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (* PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLvoid *img);
typedef void (* PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble m[16]);
typedef void (* PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat m[16]);
typedef void (* PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble m[16]);
typedef void (* PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat m[16]);
typedef void (* PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);
typedef void (* PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);
typedef void (* PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);
typedef void (* PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);
typedef void (* PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);
typedef void (* PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);
typedef void (* PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);
typedef void (* PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);
typedef void (* PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);
typedef void (* PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);
typedef void (* PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);
typedef void (* PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);
typedef void (* PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);
typedef void (* PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);
typedef void (* PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);
typedef void (* PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);
typedef void (* PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (* PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);
typedef void (* PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (* PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);
typedef void (* PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);
typedef void (* PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);
typedef void (* PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (* PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);
typedef void (* PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (* PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);
typedef void (* PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (* PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);
typedef void (* PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (* PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);
typedef void (* PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (* PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);
typedef void (* PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);

typedef void (* PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
typedef void (* PFNGLBLENDEQUATIONPROC) (GLenum mode);
typedef void (* PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (* PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (* PFNGLFOGCOORDDPROC) (GLdouble coord);
typedef void (* PFNGLFOGCOORDDVPROC) (const GLdouble *coord);
typedef void (* PFNGLFOGCOORDFPROC) (GLfloat coord);
typedef void (* PFNGLFOGCOORDFVPROC) (const GLfloat *coord);
typedef void (* PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
typedef void (* PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid **indices, GLsizei drawcount);
typedef void (* PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);
typedef void (* PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);
typedef void (* PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);
typedef void (* PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);
typedef void (* PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);
typedef void (* PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);
typedef void (* PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);
typedef void (* PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);
typedef void (* PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);
typedef void (* PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);
typedef void (* PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);
typedef void (* PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);
typedef void (* PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);
typedef void (* PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);
typedef void (* PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);
typedef void (* PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);
typedef void (* PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);
typedef void (* PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);
typedef void (* PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);
typedef void (* PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);
typedef void (* PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (* PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);
typedef void (* PFNGLWINDOWPOS2DVPROC) (const GLdouble *p);
typedef void (* PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);
typedef void (* PFNGLWINDOWPOS2FVPROC) (const GLfloat *p);
typedef void (* PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);
typedef void (* PFNGLWINDOWPOS2IVPROC) (const GLint *p);
typedef void (* PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);
typedef void (* PFNGLWINDOWPOS2SVPROC) (const GLshort *p);
typedef void (* PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLWINDOWPOS3DVPROC) (const GLdouble *p);
typedef void (* PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLWINDOWPOS3FVPROC) (const GLfloat *p);
typedef void (* PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);
typedef void (* PFNGLWINDOWPOS3IVPROC) (const GLint *p);
typedef void (* PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);
typedef void (* PFNGLWINDOWPOS3SVPROC) (const GLshort *p);

typedef ptrdiff_t GLintptr;
typedef ptrdiff_t GLsizeiptr;
typedef void (* PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);
typedef void (* PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);
typedef void (* PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage);
typedef void (* PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data);
typedef void (* PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint* buffers);
typedef void (* PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint* ids);
typedef void (* PFNGLENDQUERYPROC) (GLenum target);
typedef void (* PFNGLGENBUFFERSPROC) (GLsizei n, GLuint* buffers);
typedef void (* PFNGLGENQUERIESPROC) (GLsizei n, GLuint* ids);
typedef void (* PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid** params);
typedef void (* PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data);
typedef void (* PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint* params);
typedef void (* PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint* params);
typedef void (* PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint* params);
typedef GLboolean (* PFNGLISBUFFERPROC) (GLuint buffer);
typedef GLboolean (* PFNGLISQUERYPROC) (GLuint id);
typedef GLvoid* (* PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);
typedef GLboolean (* PFNGLUNMAPBUFFERPROC) (GLenum target);

typedef void (* PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);
typedef void (* PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar* name);
typedef void (* PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum, GLenum);
typedef void (* PFNGLCOMPILESHADERPROC) (GLuint shader);
typedef GLuint (* PFNGLCREATEPROGRAMPROC) (void);
typedef GLuint (* PFNGLCREATESHADERPROC) (GLenum type);
typedef void (* PFNGLDELETEPROGRAMPROC) (GLuint program);
typedef void (* PFNGLDELETESHADERPROC) (GLuint shader);
typedef void (* PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);
typedef void (* PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint);
typedef void (* PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum* bufs);
typedef void (* PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint);
typedef void (* PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
typedef void (* PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
typedef void (* PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
typedef GLint (* PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar* name);
typedef void (* PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
typedef void (* PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint* param);
typedef void (* PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
typedef void (* PFNGLGETSHADERSOURCEPROC) (GLuint obj, GLsizei maxLength, GLsizei* length, GLchar* source);
typedef void (* PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint* param);
typedef GLint (* PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar* name);
typedef void (* PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat* params);
typedef void (* PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint* params);
typedef void (* PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint, GLenum, GLvoid**);
typedef void (* PFNGLGETVERTEXATTRIBDVPROC) (GLuint, GLenum, GLdouble*);
typedef void (* PFNGLGETVERTEXATTRIBFVPROC) (GLuint, GLenum, GLfloat*);
typedef void (* PFNGLGETVERTEXATTRIBIVPROC) (GLuint, GLenum, GLint*);
typedef GLboolean (* PFNGLISPROGRAMPROC) (GLuint program);
typedef GLboolean (* PFNGLISSHADERPROC) (GLuint shader);
typedef void (* PFNGLLINKPROGRAMPROC) (GLuint program);
typedef void (* PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar** strings, const GLint* lengths);
typedef void (* PFNGLSTENCILFUNCSEPARATEPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
typedef void (* PFNGLSTENCILMASKSEPARATEPROC) (GLenum, GLuint);
typedef void (* PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (* PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);
typedef void (* PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLUNIFORM1IPROC) (GLint location, GLint v0);
typedef void (* PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);
typedef void (* PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);
typedef void (* PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (* PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (* PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (* PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (* PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLUSEPROGRAMPROC) (GLuint program);
typedef void (* PFNGLVALIDATEPROGRAMPROC) (GLuint program);
typedef void (* PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);
typedef void (* PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);
typedef void (* PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);
typedef void (* PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (* PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);
typedef void (* PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);
typedef void (* PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (* PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte* v);
typedef void (* PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint* v);
typedef void (* PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (* PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte* v);
typedef void (* PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint* v);
typedef void (* PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort* v);
typedef void (* PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte* v);
typedef void (* PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint* v);
typedef void (* PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (* PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte* v);
typedef void (* PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint* v);
typedef void (* PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort* v);
typedef void (* PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* pointer);

typedef void (* PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (* PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (* PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (* PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (* PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (* PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

typedef void (* PFNGLBEGINCONDITIONALRENDERPROC) (GLuint, GLenum);
typedef void (* PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum);
typedef void (* PFNGLBINDFRAGDATALOCATIONPROC) (GLuint, GLuint, const GLchar*);
typedef void (* PFNGLCLAMPCOLORPROC) (GLenum, GLenum);
typedef void (* PFNGLCLEARBUFFERFIPROC) (GLenum, GLint, GLfloat, GLint);
typedef void (* PFNGLCLEARBUFFERFVPROC) (GLenum, GLint, const GLfloat*);
typedef void (* PFNGLCLEARBUFFERIVPROC) (GLenum, GLint, const GLint*);
typedef void (* PFNGLCLEARBUFFERUIVPROC) (GLenum, GLint, const GLuint*);
typedef void (* PFNGLCOLORMASKIPROC) (GLuint, GLboolean, GLboolean, GLboolean, GLboolean);
typedef void (* PFNGLDISABLEIPROC) (GLenum, GLuint);
typedef void (* PFNGLENABLEIPROC) (GLenum, GLuint);
typedef void (* PFNGLENDCONDITIONALRENDERPROC) (void);
typedef void (* PFNGLENDTRANSFORMFEEDBACKPROC) (void);
typedef void (* PFNGLGETBOOLEANI_VPROC) (GLenum, GLuint, GLboolean*);
typedef GLint (* PFNGLGETFRAGDATALOCATIONPROC) (GLuint, const GLchar*);
typedef const GLubyte* (* PFNGLGETSTRINGIPROC) (GLenum, GLuint);
typedef void (* PFNGLGETTEXPARAMETERIIVPROC) (GLenum, GLenum, GLint*);
typedef void (* PFNGLGETTEXPARAMETERIUIVPROC) (GLenum, GLenum, GLuint*);
typedef void (* PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint, GLuint, GLsizei, GLsizei *, GLsizei *, GLenum *, GLchar *);
typedef void (* PFNGLGETUNIFORMUIVPROC) (GLuint, GLint, GLuint*);
typedef void (* PFNGLGETVERTEXATTRIBIIVPROC) (GLuint, GLenum, GLint*);
typedef void (* PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint, GLenum, GLuint*);
typedef GLboolean (* PFNGLISENABLEDIPROC) (GLenum, GLuint);
typedef void (* PFNGLTEXPARAMETERIIVPROC) (GLenum, GLenum, const GLint*);
typedef void (* PFNGLTEXPARAMETERIUIVPROC) (GLenum, GLenum, const GLuint*);
typedef void (* PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint, GLsizei, const GLchar **, GLenum);
typedef void (* PFNGLUNIFORM1UIPROC) (GLint, GLuint);
typedef void (* PFNGLUNIFORM1UIVPROC) (GLint, GLsizei, const GLuint*);
typedef void (* PFNGLUNIFORM2UIPROC) (GLint, GLuint, GLuint);
typedef void (* PFNGLUNIFORM2UIVPROC) (GLint, GLsizei, const GLuint*);
typedef void (* PFNGLUNIFORM3UIPROC) (GLint, GLuint, GLuint, GLuint);
typedef void (* PFNGLUNIFORM3UIVPROC) (GLint, GLsizei, const GLuint*);
typedef void (* PFNGLUNIFORM4UIPROC) (GLint, GLuint, GLuint, GLuint, GLuint);
typedef void (* PFNGLUNIFORM4UIVPROC) (GLint, GLsizei, const GLuint*);
typedef void (* PFNGLVERTEXATTRIBI1IPROC) (GLuint, GLint);
typedef void (* PFNGLVERTEXATTRIBI1IVPROC) (GLuint, const GLint*);
typedef void (* PFNGLVERTEXATTRIBI1UIPROC) (GLuint, GLuint);
typedef void (* PFNGLVERTEXATTRIBI1UIVPROC) (GLuint, const GLuint*);
typedef void (* PFNGLVERTEXATTRIBI2IPROC) (GLuint, GLint, GLint);
typedef void (* PFNGLVERTEXATTRIBI2IVPROC) (GLuint, const GLint*);
typedef void (* PFNGLVERTEXATTRIBI2UIPROC) (GLuint, GLuint, GLuint);
typedef void (* PFNGLVERTEXATTRIBI2UIVPROC) (GLuint, const GLuint*);
typedef void (* PFNGLVERTEXATTRIBI3IPROC) (GLuint, GLint, GLint, GLint);
typedef void (* PFNGLVERTEXATTRIBI3IVPROC) (GLuint, const GLint*);
typedef void (* PFNGLVERTEXATTRIBI3UIPROC) (GLuint, GLuint, GLuint, GLuint);
typedef void (* PFNGLVERTEXATTRIBI3UIVPROC) (GLuint, const GLuint*);
typedef void (* PFNGLVERTEXATTRIBI4BVPROC) (GLuint, const GLbyte*);
typedef void (* PFNGLVERTEXATTRIBI4IPROC) (GLuint, GLint, GLint, GLint, GLint);
typedef void (* PFNGLVERTEXATTRIBI4IVPROC) (GLuint, const GLint*);
typedef void (* PFNGLVERTEXATTRIBI4SVPROC) (GLuint, const GLshort*);
typedef void (* PFNGLVERTEXATTRIBI4UBVPROC) (GLuint, const GLubyte*);
typedef void (* PFNGLVERTEXATTRIBI4UIPROC) (GLuint, GLuint, GLuint, GLuint, GLuint);
typedef void (* PFNGLVERTEXATTRIBI4UIVPROC) (GLuint, const GLuint*);
typedef void (* PFNGLVERTEXATTRIBI4USVPROC) (GLuint, const GLushort*);
typedef void (* PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint, GLint, GLenum, GLsizei, const GLvoid*);

typedef void (* PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum, GLint, GLsizei, GLsizei);
typedef void (* PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum, GLsizei, GLenum, const GLvoid*, GLsizei);
typedef void (* PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint);
typedef void (* PFNGLTEXBUFFERPROC) (GLenum, GLenum, GLuint);

typedef void (* PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum, GLenum, GLuint, GLint);
typedef void (* PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum, GLenum, GLint64 *);
typedef void (* PFNGLGETINTEGER64I_VPROC) (GLenum, GLuint, GLint64 *);

typedef void (* PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);

typedef void (* PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (* PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);
typedef void (* PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (* PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);
typedef void (* PFNGLMINSAMPLESHADINGPROC) (GLclampf value);

typedef void (* PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);
typedef void (*GLDEBUGPROCAMD)(GLuint id, GLenum category, GLenum severity, GLsizei length, const GLchar* message, GLvoid* userParam);
typedef void (* PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, void* userParam);
typedef void (* PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint* ids, GLboolean enabled);
typedef void (* PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar* buf);
typedef GLuint (* PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum* categories, GLuint* severities, GLuint* ids, GLsizei* lengths, GLchar* message);
typedef void (* PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);
typedef void (* PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (* PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);
typedef void (* PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);

typedef void (* PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const void* indirect, GLsizei primcount, GLsizei stride);
typedef void (* PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, const void* indirect, GLsizei primcount, GLsizei stride);

typedef void (* PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint* names);
typedef void (* PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint* names);
typedef GLboolean (* PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);

typedef void (* PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);
typedef void (* PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint* monitors);
typedef void (* PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);
typedef void (* PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint* monitors);
typedef void (* PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint* data, GLint *bytesWritten);
typedef void (* PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, void* data);
typedef void (* PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei* length, GLchar *counterString);
typedef void (* PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint* numCounters, GLint *maxActiveCounters, GLsizei countersSize, GLuint *counters);
typedef void (* PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei* length, GLchar *groupString);
typedef void (* PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint* numGroups, GLsizei groupsSize, GLuint *groups);
typedef void (* PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint* counterList);

typedef void (* PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfloat* val);

typedef void (* PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);
typedef void (* PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);
typedef void (* PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);
typedef void (* PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
typedef void (* PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
typedef void (* PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const void* pointer);
typedef void (* PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint* first, const GLsizei *count, GLsizei primcount);
typedef void (* PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint* first, const GLsizei *count, GLsizei primcount);

typedef void (* PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint* fences);
typedef void (* PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);
typedef void (* PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);
typedef void (* PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint* fences);
typedef GLboolean (* PFNGLISFENCEAPPLEPROC) (GLuint fence);
typedef void (* PFNGLSETFENCEAPPLEPROC) (GLuint fence);
typedef GLboolean (* PFNGLTESTFENCEAPPLEPROC) (GLuint fence);
typedef GLboolean (* PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);
typedef void (* PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint param);
typedef void (* PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, GLsizeiptr size);
typedef void (* PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLenum pname, GLint* params);
typedef GLenum (* PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);
typedef GLenum (* PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);

typedef void (* PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, GLvoid **params);
typedef void (* PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, GLvoid *pointer);
typedef void (* PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);
typedef void (* PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint* arrays);
typedef void (* PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint* arrays);
typedef GLboolean (* PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);

typedef void (* PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void* pointer);
typedef void (* PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);
typedef void (* PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void* pointer);

typedef void (* PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);
typedef void (* PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);
typedef GLboolean (* PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);
typedef void (* PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble* points);
typedef void (* PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat* points);
typedef void (* PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble* points);
typedef void (* PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat* points);
typedef void (* PFNGLCLEARDEPTHFPROC) (GLclampf d);
typedef void (* PFNGLDEPTHRANGEFPROC) (GLclampf n, GLclampf f);
typedef void (* PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint* range, GLint *precision);
typedef void (* PFNGLRELEASESHADERCOMPILERPROC) (void);
typedef void (* PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint* shaders, GLenum binaryformat, const GLvoid*binary, GLsizei length);

typedef void (* PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount, GLuint baseinstance);
typedef void (* PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei primcount, GLuint baseinstance);
typedef void (* PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei primcount, GLint basevertex, GLuint baseinstance);

typedef void (* PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
typedef GLint (* PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar * name);

typedef struct _cl_context *cl_context;
typedef struct _cl_event *cl_event;
typedef GLsync (* PFNGLCREATESYNCFROMCLEVENTARBPROC) (cl_context context, cl_event event, GLbitfield flags);

typedef void (* PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum format, GLenum type, const GLvoid* data);
typedef void (* PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const GLvoid* data);
typedef void (* PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const GLvoid* data);
typedef void (* PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const GLvoid* data);

typedef void (* PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);

typedef void (* PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void (* PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
typedef void (* PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readtarget, GLenum writetarget, GLintptr readoffset, GLintptr writeoffset, GLsizeiptr size);

typedef void (* PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);

typedef void (*GLDEBUGPROCARB)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar* message, GLvoid* userParam);
typedef void (* PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, void* userParam);
typedef void (* PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint* ids, GLboolean enabled);
typedef void (* PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar* buf);
typedef GLuint (* PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufsize, GLenum* sources, GLenum* types, GLuint* ids, GLenum* severities, GLsizei* lengths, GLchar* messageLog);
typedef void (* PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum* bufs);

typedef void (* PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (* PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);
typedef void (* PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (* PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);

typedef void (* PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, void* indices, GLint basevertex);
typedef void (* PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei primcount, GLint basevertex);
typedef void (* PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, void* indices, GLint basevertex);
typedef void (* PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei* count, GLenum type, GLvoid**indices, GLsizei primcount, GLint *basevertex);

typedef void (* PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void* indirect);
typedef void (* PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void* indirect);

typedef void (* PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);
typedef void (* PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint* params);
typedef void (* PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pname, GLint param);

typedef void (* PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
typedef void (* PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
typedef void (* PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef GLenum (* PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
typedef void (* PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint* framebuffers);
typedef void (* PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint* renderbuffers);
typedef void (* PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (* PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (* PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (* PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint layer);
typedef void (* PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target,GLenum attachment, GLuint texture,GLint level,GLint layer);
typedef void (* PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint* framebuffers);
typedef void (* PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint* renderbuffers);
typedef void (* PFNGLGENERATEMIPMAPPROC) (GLenum target);
typedef void (* PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint* params);
typedef void (* PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint* params);
typedef GLboolean (* PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);
typedef GLboolean (* PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);
typedef void (* PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (* PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (* PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (* PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (* PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (* PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);

typedef void (* PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei* length, GLenum *binaryFormat, GLvoid*binary);
typedef void (* PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void* binary, GLsizei length);
typedef void (* PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);
typedef void (* PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble* params);
typedef void (* PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);
typedef void (* PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble* value);
typedef void (* PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
typedef void (* PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble* value);
typedef void (* PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble* value);
typedef void (* PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble* value);
typedef void (* PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);

typedef void (* PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
typedef void (* PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
typedef void (* PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (* PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (* PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
typedef void (* PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
typedef void (* PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);
typedef void (* PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (* PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);
typedef void (* PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (* PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
typedef void (* PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (* PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (* PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (* PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);
typedef void (* PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (* PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (* PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);
typedef void (* PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (* PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (* PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
typedef void (* PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (* PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (* PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid *values);
typedef void (* PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (* PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (* PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
typedef void (* PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (* PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);
typedef void (* PFNGLRESETHISTOGRAMPROC) (GLenum target);
typedef void (* PFNGLRESETMINMAXPROC) (GLenum target);
typedef void (* PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);

typedef void (* PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (* PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei primcount);
typedef void (* PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);

typedef void (* PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint* params);

typedef void (* PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64* params);

typedef void (* PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);
typedef void (* PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (* PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum* attachments);
typedef void (* PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum* attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (* PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);
typedef void (* PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
typedef void (* PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);
typedef GLvoid * (* PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);

typedef void (* PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);
typedef void (* PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, GLvoid *pointer);
typedef void (* PFNGLMATRIXINDEXUBVARBPROC) (GLint size, GLubyte *indices);
typedef void (* PFNGLMATRIXINDEXUIVARBPROC) (GLint size, GLuint *indices);
typedef void (* PFNGLMATRIXINDEXUSVARBPROC) (GLint size, GLushort *indices);

typedef void (* PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void* indirect, GLsizei primcount, GLsizei stride);
typedef void (* PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void* indirect, GLsizei primcount, GLsizei stride);

typedef void (* PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);

typedef void (* PFNGLACTIVETEXTUREARBPROC) (GLenum texture);
typedef void (* PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
typedef void (* PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
typedef void (* PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (* PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
typedef void (* PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (* PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
typedef void (* PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
typedef void (* PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
typedef void (* PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
typedef void (* PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
typedef void (* PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (* PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
typedef void (* PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (* PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
typedef void (* PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
typedef void (* PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
typedef void (* PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
typedef void (* PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (* PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (* PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (* PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (* PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
typedef void (* PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
typedef void (* PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (* PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
typedef void (* PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (* PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (* PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (* PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (* PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (* PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
typedef void (* PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (* PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);

typedef void (* PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);
typedef void (* PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint* ids);
typedef void (* PFNGLENDQUERYARBPROC) (GLenum target);
typedef void (* PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint* ids);
typedef void (* PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint* params);
typedef void (* PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint* params);
typedef void (* PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint* params);
typedef GLboolean (* PFNGLISQUERYARBPROC) (GLuint id);

typedef void (* PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);
typedef void (* PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat* params);
typedef void (* PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint* params);
typedef GLuint (* PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar* name);
typedef GLint (* PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar* name);
typedef GLint (* PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar* name);
typedef void (* PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei* length, GLchar *name);
typedef void (* PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum* props, GLsizei bufSize, GLsizei *length, GLint *params);

typedef void (* PFNGLPROVOKINGVERTEXPROC) (GLenum mode);
typedef GLenum (* PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);
typedef void (* PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void* table);
typedef void (* PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, void* img);
typedef void (* PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void* image);
typedef void (* PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values);
typedef void (* PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble* v);
typedef void (* PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat* v);
typedef void (* PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint* v);
typedef void (* PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values);
typedef void (* PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat* values);
typedef void (* PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint* values);
typedef void (* PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort* values);
typedef void (* PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte* pattern);
typedef void (* PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void* row, GLsizei columnBufSize, GLvoid*column, GLvoid*span);
typedef void (* PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void* img);
typedef void (* PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble* params);
typedef void (* PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat* params);
typedef void (* PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint* params);
typedef void (* PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint* params);
typedef void (* PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void* data);

typedef void (* PFNGLMINSAMPLESHADINGARBPROC) (GLclampf value);

typedef void (* PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);
typedef void (* PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint * samplers);
typedef void (* PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint* samplers);
typedef void (* PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint* params);
typedef void (* PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint* params);
typedef void (* PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint* params);
typedef GLboolean (* PFNGLISSAMPLERPROC) (GLuint sampler);
typedef void (* PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint* params);
typedef void (* PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint* params);
typedef void (* PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);
typedef void (* PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat* params);
typedef void (* PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);
typedef void (* PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint* params);
typedef void (* PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);
typedef void (* PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);
typedef GLuint (* PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar ** strings);
typedef void (* PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint* pipelines);
typedef void (* PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint* pipelines);
typedef void (* PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei* length, GLchar *infoLog);
typedef void (* PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint* params);
typedef GLboolean (* PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);
typedef void (* PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble x);
typedef void (* PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble* value);
typedef void (* PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat x);
typedef void (* PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint x);
typedef void (* PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint x);
typedef void (* PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint* value);
typedef void (* PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble x, GLdouble y);
typedef void (* PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble* value);
typedef void (* PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat x, GLfloat y);
typedef void (* PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint x, GLint y);
typedef void (* PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint x, GLuint y);
typedef void (* PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint* value);
typedef void (* PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble* value);
typedef void (* PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint x, GLint y, GLint z);
typedef void (* PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint x, GLuint y, GLuint z);
typedef void (* PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint* value);
typedef void (* PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble* value);
typedef void (* PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w);
typedef void (* PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (* PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (* PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);

typedef void (* PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint* params);
typedef void (* PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (* PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);
typedef char GLcharARB;
typedef unsigned int GLhandleARB;
typedef void (* PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);
typedef void (* PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);
typedef GLhandleARB (* PFNGLCREATEPROGRAMOBJECTARBPROC) (void);
typedef GLhandleARB (* PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);
typedef void (* PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);
typedef void (* PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);
typedef void (* PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei* length, GLint *size, GLenum *type, GLcharARB *name);
typedef void (* PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei* count, GLhandleARB *obj);
typedef GLhandleARB (* PFNGLGETHANDLEARBPROC) (GLenum pname);
typedef void (* PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei* length, GLcharARB *infoLog);
typedef void (* PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint* params);
typedef void (* PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei* length, GLcharARB *source);
typedef GLint (* PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB* name);
typedef void (* PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat* params);
typedef void (* PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint* params);
typedef void (* PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);
typedef void (* PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB ** string, const GLint *length);
typedef void (* PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);
typedef void (* PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);
typedef void (* PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);
typedef void (* PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);
typedef void (* PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (* PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (* PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (* PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (* PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);
typedef void (* PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);

typedef void (* PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);

typedef void (* PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei* length, GLchar *name);
typedef void (* PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei* length, GLchar *name);
typedef void (* PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint* values);
typedef void (* PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint* values);
typedef GLuint (* PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar* name);
typedef GLint (* PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar* name);
typedef void (* PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint* params);
typedef void (* PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint* indices);
typedef void (* PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar ** path, const GLint *length);
typedef void (* PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar* name);
typedef void (* PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar* name, GLsizei bufSize, GLint *stringlen, GLchar *string);
typedef void (* PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar* name, GLenum pname, GLint *params);
typedef GLboolean (* PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar* name);
typedef void (* PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar* name, GLint stringlen, const GLchar *string);

typedef GLenum (* PFNGLCLIENTWAITSYNCPROC) (GLsync GLsync,GLbitfield flags,GLuint64 timeout);
typedef void (* PFNGLDELETESYNCPROC) (GLsync GLsync);
typedef GLsync (* PFNGLFENCESYNCPROC) (GLenum condition,GLbitfield flags);
typedef void (* PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64* params);
typedef void (* PFNGLGETSYNCIVPROC) (GLsync GLsync,GLenum pname,GLsizei bufSize,GLsizei* length, GLint *values);
typedef GLboolean (* PFNGLISSYNCPROC) (GLsync GLsync);
typedef void (* PFNGLWAITSYNCPROC) (GLsync GLsync,GLbitfield flags,GLuint64 timeout);

typedef void (* PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat* values);
typedef void (* PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);
typedef void (* PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (* PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (* PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);

typedef void (* PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void* data);
typedef void (* PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, void* img);
typedef void (* PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat* val);
typedef void (* PFNGLSAMPLEMASKIPROC) (GLuint index, GLbitfield mask);
typedef void (* PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (* PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);

typedef void (* PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (* PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (* PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (* PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (* PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (* PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);

typedef void (* PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (* PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (* PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (* PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (* PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);

typedef void (* PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64* params);
typedef void (* PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64* params);
typedef void (* PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);

typedef void (* PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);
typedef void (* PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint* ids);
typedef void (* PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);
typedef void (* PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint* ids);
typedef GLboolean (* PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);
typedef void (* PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);
typedef void (* PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);

typedef void (* PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);
typedef void (* PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);
typedef void (* PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);
typedef void (* PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint* params);

typedef void (* PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei primcount);
typedef void (* PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei primcount);

typedef void (* PFNGLLOADTRANSPOSEMATRIXDARBPROC) (GLdouble m[16]);
typedef void (* PFNGLLOADTRANSPOSEMATRIXFARBPROC) (GLfloat m[16]);
typedef void (* PFNGLMULTTRANSPOSEMATRIXDARBPROC) (GLdouble m[16]);
typedef void (* PFNGLMULTTRANSPOSEMATRIXFARBPROC) (GLfloat m[16]);

typedef void (* PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);
typedef void (* PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (* PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);
typedef void (* PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);
typedef void (* PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName);
typedef void (* PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params);
typedef void (* PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint* data);
typedef GLuint (* PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar* uniformBlockName);
typedef void (* PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar** uniformNames, GLuint* uniformIndices);
typedef void (* PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
typedef void (* PFNGLBINDVERTEXARRAYPROC) (GLuint array);
typedef void (* PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint* arrays);
typedef void (* PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint* arrays);
typedef GLboolean (* PFNGLISVERTEXARRAYPROC) (GLuint array);

typedef void (* PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble* params);
typedef void (* PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);
typedef void (* PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (* PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void* pointer);

typedef void (* PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (* PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
typedef void (* PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (* PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (* PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (* PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);

typedef void (* PFNGLVERTEXBLENDARBPROC) (GLint count);
typedef void (* PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, GLvoid *pointer);
typedef void (* PFNGLWEIGHTBVARBPROC) (GLint size, GLbyte *weights);
typedef void (* PFNGLWEIGHTDVARBPROC) (GLint size, GLdouble *weights);
typedef void (* PFNGLWEIGHTFVARBPROC) (GLint size, GLfloat *weights);
typedef void (* PFNGLWEIGHTIVARBPROC) (GLint size, GLint *weights);
typedef void (* PFNGLWEIGHTSVARBPROC) (GLint size, GLshort *weights);
typedef void (* PFNGLWEIGHTUBVARBPROC) (GLint size, GLubyte *weights);
typedef void (* PFNGLWEIGHTUIVARBPROC) (GLint size, GLuint *weights);
typedef void (* PFNGLWEIGHTUSVARBPROC) (GLint size, GLushort *weights);

typedef ptrdiff_t GLintptrARB;
typedef ptrdiff_t GLsizeiptrARB;
typedef void (* PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);
typedef void (* PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid* data, GLenum usage);
typedef void (* PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid* data);
typedef void (* PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint* buffers);
typedef void (* PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint* buffers);
typedef void (* PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, GLvoid** params);
typedef void (* PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid* data);
typedef GLboolean (* PFNGLISBUFFERARBPROC) (GLuint buffer);
typedef GLvoid * (* PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);
typedef GLboolean (* PFNGLUNMAPBUFFERARBPROC) (GLenum target);

typedef void (* PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);
typedef void (* PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint* programs);
typedef void (* PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);
typedef void (* PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);
typedef void (* PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint* programs);
typedef void (* PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble* params);
typedef void (* PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat* params);
typedef void (* PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble* params);
typedef void (* PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat* params);
typedef void (* PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, void* string);
typedef void (* PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid** pointer);
typedef void (* PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble* params);
typedef void (* PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint* params);
typedef GLboolean (* PFNGLISPROGRAMARBPROC) (GLuint program);
typedef void (* PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble* params);
typedef void (* PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat* params);
typedef void (* PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble* params);
typedef void (* PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat* params);
typedef void (* PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const void* string);
typedef void (* PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);
typedef void (* PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);
typedef void (* PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);
typedef void (* PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (* PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);
typedef void (* PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);
typedef void (* PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (* PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte* v);
typedef void (* PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint* v);
typedef void (* PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (* PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte* v);
typedef void (* PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint* v);
typedef void (* PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort* v);
typedef void (* PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte* v);
typedef void (* PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint* v);
typedef void (* PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (* PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte* v);
typedef void (* PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint* v);
typedef void (* PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort* v);
typedef void (* PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void* pointer);

typedef void (* PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB* name);
typedef void (* PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei* length, GLint *size, GLenum *type, GLcharARB *name);
typedef GLint (* PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB* name);

typedef void (* PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);
typedef void (* PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint* color);
typedef void (* PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);
typedef void (* PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint* color);
typedef void (* PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (* PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint* coords);
typedef void (* PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (* PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint* coords);
typedef void (* PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (* PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint* coords);
typedef void (* PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (* PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint* coords);
typedef void (* PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);
typedef void (* PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint* coords);
typedef void (* PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
typedef void (* PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint* color);
typedef void (* PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
typedef void (* PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint* coords);
typedef void (* PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
typedef void (* PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint* coords);
typedef void (* PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
typedef void (* PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint* coords);
typedef void (* PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
typedef void (* PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint* coords);
typedef void (* PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (* PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
typedef void (* PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (* PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
typedef void (* PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (* PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
typedef void (* PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (* PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
typedef void (* PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);
typedef void (* PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint* value);
typedef void (* PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);
typedef void (* PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint* value);
typedef void (* PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);
typedef void (* PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint* value);

typedef void (* PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLclampd * v);
typedef void (* PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLclampd n, GLclampd f);
typedef void (* PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble* data);
typedef void (* PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat* data);
typedef void (* PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint * v);
typedef void (* PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (* PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint * v);
typedef void (* PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat * v);
typedef void (* PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (* PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat * v);

typedef void (* PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);
typedef void (* PFNGLWINDOWPOS2DVARBPROC) (const GLdouble* p);
typedef void (* PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);
typedef void (* PFNGLWINDOWPOS2FVARBPROC) (const GLfloat* p);
typedef void (* PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);
typedef void (* PFNGLWINDOWPOS2IVARBPROC) (const GLint* p);
typedef void (* PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);
typedef void (* PFNGLWINDOWPOS2SVARBPROC) (const GLshort* p);
typedef void (* PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLWINDOWPOS3DVARBPROC) (const GLdouble* p);
typedef void (* PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLWINDOWPOS3FVARBPROC) (const GLfloat* p);
typedef void (* PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);
typedef void (* PFNGLWINDOWPOS3IVARBPROC) (const GLint* p);
typedef void (* PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);
typedef void (* PFNGLWINDOWPOS3SVARBPROC) (const GLshort* p);

typedef void (* PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum* bufs);

typedef void (* PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);
typedef void (* PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);
typedef void (* PFNGLELEMENTPOINTERATIPROC) (GLenum type, const void* pointer);

typedef void (* PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);
typedef void (* PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);
typedef void (* PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);
typedef void (* PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);

typedef void (* PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (* PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (* PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (* PFNGLBEGINFRAGMENTSHADERATIPROC) (void);
typedef void (* PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);
typedef void (* PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (* PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (* PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (* PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);
typedef void (* PFNGLENDFRAGMENTSHADERATIPROC) (void);
typedef GLuint (* PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);
typedef void (* PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);
typedef void (* PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);
typedef void (* PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat* value);

typedef GLvoid * (* PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);
typedef void (* PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);
typedef void (* PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);
typedef void (* PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);

typedef void (* PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
typedef void (* PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);

typedef void (* PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (* PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);
typedef void (* PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint* params);
typedef void (* PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint* params);
typedef void (* PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint* params);
typedef GLboolean (* PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);
typedef GLuint (* PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const void* pointer, GLenum usage);
typedef void (* PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const void* pointer, GLenum preserve);
typedef void (* PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);

typedef void (* PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint* params);
typedef void (* PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);

typedef void (* PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);
typedef void (* PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte x, GLbyte y, GLbyte z);
typedef void (* PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);
typedef void (* PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (* PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (* PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);
typedef void (* PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (* PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);
typedef void (* PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (* PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);
typedef void (* PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);
typedef void (* PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);
typedef void (* PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (* PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);
typedef void (* PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (* PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);
typedef void (* PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (* PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);
typedef void (* PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (* PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);
typedef void (* PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (* PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);
typedef void (* PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (* PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);
typedef void (* PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (* PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);
typedef void (* PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (* PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (* PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (* PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);
typedef void (* PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (* PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);
typedef void (* PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (* PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (* PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (* PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);
typedef void (* PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (* PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (* PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);

typedef GLint (* PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
typedef GLintptr (* PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
typedef void (* PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);

typedef void (* PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);

typedef void (* PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);

typedef void (* PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (* PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);
typedef void (* PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void* data);
typedef void (* PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);

typedef void (* PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);
typedef void (* PFNGLUNLOCKARRAYSEXTPROC) (void);

typedef void (* PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void* image);
typedef void (* PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* image);
typedef void (* PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);
typedef void (* PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat* params);
typedef void (* PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);
typedef void (* PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint* params);
typedef void (* PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (* PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (* PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, void* image);
typedef void (* PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, void* row, void* column, void* span);
typedef void (* PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* row, const void* column);

typedef void (* PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, void* pointer);
typedef void (* PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, void* pointer);

typedef void (* PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (* PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (* PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (* PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (* PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

typedef void (* PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble* params);
typedef void (* PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat* params);

typedef void (* PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar* marker);
typedef void (* PFNGLPOPGROUPMARKEREXTPROC) (void);
typedef void (* PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar* marker);

typedef void (* PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);

typedef void (* PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint texture);
typedef GLenum (* PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum target);
typedef void (* PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);
typedef void (* PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void* data);
typedef void (* PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (* PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (* PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (* PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (* PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (* PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (* PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (* PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (* PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (* PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (* PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);
typedef void (* PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);
typedef void (* PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);
typedef void (* PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);
typedef void (* PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);
typedef void (* PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);
typedef void (* PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);
typedef void (* PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);
typedef void (* PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (* PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);
typedef void (* PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, const GLenum* bufs);
typedef void (* PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);
typedef void (* PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);
typedef void (* PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);
typedef void (* PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint level, void* img);
typedef void (* PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level, void* img);
typedef void (* PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble* params);
typedef void (* PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble* params);
typedef void (* PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat* params);
typedef void (* PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat* params);
typedef void (* PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint* param);
typedef void (* PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble* params);
typedef void (* PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint* params);
typedef void (* PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void* pixels);
typedef void (* PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint* params);
typedef void (* PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLuint* params);
typedef void (* PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLint* params);
typedef void (* PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void** params);
typedef void (* PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void* data);
typedef void (* PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint* params);
typedef void (* PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLint* params);
typedef void (* PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint* params);
typedef void (* PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble* params);
typedef void (* PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat* params);
typedef void (* PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum pname, void* string);
typedef void (* PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenum pname, GLint* params);
typedef void (* PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLvoid** params);
typedef void (* PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, GLvoid** params);
typedef void (* PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void* pixels);
typedef void (* PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLint* params);
typedef void (* PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLuint* params);
typedef void (* PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint* param);
typedef void (* PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint* param);
typedef void (* PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, GLvoid** param);
typedef void (* PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, GLvoid** param);
typedef GLvoid * (* PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);
typedef GLvoid * (* PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (* PFNGLMATRIXFRUSTUMEXTPROC) (GLenum matrixMode, GLdouble l, GLdouble r, GLdouble b, GLdouble t, GLdouble n, GLdouble f);
typedef void (* PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum matrixMode);
typedef void (* PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum matrixMode, const GLdouble* m);
typedef void (* PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum matrixMode, const GLfloat* m);
typedef void (* PFNGLMATRIXLOADDEXTPROC) (GLenum matrixMode, const GLdouble* m);
typedef void (* PFNGLMATRIXLOADFEXTPROC) (GLenum matrixMode, const GLfloat* m);
typedef void (* PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum matrixMode, const GLdouble* m);
typedef void (* PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum matrixMode, const GLfloat* m);
typedef void (* PFNGLMATRIXMULTDEXTPROC) (GLenum matrixMode, const GLdouble* m);
typedef void (* PFNGLMATRIXMULTFEXTPROC) (GLenum matrixMode, const GLfloat* m);
typedef void (* PFNGLMATRIXORTHOEXTPROC) (GLenum matrixMode, GLdouble l, GLdouble r, GLdouble b, GLdouble t, GLdouble n, GLdouble f);
typedef void (* PFNGLMATRIXPOPEXTPROC) (GLenum matrixMode);
typedef void (* PFNGLMATRIXPUSHEXTPROC) (GLenum matrixMode);
typedef void (* PFNGLMATRIXROTATEDEXTPROC) (GLenum matrixMode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLMATRIXROTATEFEXTPROC) (GLenum matrixMode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLMATRIXSCALEDEXTPROC) (GLenum matrixMode, GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLMATRIXSCALEFEXTPROC) (GLenum matrixMode, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum matrixMode, GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum matrixMode, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (* PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void* pointer);
typedef void (* PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (* PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat* params);
typedef void (* PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (* PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint* params);
typedef void (* PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
typedef void (* PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLdouble* params);
typedef void (* PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
typedef void (* PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLfloat* params);
typedef void (* PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint param);
typedef void (* PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLint* params);
typedef void (* PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint* params);
typedef void (* PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLuint* params);
typedef void (* PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (* PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat* param);
typedef void (* PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (* PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint* param);
typedef void (* PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint renderbuffer);
typedef void (* PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void* data, GLenum usage);
typedef void (* PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void* data);
typedef void (* PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (* PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (* PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (* PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (* PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (* PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (* PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (* PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (* PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLdouble* params);
typedef void (* PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLfloat* params);
typedef void (* PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (* PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLint* params);
typedef void (* PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (* PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLuint* params);
typedef void (* PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat* params);
typedef void (* PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint* params);
typedef void (* PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint* params);
typedef void (* PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum format, GLsizei len, const void* string);
typedef void (* PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (* PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (* PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (* PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble x);
typedef void (* PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (* PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v0);
typedef void (* PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0);
typedef void (* PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v0);
typedef void (* PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint* value);
typedef void (* PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y);
typedef void (* PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (* PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (* PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (* PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (* PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint* value);
typedef void (* PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (* PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (* PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (* PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (* PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint* value);
typedef void (* PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (* PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (* PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (* PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint* value);
typedef void (* PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (* PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (* PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (* PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);
typedef void (* PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (* PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint* params);
typedef void (* PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLuint* params);
typedef void (* PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat param);
typedef void (* PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLfloat* param);
typedef void (* PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint param);
typedef void (* PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint* param);
typedef void (* PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint renderbuffer);
typedef void (* PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void* pixels);
typedef GLboolean (* PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);
typedef void (* PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (* PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
typedef void (* PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (* PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (* PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (* PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (* PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (* PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (* PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (* PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
typedef void (* PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);

typedef void (* PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint buf, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (* PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);
typedef void (* PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);
typedef void (* PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum value, GLuint index, GLboolean* data);
typedef void (* PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum value, GLuint index, GLint* data);
typedef GLboolean (* PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);

typedef void (* PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);
typedef void (* PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);

typedef void (* PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);

typedef void (* PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (* PFNGLFOGCOORDDEXTPROC) (GLdouble coord);
typedef void (* PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);
typedef void (* PFNGLFOGCOORDFEXTPROC) (GLfloat coord);
typedef void (* PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);

typedef void (* PFNGLFRAGMENTCOLORMATERIALEXTPROC) (GLenum face, GLenum mode);
typedef void (* PFNGLFRAGMENTLIGHTMODELFEXTPROC) (GLenum pname, GLfloat param);
typedef void (* PFNGLFRAGMENTLIGHTMODELFVEXTPROC) (GLenum pname, GLfloat* params);
typedef void (* PFNGLFRAGMENTLIGHTMODELIEXTPROC) (GLenum pname, GLint param);
typedef void (* PFNGLFRAGMENTLIGHTMODELIVEXTPROC) (GLenum pname, GLint* params);
typedef void (* PFNGLFRAGMENTLIGHTFEXTPROC) (GLenum light, GLenum pname, GLfloat param);
typedef void (* PFNGLFRAGMENTLIGHTFVEXTPROC) (GLenum light, GLenum pname, GLfloat* params);
typedef void (* PFNGLFRAGMENTLIGHTIEXTPROC) (GLenum light, GLenum pname, GLint param);
typedef void (* PFNGLFRAGMENTLIGHTIVEXTPROC) (GLenum light, GLenum pname, GLint* params);
typedef void (* PFNGLFRAGMENTMATERIALFEXTPROC) (GLenum face, GLenum pname, const GLfloat param);
typedef void (* PFNGLFRAGMENTMATERIALFVEXTPROC) (GLenum face, GLenum pname, const GLfloat* params);
typedef void (* PFNGLFRAGMENTMATERIALIEXTPROC) (GLenum face, GLenum pname, const GLint param);
typedef void (* PFNGLFRAGMENTMATERIALIVEXTPROC) (GLenum face, GLenum pname, const GLint* params);
typedef void (* PFNGLGETFRAGMENTLIGHTFVEXTPROC) (GLenum light, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETFRAGMENTLIGHTIVEXTPROC) (GLenum light, GLenum pname, GLint* params);
typedef void (* PFNGLGETFRAGMENTMATERIALFVEXTPROC) (GLenum face, GLenum pname, const GLfloat* params);
typedef void (* PFNGLGETFRAGMENTMATERIALIVEXTPROC) (GLenum face, GLenum pname, const GLint* params);
typedef void (* PFNGLLIGHTENVIEXTPROC) (GLenum pname, GLint param);

typedef void (* PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);

typedef void (* PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (* PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
typedef void (* PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
typedef GLenum (* PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
typedef void (* PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint* framebuffers);
typedef void (* PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint* renderbuffers);
typedef void (* PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (* PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (* PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (* PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (* PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint* framebuffers);
typedef void (* PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint* renderbuffers);
typedef void (* PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);
typedef void (* PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint* params);
typedef void (* PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint* params);
typedef GLboolean (* PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
typedef GLboolean (* PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
typedef void (* PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (* PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (* PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (* PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint value);

typedef void (* PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat* params);
typedef void (* PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat* params);

typedef void (* PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const GLchar *name);
typedef GLint (* PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);
typedef void (* PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *params);
typedef void (* PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (* PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *params);
typedef void (* PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);
typedef void (* PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (* PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);
typedef void (* PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (* PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (* PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (* PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (* PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (* PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);
typedef void (* PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);
typedef void (* PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);
typedef void (* PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (* PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);
typedef void (* PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);
typedef void (* PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);
typedef void (* PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (* PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);
typedef void (* PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);
typedef void (* PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (* PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (* PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);
typedef void (* PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (* PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);
typedef void (* PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);
typedef void (* PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);
typedef void (* PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (* PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (* PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);
typedef void (* PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);

typedef void (* PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void* values);
typedef void (* PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void* values);
typedef void (* PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (* PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);
typedef void (* PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);
typedef void (* PFNGLRESETMINMAXEXTPROC) (GLenum target);
typedef void (* PFNGLINDEXFUNCEXTPROC) (GLenum func, GLfloat ref);

typedef void (* PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);
typedef void (* PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);
typedef void (* PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);
typedef void (* PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);
typedef void (* PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint* first, const GLsizei *count, GLsizei primcount);
typedef void (* PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, GLsizei* count, GLenum type, const GLvoid **indices, GLsizei primcount);

typedef void (* PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);
typedef void (* PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);
typedef void (* PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void* data);
typedef void (* PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, void* data);
typedef void (* PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat* params);
typedef void (* PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint* params);
typedef void (* PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, const GLfloat param);
typedef void (* PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat* params);
typedef void (* PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, const GLint param);
typedef void (* PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint* params);
typedef void (* PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);
typedef void (* PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat* params);

typedef void (* PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);

typedef void (* PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);
typedef void (* PFNGLBEGINSCENEEXTPROC) (void);
typedef void (* PFNGLENDSCENEEXTPROC) (void);

typedef void (* PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);
typedef void (* PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);
typedef void (* PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);
typedef void (* PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);
typedef void (* PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);
typedef void (* PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);
typedef void (* PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);
typedef void (* PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);
typedef void (* PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);
typedef void (* PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);
typedef void (* PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);
typedef void (* PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);
typedef void (* PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);
typedef void (* PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);
typedef void (* PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);
typedef void (* PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);
typedef void (* PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);

typedef void (* PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);
typedef GLuint (* PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar* string);
typedef void (* PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);
typedef void (* PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
typedef void (* PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);
typedef void (* PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);
typedef void (* PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void* pixels);

typedef void (* PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);

typedef void (* PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (* PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
typedef void (* PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
typedef void (* PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (* PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
typedef void (* PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (* PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);

typedef GLboolean (* PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint* textures, GLboolean* residences);
typedef void (* PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);
typedef void (* PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint* textures);
typedef void (* PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint* textures);
typedef GLboolean (* PFNGLISTEXTUREEXTPROC) (GLuint texture);
typedef void (* PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint* textures, const GLclampf* priorities);

typedef void (* PFNGLTEXTURENORMALEXTPROC) (GLenum mode);

typedef void (* PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64EXT *params);
typedef void (* PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64EXT *params);

typedef void (* PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);
typedef void (* PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer);
typedef void (* PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (* PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (* PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);
typedef void (* PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei *size, GLenum *type, GLchar *name);
typedef void (* PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, const GLchar ** varyings, GLenum bufferMode);

typedef void (* PFNGLARRAYELEMENTEXTPROC) (GLint i);
typedef void (* PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void* pointer);
typedef void (* PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);
typedef void (* PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean* pointer);
typedef void (* PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const void* pointer);
typedef void (* PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const void* pointer);
typedef void (* PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void* pointer);
typedef void (* PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void* pointer);
typedef void (* PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble* params);
typedef void (* PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (* PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
typedef void (* PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (* PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void* pointer);

typedef void (* PFNGLBEGINVERTEXSHADEREXTPROC) (void);
typedef GLuint (* PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);
typedef GLuint (* PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);
typedef GLuint (* PFNGLBINDPARAMETEREXTPROC) (GLenum value);
typedef GLuint (* PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);
typedef GLuint (* PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);
typedef void (* PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);
typedef void (* PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);
typedef void (* PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);
typedef void (* PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);
typedef void (* PFNGLENDVERTEXSHADEREXTPROC) (void);
typedef void (* PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);
typedef GLuint (* PFNGLGENSYMBOLSEXTPROC) (GLenum dataType, GLenum storageType, GLenum range, GLuint components);
typedef GLuint (* PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);
typedef void (* PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
typedef void (* PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
typedef void (* PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
typedef void (* PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
typedef void (* PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
typedef void (* PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
typedef void (* PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
typedef void (* PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
typedef void (* PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
typedef void (* PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid **data);
typedef void (* PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);
typedef GLboolean (* PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);
typedef void (* PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, GLvoid *addr);
typedef void (* PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, GLvoid *addr);
typedef void (* PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);
typedef void (* PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);
typedef void (* PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
typedef void (* PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (* PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, GLvoid *addr);
typedef void (* PFNGLVARIANTBVEXTPROC) (GLuint id, GLbyte *addr);
typedef void (* PFNGLVARIANTDVEXTPROC) (GLuint id, GLdouble *addr);
typedef void (* PFNGLVARIANTFVEXTPROC) (GLuint id, GLfloat *addr);
typedef void (* PFNGLVARIANTIVEXTPROC) (GLuint id, GLint *addr);
typedef void (* PFNGLVARIANTSVEXTPROC) (GLuint id, GLshort *addr);
typedef void (* PFNGLVARIANTUBVEXTPROC) (GLuint id, GLubyte *addr);
typedef void (* PFNGLVARIANTUIVEXTPROC) (GLuint id, GLuint *addr);
typedef void (* PFNGLVARIANTUSVEXTPROC) (GLuint id, GLushort *addr);
typedef void (* PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);

typedef void (* PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, void* pointer);
typedef void (* PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);
typedef void (* PFNGLVERTEXWEIGHTFVEXTPROC) (GLfloat* weight);

typedef GLsync (* PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);

typedef void (* PFNGLFRAMETERMINATORGREMEDYPROC) (void);

typedef void (* PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const void* string);
typedef void (* PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat* params);
typedef void (* PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint* params);
typedef void (* PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, const GLfloat param);
typedef void (* PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat* params);
typedef void (* PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, const GLint param);
typedef void (* PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint* params);
typedef void (* PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum* mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
typedef void (* PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum* mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount, GLint modestride);
typedef void (* PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid ** pointer, GLint ptrstride);
typedef void (* PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean ** pointer, GLint ptrstride);
typedef void (* PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid ** pointer, GLint ptrstride);
typedef void (* PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid ** pointer, GLint ptrstride);
typedef void (* PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid ** pointer, GLint ptrstride);
typedef void (* PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid ** pointer, GLint ptrstride);
typedef void (* PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid ** pointer, GLint ptrstride);
typedef void (* PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid ** pointer, GLint ptrstride);

typedef void (* PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const void** pointer);
typedef void (* PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const void** pointer);
typedef void (* PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const void** pointer);
typedef void (* PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const void** pointer);

typedef void (* PFNGLTEXSCISSORFUNCINTELPROC) (GLenum target, GLenum lfunc, GLenum hfunc);
typedef void (* PFNGLTEXSCISSORINTELPROC) (GLenum target, GLclampf tlow, GLclampf thigh);

typedef void (*GLDEBUGPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar* message, GLvoid* userParam);
typedef void (* PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, void* userParam);
typedef void (* PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint* ids, GLboolean enabled);
typedef void (* PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar* buf);
typedef GLuint (* PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufsize, GLenum* sources, GLenum* types, GLuint* ids, GLenum* severities, GLsizei* lengths, GLchar* messageLog);
typedef void (* PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei* length, GLchar *label);
typedef void (* PFNGLGETOBJECTPTRLABELPROC) (void* ptr, GLsizei bufSize, GLsizei* length, GLchar *label);
typedef void (* PFNGLGETPOINTERVPROC) (GLenum pname, void** params);
typedef void (* PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar* label);
typedef void (* PFNGLOBJECTPTRLABELPROC) (void* ptr, GLsizei length, const GLchar* label);
typedef void (* PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef GLuint (* PFNGLBUFFERREGIONENABLEDPROC) (void);
typedef void (* PFNGLDELETEBUFFERREGIONPROC) (GLenum region);
typedef void (* PFNGLDRAWBUFFERREGIONPROC) (GLuint region, GLint x, GLint y, GLsizei width, GLsizei height, GLint xDest, GLint yDest);
typedef GLuint (* PFNGLNEWBUFFERREGIONPROC) (GLenum region);
typedef void (* PFNGLREADBUFFERREGIONPROC) (GLuint region, GLint x, GLint y, GLsizei width, GLsizei height);

typedef void (* PFNGLRESIZEBUFFERSMESAPROC) (void);

typedef void (* PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);
typedef void (* PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble* p);
typedef void (* PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);
typedef void (* PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat* p);
typedef void (* PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);
typedef void (* PFNGLWINDOWPOS2IVMESAPROC) (const GLint* p);
typedef void (* PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);
typedef void (* PFNGLWINDOWPOS2SVMESAPROC) (const GLshort* p);
typedef void (* PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble* p);
typedef void (* PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat* p);
typedef void (* PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);
typedef void (* PFNGLWINDOWPOS3IVMESAPROC) (const GLint* p);
typedef void (* PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);
typedef void (* PFNGLWINDOWPOS3SVMESAPROC) (const GLshort* p);
typedef void (* PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble);
typedef void (* PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble* p);
typedef void (* PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat* p);
typedef void (* PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);
typedef void (* PFNGLWINDOWPOS4IVMESAPROC) (const GLint* p);
typedef void (* PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (* PFNGLWINDOWPOS4SVMESAPROC) (const GLshort* p);

typedef GLuint64 (* PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef GLuint64 (* PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);
typedef GLuint64 (* PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler);
typedef GLboolean (* PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);
typedef GLboolean (* PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);
typedef void (* PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);
typedef void (* PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);
typedef void (* PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);
typedef void (* PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);
typedef void (* PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GLuint64 value);
typedef void (* PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64* values);
typedef void (* PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);
typedef void (* PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLuint64* value);
typedef void (* PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);
typedef void (* PFNGLENDCONDITIONALRENDERNVPROC) (void);
typedef void (* PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);

typedef void (* PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);
typedef void (* PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);
typedef void (* PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);

typedef void (* PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);
typedef void (* PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint* params);
typedef void (* PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void* points);
typedef void (* PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void* points);
typedef void (* PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat* params);
typedef void (* PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint* params);

typedef void (* PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat* val);
typedef void (* PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);
typedef void (* PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);

typedef void (* PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint* fences);
typedef void (* PFNGLFINISHFENCENVPROC) (GLuint fence);
typedef void (* PFNGLGENFENCESNVPROC) (GLsizei n, GLuint* fences);
typedef void (* PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint* params);
typedef GLboolean (* PFNGLISFENCENVPROC) (GLuint fence);
typedef void (* PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);
typedef GLboolean (* PFNGLTESTFENCENVPROC) (GLuint fence);

typedef void (* PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte* name, GLdouble *params);
typedef void (* PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte* name, GLfloat *params);
typedef void (* PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte* name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte* name, const GLdouble v[]);
typedef void (* PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte* name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte* name, const GLfloat v[]);
typedef void (* PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);

typedef void (* PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);
typedef void (* PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (* PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);
typedef void (* PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (* PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);
typedef void (* PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);
typedef void (* PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);
typedef void (* PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (* PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);
typedef void (* PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (* PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);
typedef void (* PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);
typedef void (* PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);

typedef void (* PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT* params);
typedef void (* PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT* params);
typedef void (* PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64EXT x);
typedef void (* PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT* value);
typedef void (* PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x);
typedef void (* PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT* value);
typedef void (* PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
typedef void (* PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT* value);
typedef void (* PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (* PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT* value);
typedef void (* PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (* PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT* value);
typedef void (* PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (* PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT* value);
typedef void (* PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (* PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT* value);
typedef void (* PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (* PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT* value);
typedef void (* PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);
typedef void (* PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT* value);
typedef void (* PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);
typedef void (* PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT* value);
typedef void (* PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);
typedef void (* PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT* value);
typedef void (* PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (* PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT* value);
typedef void (* PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (* PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT* value);
typedef void (* PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (* PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT* value);
typedef void (* PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (* PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT* value);
typedef void (* PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (* PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT* value);

typedef unsigned short GLhalf;
typedef void (* PFNGLCOLOR3HNVPROC) (GLhalf red, GLhalf green, GLhalf blue);
typedef void (* PFNGLCOLOR3HVNVPROC) (const GLhalf* v);
typedef void (* PFNGLCOLOR4HNVPROC) (GLhalf red, GLhalf green, GLhalf blue, GLhalf alpha);
typedef void (* PFNGLCOLOR4HVNVPROC) (const GLhalf* v);
typedef void (* PFNGLFOGCOORDHNVPROC) (GLhalf fog);
typedef void (* PFNGLFOGCOORDHVNVPROC) (const GLhalf* fog);
typedef void (* PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalf s);
typedef void (* PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalf* v);
typedef void (* PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalf s, GLhalf t);
typedef void (* PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalf* v);
typedef void (* PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalf s, GLhalf t, GLhalf r);
typedef void (* PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalf* v);
typedef void (* PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalf s, GLhalf t, GLhalf r, GLhalf q);
typedef void (* PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalf* v);
typedef void (* PFNGLNORMAL3HNVPROC) (GLhalf nx, GLhalf ny, GLhalf nz);
typedef void (* PFNGLNORMAL3HVNVPROC) (const GLhalf* v);
typedef void (* PFNGLSECONDARYCOLOR3HNVPROC) (GLhalf red, GLhalf green, GLhalf blue);
typedef void (* PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalf* v);
typedef void (* PFNGLTEXCOORD1HNVPROC) (GLhalf s);
typedef void (* PFNGLTEXCOORD1HVNVPROC) (const GLhalf* v);
typedef void (* PFNGLTEXCOORD2HNVPROC) (GLhalf s, GLhalf t);
typedef void (* PFNGLTEXCOORD2HVNVPROC) (const GLhalf* v);
typedef void (* PFNGLTEXCOORD3HNVPROC) (GLhalf s, GLhalf t, GLhalf r);
typedef void (* PFNGLTEXCOORD3HVNVPROC) (const GLhalf* v);
typedef void (* PFNGLTEXCOORD4HNVPROC) (GLhalf s, GLhalf t, GLhalf r, GLhalf q);
typedef void (* PFNGLTEXCOORD4HVNVPROC) (const GLhalf* v);
typedef void (* PFNGLVERTEX2HNVPROC) (GLhalf x, GLhalf y);
typedef void (* PFNGLVERTEX2HVNVPROC) (const GLhalf* v);
typedef void (* PFNGLVERTEX3HNVPROC) (GLhalf x, GLhalf y, GLhalf z);
typedef void (* PFNGLVERTEX3HVNVPROC) (const GLhalf* v);
typedef void (* PFNGLVERTEX4HNVPROC) (GLhalf x, GLhalf y, GLhalf z, GLhalf w);
typedef void (* PFNGLVERTEX4HVNVPROC) (const GLhalf* v);
typedef void (* PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalf x);
typedef void (* PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalf* v);
typedef void (* PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalf x, GLhalf y);
typedef void (* PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalf* v);
typedef void (* PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalf x, GLhalf y, GLhalf z);
typedef void (* PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalf* v);
typedef void (* PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalf x, GLhalf y, GLhalf z, GLhalf w);
typedef void (* PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalf* v);
typedef void (* PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalf* v);
typedef void (* PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalf* v);
typedef void (* PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalf* v);
typedef void (* PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalf* v);
typedef void (* PFNGLVERTEXWEIGHTHNVPROC) (GLhalf weight);
typedef void (* PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalf* weight);
typedef void (* PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);
typedef void (* PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint* ids);
typedef void (* PFNGLENDOCCLUSIONQUERYNVPROC) (void);
typedef void (* PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint* ids);
typedef void (* PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint* params);
typedef void (* PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint* params);
typedef GLboolean (* PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);
typedef void (* PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint *params);
typedef void (* PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint *params);
typedef void (* PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat *params);
typedef void (* PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);
typedef void (* PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void* paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
typedef void (* PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);
typedef void (* PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void* paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
typedef void (* PFNGLCOVERSTROKEPATHNVPROC) (GLuint name, GLenum coverMode);
typedef void (* PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);
typedef GLuint (* PFNGLGENPATHSNVPROC) (GLsizei range);
typedef void (* PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat* value);
typedef void (* PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint* value);
typedef void (* PFNGLGETPATHCOMMANDSNVPROC) (GLuint name, GLubyte* commands);
typedef void (* PFNGLGETPATHCOORDSNVPROC) (GLuint name, GLfloat* coords);
typedef void (* PFNGLGETPATHDASHARRAYNVPROC) (GLuint name, GLfloat* dashArray);
typedef GLfloat (* PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments);
typedef void (* PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint fistPathName, GLsizei numPaths, GLsizei stride, GLfloat* metrics);
typedef void (* PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void* paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);
typedef void (* PFNGLGETPATHPARAMETERFVNVPROC) (GLuint name, GLenum param, GLfloat* value);
typedef void (* PFNGLGETPATHPARAMETERIVNVPROC) (GLuint name, GLenum param, GLint* value);
typedef void (* PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void* paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);
typedef void (* PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloat* value);
typedef void (* PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint* value);
typedef void (* PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
typedef GLboolean (* PFNGLISPATHNVPROC) (GLuint path);
typedef GLboolean (* PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x, GLfloat y);
typedef GLboolean (* PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y);
typedef void (* PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat* coeffs);
typedef void (* PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyte* commands, GLsizei numCoords, GLenum coordType, const GLvoid*coords);
typedef void (* PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType, const void* coords);
typedef void (* PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum zfunc);
typedef void (* PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat* dashArray);
typedef void (* PFNGLPATHFOGGENNVPROC) (GLenum genMode);
typedef void (* PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, const void* fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (* PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const void* fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const GLvoid*charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (* PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);
typedef void (* PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat* value);
typedef void (* PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);
typedef void (* PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint* value);
typedef void (* PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);
typedef void (* PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);
typedef void (* PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, const void* pathString);
typedef void (* PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte* commands, GLsizei numCoords, GLenum coordType, const GLvoid*coords);
typedef void (* PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void* coords);
typedef void (* PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat* coeffs);
typedef GLboolean (* PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat* x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);
typedef void (* PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void* paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);
typedef void (* PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);
typedef void (* PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void* paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);
typedef void (* PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask);
typedef void (* PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat* transformValues);
typedef void (* PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLuint paths[], const GLfloat weights[]);

typedef void (* PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);
typedef void (* PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, void* pointer);

typedef void (* PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);
typedef void (* PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint* params);

typedef void (* PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT* params);
typedef void (* PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint* params);
typedef void (* PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT* params);
typedef void (* PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint* params);
typedef void (* PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
typedef void (* PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);

typedef void (* PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);
typedef void (* PFNGLPRIMITIVERESTARTNVPROC) (void);

typedef void (* PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (* PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
typedef void (* PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);
typedef void (* PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat* params);
typedef void (* PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);
typedef void (* PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint* params);
typedef void (* PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (* PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint* params);
typedef void (* PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint* params);
typedef void (* PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint* params);

typedef void (* PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat* params);
typedef void (* PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT* params);
typedef void (* PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT* result);
typedef void (* PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT* params);
typedef GLboolean (* PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);
typedef GLboolean (* PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
typedef void (* PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
typedef void (* PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
typedef void (* PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
typedef void (* PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
typedef void (* PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
typedef void (* PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT* value);
typedef void (* PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
typedef void (* PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT* value);
typedef void (* PFNGLTEXTUREBARRIERNVPROC) (void);
typedef void (* PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (* PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (* PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (* PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (* PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (* PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);

typedef void (* PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
typedef void (* PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
typedef void (* PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
typedef void (* PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (* PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (* PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);
typedef void (* PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
typedef void (* PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
typedef GLint (* PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
typedef void (* PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
typedef void (* PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);

typedef void (* PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
typedef void (* PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint* ids);
typedef void (* PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
typedef void (* PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint* ids);
typedef GLboolean (* PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);
typedef void (* PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);
typedef void (* PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);

typedef GLintptr GLvdpauSurfaceNV;
typedef void (* PFNGLVDPAUFININVPROC) (void);
typedef void (* PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei* length, GLint *values);
typedef void (* PFNGLVDPAUINITNVPROC) (const void* vdpDevice, const GLvoid*getProcAddress);
typedef void (* PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);
typedef void (* PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceNV* surfaces);
typedef GLvdpauSurfaceNV (* PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (const void* vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
typedef GLvdpauSurfaceNV (* PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const void* vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
typedef void (* PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access);
typedef void (* PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurfaceNV* surfaces);
typedef void (* PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);

typedef void (* PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);
typedef void (* PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, void* pointer);
typedef void (* PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT* params);
typedef void (* PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64EXT* params);
typedef void (* PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);
typedef void (* PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT* v);
typedef void (* PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);
typedef void (* PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT* v);
typedef void (* PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y);
typedef void (* PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT* v);
typedef void (* PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y);
typedef void (* PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT* v);
typedef void (* PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (* PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT* v);
typedef void (* PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (* PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT* v);
typedef void (* PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (* PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT* v);
typedef void (* PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (* PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT* v);
typedef void (* PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);

typedef void (* PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
typedef void (* PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (* PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);
typedef void (* PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
typedef void (* PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT result[]);
typedef void (* PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
typedef void (* PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
typedef void (* PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (* PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (* PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
typedef void (* PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
typedef void (* PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);

typedef GLboolean (* PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint* ids, GLboolean *residences);
typedef void (* PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);
typedef void (* PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint* ids);
typedef void (* PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat* params);
typedef void (* PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint* ids);
typedef void (* PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble* params);
typedef void (* PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte* program);
typedef void (* PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint* params);
typedef void (* PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint* params);
typedef void (* PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid** pointer);
typedef void (* PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble* params);
typedef void (* PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint* params);
typedef GLboolean (* PFNGLISPROGRAMNVPROC) (GLuint id);
typedef void (* PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte* program);
typedef void (* PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble* params);
typedef void (* PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat* params);
typedef void (* PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsizei num, const GLdouble* params);
typedef void (* PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsizei num, const GLfloat* params);
typedef void (* PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, GLuint* ids);
typedef void (* PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);
typedef void (* PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);
typedef void (* PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);
typedef void (* PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);
typedef void (* PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (* PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);
typedef void (* PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);
typedef void (* PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (* PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (* PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (* PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (* PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte* v);
typedef void (* PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void* pointer);
typedef void (* PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei n, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei n, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei n, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei n, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei n, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei n, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei n, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei n, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei n, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei n, const GLdouble* v);
typedef void (* PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei n, const GLfloat* v);
typedef void (* PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei n, const GLshort* v);
typedef void (* PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei n, const GLubyte* v);
typedef void (* PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);
typedef void (* PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
typedef void (* PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
typedef void (* PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);
typedef void (* PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble* params);
typedef void (* PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint* params);
typedef void (* PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, GLint* params);
typedef GLenum (* PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint* sequence_num, GLuint64EXT *capture_time);
typedef void (* PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble* params);
typedef void (* PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat* params);
typedef void (* PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint* params);
typedef void (* PFNGLCLEARDEPTHFOESPROC) (GLclampd depth);
typedef void (* PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat* equation);
typedef void (* PFNGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);
typedef void (* PFNGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef void (* PFNGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat* equation);
typedef void (* PFNGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef const GLchar* (* PFNGLERRORSTRINGREGALPROC) (GLenum error);

typedef GLboolean (* PFNGLGETEXTENSIONREGALPROC) (const GLchar* ext);
typedef GLboolean (* PFNGLISSUPPORTEDREGALPROC) (const GLchar* ext);

typedef void (* PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat* points);
typedef void (* PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat* points);

typedef void (* PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat* points);
typedef void (* PFNGLGETFOGFUNCSGISPROC) (GLfloat* points);
typedef void (* PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);
typedef void (* PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);

typedef void (* PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat* points);
typedef void (* PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat* points);

typedef void (* PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei extent, GLint border, GLenum format, GLenum type, const void* pixels);
typedef void (* PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei extent, GLenum format, GLenum type, const void* pixels);

typedef void (* PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat* weights);
typedef void (* PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat* weights);

typedef void (* PFNGLASYNCMARKERSGIXPROC) (GLuint marker);
typedef void (* PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);
typedef GLint (* PFNGLFINISHASYNCSGIXPROC) (GLuint* markerp);
typedef GLuint (* PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);
typedef GLboolean (* PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);
typedef GLint (* PFNGLPOLLASYNCSGIXPROC) (GLuint* markerp);

typedef void (* PFNGLFLUSHRASTERSGIXPROC) (void);
typedef void (* PFNGLTEXTUREFOGSGIXPROC) (GLenum pname);

typedef void (* PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);
typedef void (* PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);
typedef void (* PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, GLfloat* params);
typedef void (* PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);
typedef void (* PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, GLint* params);
typedef void (* PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);
typedef void (* PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat* params);
typedef void (* PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);
typedef void (* PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint* params);
typedef void (* PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, const GLfloat param);
typedef void (* PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat* params);
typedef void (* PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, const GLint param);
typedef void (* PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint* params);
typedef void (* PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum value, GLfloat* data);
typedef void (* PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum value, GLint* data);
typedef void (* PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat* data);
typedef void (* PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint* data);

typedef void (* PFNGLFRAMEZOOMSGIXPROC) (GLint factor);
typedef void (* PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);
typedef void (* PFNGLREFERENCEPLANESGIXPROC) (const GLdouble* equation);
typedef void (* PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);
typedef void (* PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, GLfloat* params);
typedef void (* PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);
typedef void (* PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, GLint* params);

typedef void (* PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);

typedef void (* PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat* params);
typedef void (* PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint* params);
typedef void (* PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void* table);
typedef void (* PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (* PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat* params);
typedef void (* PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint* params);
typedef void (* PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, void* table);
typedef void (* PFNGLFINISHTEXTURESUNXPROC) (void);
typedef void (* PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);
typedef void (* PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);
typedef void (* PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);
typedef void (* PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);
typedef void (* PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);
typedef void (* PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);
typedef void (* PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);
typedef void (* PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);
typedef void (* PFNGLREADVIDEOPIXELSSUNPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
typedef void (* PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const void* pointer);
typedef void (* PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);
typedef void (* PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte* code);
typedef void (* PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);
typedef void (* PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint* code);
typedef void (* PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);
typedef void (* PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort* code);

typedef void (* PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat* c, const GLfloat *v);
typedef void (* PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat* c, const GLfloat *n, const GLfloat *v);
typedef void (* PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
typedef void (* PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte* c, const GLfloat *v);
typedef void (* PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte* c, const GLfloat *v);
typedef void (* PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat* n, const GLfloat *v);
typedef void (* PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint* rc, const GLfloat *c, const GLfloat *v);
typedef void (* PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint* rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (* PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint* rc, const GLubyte *c, const GLfloat *v);
typedef void (* PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint* rc, const GLfloat *n, const GLfloat *v);
typedef void (* PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint* rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (* PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint* rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);
typedef void (* PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint* rc, const GLfloat *tc, const GLfloat *v);
typedef void (* PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint* rc, const GLfloat *v);
typedef void (* PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat* tc, const GLfloat *c, const GLfloat *v);
typedef void (* PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat* tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (* PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat* tc, const GLubyte *c, const GLfloat *v);
typedef void (* PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat* tc, const GLfloat *n, const GLfloat *v);
typedef void (* PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (* PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat* tc, const GLfloat *v);
typedef void (* PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat* tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (* PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat* tc, const GLfloat *v);

typedef void (* PFNGLADDSWAPHINTRECTWINPROC) (GLint x, GLint y, GLsizei width, GLsizei height);

PFNGLCOPYTEXSUBIMAGE3DPROC __glewCopyTexSubImage3D;
PFNGLDRAWRANGEELEMENTSPROC __glewDrawRangeElements;
PFNGLTEXIMAGE3DPROC __glewTexImage3D;
PFNGLTEXSUBIMAGE3DPROC __glewTexSubImage3D;
PFNGLACTIVETEXTUREPROC __glewActiveTexture;
PFNGLCLIENTACTIVETEXTUREPROC __glewClientActiveTexture;
PFNGLCOMPRESSEDTEXIMAGE1DPROC __glewCompressedTexImage1D;
PFNGLCOMPRESSEDTEXIMAGE2DPROC __glewCompressedTexImage2D;
PFNGLCOMPRESSEDTEXIMAGE3DPROC __glewCompressedTexImage3D;
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC __glewCompressedTexSubImage1D;
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC __glewCompressedTexSubImage2D;
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC __glewCompressedTexSubImage3D;
PFNGLGETCOMPRESSEDTEXIMAGEPROC __glewGetCompressedTexImage;
PFNGLLOADTRANSPOSEMATRIXDPROC __glewLoadTransposeMatrixd;
PFNGLLOADTRANSPOSEMATRIXFPROC __glewLoadTransposeMatrixf;
PFNGLMULTTRANSPOSEMATRIXDPROC __glewMultTransposeMatrixd;
PFNGLMULTTRANSPOSEMATRIXFPROC __glewMultTransposeMatrixf;
PFNGLMULTITEXCOORD1DPROC __glewMultiTexCoord1d;
PFNGLMULTITEXCOORD1DVPROC __glewMultiTexCoord1dv;
PFNGLMULTITEXCOORD1FPROC __glewMultiTexCoord1f;
PFNGLMULTITEXCOORD1FVPROC __glewMultiTexCoord1fv;
PFNGLMULTITEXCOORD1IPROC __glewMultiTexCoord1i;
PFNGLMULTITEXCOORD1IVPROC __glewMultiTexCoord1iv;
PFNGLMULTITEXCOORD1SPROC __glewMultiTexCoord1s;
PFNGLMULTITEXCOORD1SVPROC __glewMultiTexCoord1sv;
PFNGLMULTITEXCOORD2DPROC __glewMultiTexCoord2d;
PFNGLMULTITEXCOORD2DVPROC __glewMultiTexCoord2dv;
PFNGLMULTITEXCOORD2FPROC __glewMultiTexCoord2f;
PFNGLMULTITEXCOORD2FVPROC __glewMultiTexCoord2fv;
PFNGLMULTITEXCOORD2IPROC __glewMultiTexCoord2i;
PFNGLMULTITEXCOORD2IVPROC __glewMultiTexCoord2iv;
PFNGLMULTITEXCOORD2SPROC __glewMultiTexCoord2s;
PFNGLMULTITEXCOORD2SVPROC __glewMultiTexCoord2sv;
PFNGLMULTITEXCOORD3DPROC __glewMultiTexCoord3d;
PFNGLMULTITEXCOORD3DVPROC __glewMultiTexCoord3dv;
PFNGLMULTITEXCOORD3FPROC __glewMultiTexCoord3f;
PFNGLMULTITEXCOORD3FVPROC __glewMultiTexCoord3fv;
PFNGLMULTITEXCOORD3IPROC __glewMultiTexCoord3i;
PFNGLMULTITEXCOORD3IVPROC __glewMultiTexCoord3iv;
PFNGLMULTITEXCOORD3SPROC __glewMultiTexCoord3s;
PFNGLMULTITEXCOORD3SVPROC __glewMultiTexCoord3sv;
PFNGLMULTITEXCOORD4DPROC __glewMultiTexCoord4d;
PFNGLMULTITEXCOORD4DVPROC __glewMultiTexCoord4dv;
PFNGLMULTITEXCOORD4FPROC __glewMultiTexCoord4f;
PFNGLMULTITEXCOORD4FVPROC __glewMultiTexCoord4fv;
PFNGLMULTITEXCOORD4IPROC __glewMultiTexCoord4i;
PFNGLMULTITEXCOORD4IVPROC __glewMultiTexCoord4iv;
PFNGLMULTITEXCOORD4SPROC __glewMultiTexCoord4s;
PFNGLMULTITEXCOORD4SVPROC __glewMultiTexCoord4sv;
PFNGLSAMPLECOVERAGEPROC __glewSampleCoverage;
PFNGLBLENDCOLORPROC __glewBlendColor;
PFNGLBLENDEQUATIONPROC __glewBlendEquation;
PFNGLBLENDFUNCSEPARATEPROC __glewBlendFuncSeparate;
PFNGLFOGCOORDPOINTERPROC __glewFogCoordPointer;
PFNGLFOGCOORDDPROC __glewFogCoordd;
PFNGLFOGCOORDDVPROC __glewFogCoorddv;
PFNGLFOGCOORDFPROC __glewFogCoordf;
PFNGLFOGCOORDFVPROC __glewFogCoordfv;
PFNGLMULTIDRAWARRAYSPROC __glewMultiDrawArrays;
PFNGLMULTIDRAWELEMENTSPROC __glewMultiDrawElements;
PFNGLPOINTPARAMETERFPROC __glewPointParameterf;
PFNGLPOINTPARAMETERFVPROC __glewPointParameterfv;
PFNGLPOINTPARAMETERIPROC __glewPointParameteri;
PFNGLPOINTPARAMETERIVPROC __glewPointParameteriv;
PFNGLSECONDARYCOLOR3BPROC __glewSecondaryColor3b;
PFNGLSECONDARYCOLOR3BVPROC __glewSecondaryColor3bv;
PFNGLSECONDARYCOLOR3DPROC __glewSecondaryColor3d;
PFNGLSECONDARYCOLOR3DVPROC __glewSecondaryColor3dv;
PFNGLSECONDARYCOLOR3FPROC __glewSecondaryColor3f;
PFNGLSECONDARYCOLOR3FVPROC __glewSecondaryColor3fv;
PFNGLSECONDARYCOLOR3IPROC __glewSecondaryColor3i;
PFNGLSECONDARYCOLOR3IVPROC __glewSecondaryColor3iv;
PFNGLSECONDARYCOLOR3SPROC __glewSecondaryColor3s;
PFNGLSECONDARYCOLOR3SVPROC __glewSecondaryColor3sv;
PFNGLSECONDARYCOLOR3UBPROC __glewSecondaryColor3ub;
PFNGLSECONDARYCOLOR3UBVPROC __glewSecondaryColor3ubv;
PFNGLSECONDARYCOLOR3UIPROC __glewSecondaryColor3ui;
PFNGLSECONDARYCOLOR3UIVPROC __glewSecondaryColor3uiv;
PFNGLSECONDARYCOLOR3USPROC __glewSecondaryColor3us;
PFNGLSECONDARYCOLOR3USVPROC __glewSecondaryColor3usv;
PFNGLSECONDARYCOLORPOINTERPROC __glewSecondaryColorPointer;
PFNGLWINDOWPOS2DPROC __glewWindowPos2d;
PFNGLWINDOWPOS2DVPROC __glewWindowPos2dv;
PFNGLWINDOWPOS2FPROC __glewWindowPos2f;
PFNGLWINDOWPOS2FVPROC __glewWindowPos2fv;
PFNGLWINDOWPOS2IPROC __glewWindowPos2i;
PFNGLWINDOWPOS2IVPROC __glewWindowPos2iv;
PFNGLWINDOWPOS2SPROC __glewWindowPos2s;
PFNGLWINDOWPOS2SVPROC __glewWindowPos2sv;
PFNGLWINDOWPOS3DPROC __glewWindowPos3d;
PFNGLWINDOWPOS3DVPROC __glewWindowPos3dv;
PFNGLWINDOWPOS3FPROC __glewWindowPos3f;
PFNGLWINDOWPOS3FVPROC __glewWindowPos3fv;
PFNGLWINDOWPOS3IPROC __glewWindowPos3i;
PFNGLWINDOWPOS3IVPROC __glewWindowPos3iv;
PFNGLWINDOWPOS3SPROC __glewWindowPos3s;
PFNGLWINDOWPOS3SVPROC __glewWindowPos3sv;
PFNGLBEGINQUERYPROC __glewBeginQuery;
PFNGLBINDBUFFERPROC __glewBindBuffer;
PFNGLBUFFERDATAPROC __glewBufferData;
PFNGLBUFFERSUBDATAPROC __glewBufferSubData;
PFNGLDELETEBUFFERSPROC __glewDeleteBuffers;
PFNGLDELETEQUERIESPROC __glewDeleteQueries;
PFNGLENDQUERYPROC __glewEndQuery;
PFNGLGENBUFFERSPROC __glewGenBuffers;
PFNGLGENQUERIESPROC __glewGenQueries;
PFNGLGETBUFFERPARAMETERIVPROC __glewGetBufferParameteriv;
PFNGLGETBUFFERPOINTERVPROC __glewGetBufferPointerv;
PFNGLGETBUFFERSUBDATAPROC __glewGetBufferSubData;
PFNGLGETQUERYOBJECTIVPROC __glewGetQueryObjectiv;
PFNGLGETQUERYOBJECTUIVPROC __glewGetQueryObjectuiv;
PFNGLGETQUERYIVPROC __glewGetQueryiv;
PFNGLISBUFFERPROC __glewIsBuffer;
PFNGLISQUERYPROC __glewIsQuery;
PFNGLMAPBUFFERPROC __glewMapBuffer;
PFNGLUNMAPBUFFERPROC __glewUnmapBuffer;
PFNGLATTACHSHADERPROC __glewAttachShader;
PFNGLBINDATTRIBLOCATIONPROC __glewBindAttribLocation;
PFNGLBLENDEQUATIONSEPARATEPROC __glewBlendEquationSeparate;
PFNGLCOMPILESHADERPROC __glewCompileShader;
PFNGLCREATEPROGRAMPROC __glewCreateProgram;
PFNGLCREATESHADERPROC __glewCreateShader;
PFNGLDELETEPROGRAMPROC __glewDeleteProgram;
PFNGLDELETESHADERPROC __glewDeleteShader;
PFNGLDETACHSHADERPROC __glewDetachShader;
PFNGLDISABLEVERTEXATTRIBARRAYPROC __glewDisableVertexAttribArray;
PFNGLDRAWBUFFERSPROC __glewDrawBuffers;
PFNGLENABLEVERTEXATTRIBARRAYPROC __glewEnableVertexAttribArray;
PFNGLGETACTIVEATTRIBPROC __glewGetActiveAttrib;
PFNGLGETACTIVEUNIFORMPROC __glewGetActiveUniform;
PFNGLGETATTACHEDSHADERSPROC __glewGetAttachedShaders;
PFNGLGETATTRIBLOCATIONPROC __glewGetAttribLocation;
PFNGLGETPROGRAMINFOLOGPROC __glewGetProgramInfoLog;
PFNGLGETPROGRAMIVPROC __glewGetProgramiv;
PFNGLGETSHADERINFOLOGPROC __glewGetShaderInfoLog;
PFNGLGETSHADERSOURCEPROC __glewGetShaderSource;
PFNGLGETSHADERIVPROC __glewGetShaderiv;
PFNGLGETUNIFORMLOCATIONPROC __glewGetUniformLocation;
PFNGLGETUNIFORMFVPROC __glewGetUniformfv;
PFNGLGETUNIFORMIVPROC __glewGetUniformiv;
PFNGLGETVERTEXATTRIBPOINTERVPROC __glewGetVertexAttribPointerv;
PFNGLGETVERTEXATTRIBDVPROC __glewGetVertexAttribdv;
PFNGLGETVERTEXATTRIBFVPROC __glewGetVertexAttribfv;
PFNGLGETVERTEXATTRIBIVPROC __glewGetVertexAttribiv;
PFNGLISPROGRAMPROC __glewIsProgram;
PFNGLISSHADERPROC __glewIsShader;
PFNGLLINKPROGRAMPROC __glewLinkProgram;
PFNGLSHADERSOURCEPROC __glewShaderSource;
PFNGLSTENCILFUNCSEPARATEPROC __glewStencilFuncSeparate;
PFNGLSTENCILMASKSEPARATEPROC __glewStencilMaskSeparate;
PFNGLSTENCILOPSEPARATEPROC __glewStencilOpSeparate;
PFNGLUNIFORM1FPROC __glewUniform1f;
PFNGLUNIFORM1FVPROC __glewUniform1fv;
PFNGLUNIFORM1IPROC __glewUniform1i;
PFNGLUNIFORM1IVPROC __glewUniform1iv;
PFNGLUNIFORM2FPROC __glewUniform2f;
PFNGLUNIFORM2FVPROC __glewUniform2fv;
PFNGLUNIFORM2IPROC __glewUniform2i;
PFNGLUNIFORM2IVPROC __glewUniform2iv;
PFNGLUNIFORM3FPROC __glewUniform3f;
PFNGLUNIFORM3FVPROC __glewUniform3fv;
PFNGLUNIFORM3IPROC __glewUniform3i;
PFNGLUNIFORM3IVPROC __glewUniform3iv;
PFNGLUNIFORM4FPROC __glewUniform4f;
PFNGLUNIFORM4FVPROC __glewUniform4fv;
PFNGLUNIFORM4IPROC __glewUniform4i;
PFNGLUNIFORM4IVPROC __glewUniform4iv;
PFNGLUNIFORMMATRIX2FVPROC __glewUniformMatrix2fv;
PFNGLUNIFORMMATRIX3FVPROC __glewUniformMatrix3fv;
PFNGLUNIFORMMATRIX4FVPROC __glewUniformMatrix4fv;
PFNGLUSEPROGRAMPROC __glewUseProgram;
PFNGLVALIDATEPROGRAMPROC __glewValidateProgram;
PFNGLVERTEXATTRIB1DPROC __glewVertexAttrib1d;
PFNGLVERTEXATTRIB1DVPROC __glewVertexAttrib1dv;
PFNGLVERTEXATTRIB1FPROC __glewVertexAttrib1f;
PFNGLVERTEXATTRIB1FVPROC __glewVertexAttrib1fv;
PFNGLVERTEXATTRIB1SPROC __glewVertexAttrib1s;
PFNGLVERTEXATTRIB1SVPROC __glewVertexAttrib1sv;
PFNGLVERTEXATTRIB2DPROC __glewVertexAttrib2d;
PFNGLVERTEXATTRIB2DVPROC __glewVertexAttrib2dv;
PFNGLVERTEXATTRIB2FPROC __glewVertexAttrib2f;
PFNGLVERTEXATTRIB2FVPROC __glewVertexAttrib2fv;
PFNGLVERTEXATTRIB2SPROC __glewVertexAttrib2s;
PFNGLVERTEXATTRIB2SVPROC __glewVertexAttrib2sv;
PFNGLVERTEXATTRIB3DPROC __glewVertexAttrib3d;
PFNGLVERTEXATTRIB3DVPROC __glewVertexAttrib3dv;
PFNGLVERTEXATTRIB3FPROC __glewVertexAttrib3f;
PFNGLVERTEXATTRIB3FVPROC __glewVertexAttrib3fv;
PFNGLVERTEXATTRIB3SPROC __glewVertexAttrib3s;
PFNGLVERTEXATTRIB3SVPROC __glewVertexAttrib3sv;
PFNGLVERTEXATTRIB4NBVPROC __glewVertexAttrib4Nbv;
PFNGLVERTEXATTRIB4NIVPROC __glewVertexAttrib4Niv;
PFNGLVERTEXATTRIB4NSVPROC __glewVertexAttrib4Nsv;
PFNGLVERTEXATTRIB4NUBPROC __glewVertexAttrib4Nub;
PFNGLVERTEXATTRIB4NUBVPROC __glewVertexAttrib4Nubv;
PFNGLVERTEXATTRIB4NUIVPROC __glewVertexAttrib4Nuiv;
PFNGLVERTEXATTRIB4NUSVPROC __glewVertexAttrib4Nusv;
PFNGLVERTEXATTRIB4BVPROC __glewVertexAttrib4bv;
PFNGLVERTEXATTRIB4DPROC __glewVertexAttrib4d;
PFNGLVERTEXATTRIB4DVPROC __glewVertexAttrib4dv;
PFNGLVERTEXATTRIB4FPROC __glewVertexAttrib4f;
PFNGLVERTEXATTRIB4FVPROC __glewVertexAttrib4fv;
PFNGLVERTEXATTRIB4IVPROC __glewVertexAttrib4iv;
PFNGLVERTEXATTRIB4SPROC __glewVertexAttrib4s;
PFNGLVERTEXATTRIB4SVPROC __glewVertexAttrib4sv;
PFNGLVERTEXATTRIB4UBVPROC __glewVertexAttrib4ubv;
PFNGLVERTEXATTRIB4UIVPROC __glewVertexAttrib4uiv;
PFNGLVERTEXATTRIB4USVPROC __glewVertexAttrib4usv;
PFNGLVERTEXATTRIBPOINTERPROC __glewVertexAttribPointer;
PFNGLUNIFORMMATRIX2X3FVPROC __glewUniformMatrix2x3fv;
PFNGLUNIFORMMATRIX2X4FVPROC __glewUniformMatrix2x4fv;
PFNGLUNIFORMMATRIX3X2FVPROC __glewUniformMatrix3x2fv;
PFNGLUNIFORMMATRIX3X4FVPROC __glewUniformMatrix3x4fv;
PFNGLUNIFORMMATRIX4X2FVPROC __glewUniformMatrix4x2fv;
PFNGLUNIFORMMATRIX4X3FVPROC __glewUniformMatrix4x3fv;
PFNGLBEGINCONDITIONALRENDERPROC __glewBeginConditionalRender;
PFNGLBEGINTRANSFORMFEEDBACKPROC __glewBeginTransformFeedback;
PFNGLBINDFRAGDATALOCATIONPROC __glewBindFragDataLocation;
PFNGLCLAMPCOLORPROC __glewClampColor;
PFNGLCLEARBUFFERFIPROC __glewClearBufferfi;
PFNGLCLEARBUFFERFVPROC __glewClearBufferfv;
PFNGLCLEARBUFFERIVPROC __glewClearBufferiv;
PFNGLCLEARBUFFERUIVPROC __glewClearBufferuiv;
PFNGLCOLORMASKIPROC __glewColorMaski;
PFNGLDISABLEIPROC __glewDisablei;
PFNGLENABLEIPROC __glewEnablei;
PFNGLENDCONDITIONALRENDERPROC __glewEndConditionalRender;
PFNGLENDTRANSFORMFEEDBACKPROC __glewEndTransformFeedback;
PFNGLGETBOOLEANI_VPROC __glewGetBooleani_v;
PFNGLGETFRAGDATALOCATIONPROC __glewGetFragDataLocation;
PFNGLGETSTRINGIPROC __glewGetStringi;
PFNGLGETTEXPARAMETERIIVPROC __glewGetTexParameterIiv;
PFNGLGETTEXPARAMETERIUIVPROC __glewGetTexParameterIuiv;
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC __glewGetTransformFeedbackVarying;
PFNGLGETUNIFORMUIVPROC __glewGetUniformuiv;
PFNGLGETVERTEXATTRIBIIVPROC __glewGetVertexAttribIiv;
PFNGLGETVERTEXATTRIBIUIVPROC __glewGetVertexAttribIuiv;
PFNGLISENABLEDIPROC __glewIsEnabledi;
PFNGLTEXPARAMETERIIVPROC __glewTexParameterIiv;
PFNGLTEXPARAMETERIUIVPROC __glewTexParameterIuiv;
PFNGLTRANSFORMFEEDBACKVARYINGSPROC __glewTransformFeedbackVaryings;
PFNGLUNIFORM1UIPROC __glewUniform1ui;
PFNGLUNIFORM1UIVPROC __glewUniform1uiv;
PFNGLUNIFORM2UIPROC __glewUniform2ui;
PFNGLUNIFORM2UIVPROC __glewUniform2uiv;
PFNGLUNIFORM3UIPROC __glewUniform3ui;
PFNGLUNIFORM3UIVPROC __glewUniform3uiv;
PFNGLUNIFORM4UIPROC __glewUniform4ui;
PFNGLUNIFORM4UIVPROC __glewUniform4uiv;
PFNGLVERTEXATTRIBI1IPROC __glewVertexAttribI1i;
PFNGLVERTEXATTRIBI1IVPROC __glewVertexAttribI1iv;
PFNGLVERTEXATTRIBI1UIPROC __glewVertexAttribI1ui;
PFNGLVERTEXATTRIBI1UIVPROC __glewVertexAttribI1uiv;
PFNGLVERTEXATTRIBI2IPROC __glewVertexAttribI2i;
PFNGLVERTEXATTRIBI2IVPROC __glewVertexAttribI2iv;
PFNGLVERTEXATTRIBI2UIPROC __glewVertexAttribI2ui;
PFNGLVERTEXATTRIBI2UIVPROC __glewVertexAttribI2uiv;
PFNGLVERTEXATTRIBI3IPROC __glewVertexAttribI3i;
PFNGLVERTEXATTRIBI3IVPROC __glewVertexAttribI3iv;
PFNGLVERTEXATTRIBI3UIPROC __glewVertexAttribI3ui;
PFNGLVERTEXATTRIBI3UIVPROC __glewVertexAttribI3uiv;
PFNGLVERTEXATTRIBI4BVPROC __glewVertexAttribI4bv;
PFNGLVERTEXATTRIBI4IPROC __glewVertexAttribI4i;
PFNGLVERTEXATTRIBI4IVPROC __glewVertexAttribI4iv;
PFNGLVERTEXATTRIBI4SVPROC __glewVertexAttribI4sv;
PFNGLVERTEXATTRIBI4UBVPROC __glewVertexAttribI4ubv;
PFNGLVERTEXATTRIBI4UIPROC __glewVertexAttribI4ui;
PFNGLVERTEXATTRIBI4UIVPROC __glewVertexAttribI4uiv;
PFNGLVERTEXATTRIBI4USVPROC __glewVertexAttribI4usv;
PFNGLVERTEXATTRIBIPOINTERPROC __glewVertexAttribIPointer;
PFNGLDRAWARRAYSINSTANCEDPROC __glewDrawArraysInstanced;
PFNGLDRAWELEMENTSINSTANCEDPROC __glewDrawElementsInstanced;
PFNGLPRIMITIVERESTARTINDEXPROC __glewPrimitiveRestartIndex;
PFNGLTEXBUFFERPROC __glewTexBuffer;
PFNGLFRAMEBUFFERTEXTUREPROC __glewFramebufferTexture;
PFNGLGETBUFFERPARAMETERI64VPROC __glewGetBufferParameteri64v;
PFNGLGETINTEGER64I_VPROC __glewGetInteger64i_v;
PFNGLVERTEXATTRIBDIVISORPROC __glewVertexAttribDivisor;
PFNGLBLENDEQUATIONSEPARATEIPROC __glewBlendEquationSeparatei;
PFNGLBLENDEQUATIONIPROC __glewBlendEquationi;
PFNGLBLENDFUNCSEPARATEIPROC __glewBlendFuncSeparatei;
PFNGLBLENDFUNCIPROC __glewBlendFunci;
PFNGLMINSAMPLESHADINGPROC __glewMinSampleShading;
PFNGLTBUFFERMASK3DFXPROC __glewTbufferMask3DFX;
PFNGLDEBUGMESSAGECALLBACKAMDPROC __glewDebugMessageCallbackAMD;
PFNGLDEBUGMESSAGEENABLEAMDPROC __glewDebugMessageEnableAMD;
PFNGLDEBUGMESSAGEINSERTAMDPROC __glewDebugMessageInsertAMD;
PFNGLGETDEBUGMESSAGELOGAMDPROC __glewGetDebugMessageLogAMD;
PFNGLBLENDEQUATIONINDEXEDAMDPROC __glewBlendEquationIndexedAMD;
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC __glewBlendEquationSeparateIndexedAMD;
PFNGLBLENDFUNCINDEXEDAMDPROC __glewBlendFuncIndexedAMD;
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC __glewBlendFuncSeparateIndexedAMD;
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC __glewMultiDrawArraysIndirectAMD;
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC __glewMultiDrawElementsIndirectAMD;
PFNGLDELETENAMESAMDPROC __glewDeleteNamesAMD;
PFNGLGENNAMESAMDPROC __glewGenNamesAMD;
PFNGLISNAMEAMDPROC __glewIsNameAMD;
PFNGLBEGINPERFMONITORAMDPROC __glewBeginPerfMonitorAMD;
PFNGLDELETEPERFMONITORSAMDPROC __glewDeletePerfMonitorsAMD;
PFNGLENDPERFMONITORAMDPROC __glewEndPerfMonitorAMD;
PFNGLGENPERFMONITORSAMDPROC __glewGenPerfMonitorsAMD;
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC __glewGetPerfMonitorCounterDataAMD;
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC __glewGetPerfMonitorCounterInfoAMD;
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC __glewGetPerfMonitorCounterStringAMD;
PFNGLGETPERFMONITORCOUNTERSAMDPROC __glewGetPerfMonitorCountersAMD;
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC __glewGetPerfMonitorGroupStringAMD;
PFNGLGETPERFMONITORGROUPSAMDPROC __glewGetPerfMonitorGroupsAMD;
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC __glewSelectPerfMonitorCountersAMD;
PFNGLSETMULTISAMPLEFVAMDPROC __glewSetMultisamplefvAMD;
PFNGLSTENCILOPVALUEAMDPROC __glewStencilOpValueAMD;
PFNGLTESSELLATIONFACTORAMDPROC __glewTessellationFactorAMD;
PFNGLTESSELLATIONMODEAMDPROC __glewTessellationModeAMD;
PFNGLDRAWELEMENTARRAYAPPLEPROC __glewDrawElementArrayAPPLE;
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC __glewDrawRangeElementArrayAPPLE;
PFNGLELEMENTPOINTERAPPLEPROC __glewElementPointerAPPLE;
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC __glewMultiDrawElementArrayAPPLE;
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC __glewMultiDrawRangeElementArrayAPPLE;
PFNGLDELETEFENCESAPPLEPROC __glewDeleteFencesAPPLE;
PFNGLFINISHFENCEAPPLEPROC __glewFinishFenceAPPLE;
PFNGLFINISHOBJECTAPPLEPROC __glewFinishObjectAPPLE;
PFNGLGENFENCESAPPLEPROC __glewGenFencesAPPLE;
PFNGLISFENCEAPPLEPROC __glewIsFenceAPPLE;
PFNGLSETFENCEAPPLEPROC __glewSetFenceAPPLE;
PFNGLTESTFENCEAPPLEPROC __glewTestFenceAPPLE;
PFNGLTESTOBJECTAPPLEPROC __glewTestObjectAPPLE;
PFNGLBUFFERPARAMETERIAPPLEPROC __glewBufferParameteriAPPLE;
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC __glewFlushMappedBufferRangeAPPLE;
PFNGLGETOBJECTPARAMETERIVAPPLEPROC __glewGetObjectParameterivAPPLE;
PFNGLOBJECTPURGEABLEAPPLEPROC __glewObjectPurgeableAPPLE;
PFNGLOBJECTUNPURGEABLEAPPLEPROC __glewObjectUnpurgeableAPPLE;
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC __glewGetTexParameterPointervAPPLE;
PFNGLTEXTURERANGEAPPLEPROC __glewTextureRangeAPPLE;
PFNGLBINDVERTEXARRAYAPPLEPROC __glewBindVertexArrayAPPLE;
PFNGLDELETEVERTEXARRAYSAPPLEPROC __glewDeleteVertexArraysAPPLE;
PFNGLGENVERTEXARRAYSAPPLEPROC __glewGenVertexArraysAPPLE;
PFNGLISVERTEXARRAYAPPLEPROC __glewIsVertexArrayAPPLE;
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC __glewFlushVertexArrayRangeAPPLE;
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC __glewVertexArrayParameteriAPPLE;
PFNGLVERTEXARRAYRANGEAPPLEPROC __glewVertexArrayRangeAPPLE;
PFNGLDISABLEVERTEXATTRIBAPPLEPROC __glewDisableVertexAttribAPPLE;
PFNGLENABLEVERTEXATTRIBAPPLEPROC __glewEnableVertexAttribAPPLE;
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC __glewIsVertexAttribEnabledAPPLE;
PFNGLMAPVERTEXATTRIB1DAPPLEPROC __glewMapVertexAttrib1dAPPLE;
PFNGLMAPVERTEXATTRIB1FAPPLEPROC __glewMapVertexAttrib1fAPPLE;
PFNGLMAPVERTEXATTRIB2DAPPLEPROC __glewMapVertexAttrib2dAPPLE;
PFNGLMAPVERTEXATTRIB2FAPPLEPROC __glewMapVertexAttrib2fAPPLE;
PFNGLCLEARDEPTHFPROC __glewClearDepthf;
PFNGLDEPTHRANGEFPROC __glewDepthRangef;
PFNGLGETSHADERPRECISIONFORMATPROC __glewGetShaderPrecisionFormat;
PFNGLRELEASESHADERCOMPILERPROC __glewReleaseShaderCompiler;
PFNGLSHADERBINARYPROC __glewShaderBinary;
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC __glewDrawArraysInstancedBaseInstance;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC __glewDrawElementsInstancedBaseInstance;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC __glewDrawElementsInstancedBaseVertexBaseInstance;
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC __glewBindFragDataLocationIndexed;
PFNGLGETFRAGDATAINDEXPROC __glewGetFragDataIndex;
PFNGLCREATESYNCFROMCLEVENTARBPROC __glewCreateSyncFromCLeventARB;
PFNGLCLEARBUFFERDATAPROC __glewClearBufferData;
PFNGLCLEARBUFFERSUBDATAPROC __glewClearBufferSubData;
PFNGLCLEARNAMEDBUFFERDATAEXTPROC __glewClearNamedBufferDataEXT;
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC __glewClearNamedBufferSubDataEXT;
PFNGLCLAMPCOLORARBPROC __glewClampColorARB;
PFNGLDISPATCHCOMPUTEPROC __glewDispatchCompute;
PFNGLDISPATCHCOMPUTEINDIRECTPROC __glewDispatchComputeIndirect;
PFNGLCOPYBUFFERSUBDATAPROC __glewCopyBufferSubData;
PFNGLCOPYIMAGESUBDATAPROC __glewCopyImageSubData;
PFNGLDEBUGMESSAGECALLBACKARBPROC __glewDebugMessageCallbackARB;
PFNGLDEBUGMESSAGECONTROLARBPROC __glewDebugMessageControlARB;
PFNGLDEBUGMESSAGEINSERTARBPROC __glewDebugMessageInsertARB;
PFNGLGETDEBUGMESSAGELOGARBPROC __glewGetDebugMessageLogARB;
PFNGLDRAWBUFFERSARBPROC __glewDrawBuffersARB;
PFNGLBLENDEQUATIONSEPARATEIARBPROC __glewBlendEquationSeparateiARB;
PFNGLBLENDEQUATIONIARBPROC __glewBlendEquationiARB;
PFNGLBLENDFUNCSEPARATEIARBPROC __glewBlendFuncSeparateiARB;
PFNGLBLENDFUNCIARBPROC __glewBlendFunciARB;
PFNGLDRAWELEMENTSBASEVERTEXPROC __glewDrawElementsBaseVertex;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC __glewDrawElementsInstancedBaseVertex;
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC __glewDrawRangeElementsBaseVertex;
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC __glewMultiDrawElementsBaseVertex;
PFNGLDRAWARRAYSINDIRECTPROC __glewDrawArraysIndirect;
PFNGLDRAWELEMENTSINDIRECTPROC __glewDrawElementsIndirect;
PFNGLFRAMEBUFFERPARAMETERIPROC __glewFramebufferParameteri;
PFNGLGETFRAMEBUFFERPARAMETERIVPROC __glewGetFramebufferParameteriv;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC __glewGetNamedFramebufferParameterivEXT;
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC __glewNamedFramebufferParameteriEXT;
PFNGLBINDFRAMEBUFFERPROC __glewBindFramebuffer;
PFNGLBINDRENDERBUFFERPROC __glewBindRenderbuffer;
PFNGLBLITFRAMEBUFFERPROC __glewBlitFramebuffer;
PFNGLCHECKFRAMEBUFFERSTATUSPROC __glewCheckFramebufferStatus;
PFNGLDELETEFRAMEBUFFERSPROC __glewDeleteFramebuffers;
PFNGLDELETERENDERBUFFERSPROC __glewDeleteRenderbuffers;
PFNGLFRAMEBUFFERRENDERBUFFERPROC __glewFramebufferRenderbuffer;
PFNGLFRAMEBUFFERTEXTURE1DPROC __glewFramebufferTexture1D;
PFNGLFRAMEBUFFERTEXTURE2DPROC __glewFramebufferTexture2D;
PFNGLFRAMEBUFFERTEXTURE3DPROC __glewFramebufferTexture3D;
PFNGLFRAMEBUFFERTEXTURELAYERPROC __glewFramebufferTextureLayer;
PFNGLGENFRAMEBUFFERSPROC __glewGenFramebuffers;
PFNGLGENRENDERBUFFERSPROC __glewGenRenderbuffers;
PFNGLGENERATEMIPMAPPROC __glewGenerateMipmap;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC __glewGetFramebufferAttachmentParameteriv;
PFNGLGETRENDERBUFFERPARAMETERIVPROC __glewGetRenderbufferParameteriv;
PFNGLISFRAMEBUFFERPROC __glewIsFramebuffer;
PFNGLISRENDERBUFFERPROC __glewIsRenderbuffer;
PFNGLRENDERBUFFERSTORAGEPROC __glewRenderbufferStorage;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC __glewRenderbufferStorageMultisample;
PFNGLFRAMEBUFFERTEXTUREARBPROC __glewFramebufferTextureARB;
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC __glewFramebufferTextureFaceARB;
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC __glewFramebufferTextureLayerARB;
PFNGLPROGRAMPARAMETERIARBPROC __glewProgramParameteriARB;
PFNGLGETPROGRAMBINARYPROC __glewGetProgramBinary;
PFNGLPROGRAMBINARYPROC __glewProgramBinary;
PFNGLPROGRAMPARAMETERIPROC __glewProgramParameteri;
PFNGLGETUNIFORMDVPROC __glewGetUniformdv;
PFNGLUNIFORM1DPROC __glewUniform1d;
PFNGLUNIFORM1DVPROC __glewUniform1dv;
PFNGLUNIFORM2DPROC __glewUniform2d;
PFNGLUNIFORM2DVPROC __glewUniform2dv;
PFNGLUNIFORM3DPROC __glewUniform3d;
PFNGLUNIFORM3DVPROC __glewUniform3dv;
PFNGLUNIFORM4DPROC __glewUniform4d;
PFNGLUNIFORM4DVPROC __glewUniform4dv;
PFNGLUNIFORMMATRIX2DVPROC __glewUniformMatrix2dv;
PFNGLUNIFORMMATRIX2X3DVPROC __glewUniformMatrix2x3dv;
PFNGLUNIFORMMATRIX2X4DVPROC __glewUniformMatrix2x4dv;
PFNGLUNIFORMMATRIX3DVPROC __glewUniformMatrix3dv;
PFNGLUNIFORMMATRIX3X2DVPROC __glewUniformMatrix3x2dv;
PFNGLUNIFORMMATRIX3X4DVPROC __glewUniformMatrix3x4dv;
PFNGLUNIFORMMATRIX4DVPROC __glewUniformMatrix4dv;
PFNGLUNIFORMMATRIX4X2DVPROC __glewUniformMatrix4x2dv;
PFNGLUNIFORMMATRIX4X3DVPROC __glewUniformMatrix4x3dv;
PFNGLCOLORSUBTABLEPROC __glewColorSubTable;
PFNGLCOLORTABLEPROC __glewColorTable;
PFNGLCOLORTABLEPARAMETERFVPROC __glewColorTableParameterfv;
PFNGLCOLORTABLEPARAMETERIVPROC __glewColorTableParameteriv;
PFNGLCONVOLUTIONFILTER1DPROC __glewConvolutionFilter1D;
PFNGLCONVOLUTIONFILTER2DPROC __glewConvolutionFilter2D;
PFNGLCONVOLUTIONPARAMETERFPROC __glewConvolutionParameterf;
PFNGLCONVOLUTIONPARAMETERFVPROC __glewConvolutionParameterfv;
PFNGLCONVOLUTIONPARAMETERIPROC __glewConvolutionParameteri;
PFNGLCONVOLUTIONPARAMETERIVPROC __glewConvolutionParameteriv;
PFNGLCOPYCOLORSUBTABLEPROC __glewCopyColorSubTable;
PFNGLCOPYCOLORTABLEPROC __glewCopyColorTable;
PFNGLCOPYCONVOLUTIONFILTER1DPROC __glewCopyConvolutionFilter1D;
PFNGLCOPYCONVOLUTIONFILTER2DPROC __glewCopyConvolutionFilter2D;
PFNGLGETCOLORTABLEPROC __glewGetColorTable;
PFNGLGETCOLORTABLEPARAMETERFVPROC __glewGetColorTableParameterfv;
PFNGLGETCOLORTABLEPARAMETERIVPROC __glewGetColorTableParameteriv;
PFNGLGETCONVOLUTIONFILTERPROC __glewGetConvolutionFilter;
PFNGLGETCONVOLUTIONPARAMETERFVPROC __glewGetConvolutionParameterfv;
PFNGLGETCONVOLUTIONPARAMETERIVPROC __glewGetConvolutionParameteriv;
PFNGLGETHISTOGRAMPROC __glewGetHistogram;
PFNGLGETHISTOGRAMPARAMETERFVPROC __glewGetHistogramParameterfv;
PFNGLGETHISTOGRAMPARAMETERIVPROC __glewGetHistogramParameteriv;
PFNGLGETMINMAXPROC __glewGetMinmax;
PFNGLGETMINMAXPARAMETERFVPROC __glewGetMinmaxParameterfv;
PFNGLGETMINMAXPARAMETERIVPROC __glewGetMinmaxParameteriv;
PFNGLGETSEPARABLEFILTERPROC __glewGetSeparableFilter;
PFNGLHISTOGRAMPROC __glewHistogram;
PFNGLMINMAXPROC __glewMinmax;
PFNGLRESETHISTOGRAMPROC __glewResetHistogram;
PFNGLRESETMINMAXPROC __glewResetMinmax;
PFNGLSEPARABLEFILTER2DPROC __glewSeparableFilter2D;
PFNGLDRAWARRAYSINSTANCEDARBPROC __glewDrawArraysInstancedARB;
PFNGLDRAWELEMENTSINSTANCEDARBPROC __glewDrawElementsInstancedARB;
PFNGLVERTEXATTRIBDIVISORARBPROC __glewVertexAttribDivisorARB;
PFNGLGETINTERNALFORMATIVPROC __glewGetInternalformativ;
PFNGLGETINTERNALFORMATI64VPROC __glewGetInternalformati64v;
PFNGLINVALIDATEBUFFERDATAPROC __glewInvalidateBufferData;
PFNGLINVALIDATEBUFFERSUBDATAPROC __glewInvalidateBufferSubData;
PFNGLINVALIDATEFRAMEBUFFERPROC __glewInvalidateFramebuffer;
PFNGLINVALIDATESUBFRAMEBUFFERPROC __glewInvalidateSubFramebuffer;
PFNGLINVALIDATETEXIMAGEPROC __glewInvalidateTexImage;
PFNGLINVALIDATETEXSUBIMAGEPROC __glewInvalidateTexSubImage;
PFNGLFLUSHMAPPEDBUFFERRANGEPROC __glewFlushMappedBufferRange;
PFNGLMAPBUFFERRANGEPROC __glewMapBufferRange;
PFNGLCURRENTPALETTEMATRIXARBPROC __glewCurrentPaletteMatrixARB;
PFNGLMATRIXINDEXPOINTERARBPROC __glewMatrixIndexPointerARB;
PFNGLMATRIXINDEXUBVARBPROC __glewMatrixIndexubvARB;
PFNGLMATRIXINDEXUIVARBPROC __glewMatrixIndexuivARB;
PFNGLMATRIXINDEXUSVARBPROC __glewMatrixIndexusvARB;
PFNGLMULTIDRAWARRAYSINDIRECTPROC __glewMultiDrawArraysIndirect;
PFNGLMULTIDRAWELEMENTSINDIRECTPROC __glewMultiDrawElementsIndirect;
PFNGLSAMPLECOVERAGEARBPROC __glewSampleCoverageARB;
PFNGLACTIVETEXTUREARBPROC __glewActiveTextureARB;
PFNGLCLIENTACTIVETEXTUREARBPROC __glewClientActiveTextureARB;
PFNGLMULTITEXCOORD1DARBPROC __glewMultiTexCoord1dARB;
PFNGLMULTITEXCOORD1DVARBPROC __glewMultiTexCoord1dvARB;
PFNGLMULTITEXCOORD1FARBPROC __glewMultiTexCoord1fARB;
PFNGLMULTITEXCOORD1FVARBPROC __glewMultiTexCoord1fvARB;
PFNGLMULTITEXCOORD1IARBPROC __glewMultiTexCoord1iARB;
PFNGLMULTITEXCOORD1IVARBPROC __glewMultiTexCoord1ivARB;
PFNGLMULTITEXCOORD1SARBPROC __glewMultiTexCoord1sARB;
PFNGLMULTITEXCOORD1SVARBPROC __glewMultiTexCoord1svARB;
PFNGLMULTITEXCOORD2DARBPROC __glewMultiTexCoord2dARB;
PFNGLMULTITEXCOORD2DVARBPROC __glewMultiTexCoord2dvARB;
PFNGLMULTITEXCOORD2FARBPROC __glewMultiTexCoord2fARB;
PFNGLMULTITEXCOORD2FVARBPROC __glewMultiTexCoord2fvARB;
PFNGLMULTITEXCOORD2IARBPROC __glewMultiTexCoord2iARB;
PFNGLMULTITEXCOORD2IVARBPROC __glewMultiTexCoord2ivARB;
PFNGLMULTITEXCOORD2SARBPROC __glewMultiTexCoord2sARB;
PFNGLMULTITEXCOORD2SVARBPROC __glewMultiTexCoord2svARB;
PFNGLMULTITEXCOORD3DARBPROC __glewMultiTexCoord3dARB;
PFNGLMULTITEXCOORD3DVARBPROC __glewMultiTexCoord3dvARB;
PFNGLMULTITEXCOORD3FARBPROC __glewMultiTexCoord3fARB;
PFNGLMULTITEXCOORD3FVARBPROC __glewMultiTexCoord3fvARB;
PFNGLMULTITEXCOORD3IARBPROC __glewMultiTexCoord3iARB;
PFNGLMULTITEXCOORD3IVARBPROC __glewMultiTexCoord3ivARB;
PFNGLMULTITEXCOORD3SARBPROC __glewMultiTexCoord3sARB;
PFNGLMULTITEXCOORD3SVARBPROC __glewMultiTexCoord3svARB;
PFNGLMULTITEXCOORD4DARBPROC __glewMultiTexCoord4dARB;
PFNGLMULTITEXCOORD4DVARBPROC __glewMultiTexCoord4dvARB;
PFNGLMULTITEXCOORD4FARBPROC __glewMultiTexCoord4fARB;
PFNGLMULTITEXCOORD4FVARBPROC __glewMultiTexCoord4fvARB;
PFNGLMULTITEXCOORD4IARBPROC __glewMultiTexCoord4iARB;
PFNGLMULTITEXCOORD4IVARBPROC __glewMultiTexCoord4ivARB;
PFNGLMULTITEXCOORD4SARBPROC __glewMultiTexCoord4sARB;
PFNGLMULTITEXCOORD4SVARBPROC __glewMultiTexCoord4svARB;
PFNGLBEGINQUERYARBPROC __glewBeginQueryARB;
PFNGLDELETEQUERIESARBPROC __glewDeleteQueriesARB;
PFNGLENDQUERYARBPROC __glewEndQueryARB;
PFNGLGENQUERIESARBPROC __glewGenQueriesARB;
PFNGLGETQUERYOBJECTIVARBPROC __glewGetQueryObjectivARB;
PFNGLGETQUERYOBJECTUIVARBPROC __glewGetQueryObjectuivARB;
PFNGLGETQUERYIVARBPROC __glewGetQueryivARB;
PFNGLISQUERYARBPROC __glewIsQueryARB;
PFNGLPOINTPARAMETERFARBPROC __glewPointParameterfARB;
PFNGLPOINTPARAMETERFVARBPROC __glewPointParameterfvARB;
PFNGLGETPROGRAMINTERFACEIVPROC __glewGetProgramInterfaceiv;
PFNGLGETPROGRAMRESOURCEINDEXPROC __glewGetProgramResourceIndex;
PFNGLGETPROGRAMRESOURCELOCATIONPROC __glewGetProgramResourceLocation;
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC __glewGetProgramResourceLocationIndex;
PFNGLGETPROGRAMRESOURCENAMEPROC __glewGetProgramResourceName;
PFNGLGETPROGRAMRESOURCEIVPROC __glewGetProgramResourceiv;
PFNGLPROVOKINGVERTEXPROC __glewProvokingVertex;
PFNGLGETGRAPHICSRESETSTATUSARBPROC __glewGetGraphicsResetStatusARB;
PFNGLGETNCOLORTABLEARBPROC __glewGetnColorTableARB;
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC __glewGetnCompressedTexImageARB;
PFNGLGETNCONVOLUTIONFILTERARBPROC __glewGetnConvolutionFilterARB;
PFNGLGETNHISTOGRAMARBPROC __glewGetnHistogramARB;
PFNGLGETNMAPDVARBPROC __glewGetnMapdvARB;
PFNGLGETNMAPFVARBPROC __glewGetnMapfvARB;
PFNGLGETNMAPIVARBPROC __glewGetnMapivARB;
PFNGLGETNMINMAXARBPROC __glewGetnMinmaxARB;
PFNGLGETNPIXELMAPFVARBPROC __glewGetnPixelMapfvARB;
PFNGLGETNPIXELMAPUIVARBPROC __glewGetnPixelMapuivARB;
PFNGLGETNPIXELMAPUSVARBPROC __glewGetnPixelMapusvARB;
PFNGLGETNPOLYGONSTIPPLEARBPROC __glewGetnPolygonStippleARB;
PFNGLGETNSEPARABLEFILTERARBPROC __glewGetnSeparableFilterARB;
PFNGLGETNTEXIMAGEARBPROC __glewGetnTexImageARB;
PFNGLGETNUNIFORMDVARBPROC __glewGetnUniformdvARB;
PFNGLGETNUNIFORMFVARBPROC __glewGetnUniformfvARB;
PFNGLGETNUNIFORMIVARBPROC __glewGetnUniformivARB;
PFNGLGETNUNIFORMUIVARBPROC __glewGetnUniformuivARB;
PFNGLREADNPIXELSARBPROC __glewReadnPixelsARB;
PFNGLMINSAMPLESHADINGARBPROC __glewMinSampleShadingARB;
PFNGLBINDSAMPLERPROC __glewBindSampler;
PFNGLDELETESAMPLERSPROC __glewDeleteSamplers;
PFNGLGENSAMPLERSPROC __glewGenSamplers;
PFNGLGETSAMPLERPARAMETERIIVPROC __glewGetSamplerParameterIiv;
PFNGLGETSAMPLERPARAMETERIUIVPROC __glewGetSamplerParameterIuiv;
PFNGLGETSAMPLERPARAMETERFVPROC __glewGetSamplerParameterfv;
PFNGLGETSAMPLERPARAMETERIVPROC __glewGetSamplerParameteriv;
PFNGLISSAMPLERPROC __glewIsSampler;
PFNGLSAMPLERPARAMETERIIVPROC __glewSamplerParameterIiv;
PFNGLSAMPLERPARAMETERIUIVPROC __glewSamplerParameterIuiv;
PFNGLSAMPLERPARAMETERFPROC __glewSamplerParameterf;
PFNGLSAMPLERPARAMETERFVPROC __glewSamplerParameterfv;
PFNGLSAMPLERPARAMETERIPROC __glewSamplerParameteri;
PFNGLSAMPLERPARAMETERIVPROC __glewSamplerParameteriv;
PFNGLACTIVESHADERPROGRAMPROC __glewActiveShaderProgram;
PFNGLBINDPROGRAMPIPELINEPROC __glewBindProgramPipeline;
PFNGLCREATESHADERPROGRAMVPROC __glewCreateShaderProgramv;
PFNGLDELETEPROGRAMPIPELINESPROC __glewDeleteProgramPipelines;
PFNGLGENPROGRAMPIPELINESPROC __glewGenProgramPipelines;
PFNGLGETPROGRAMPIPELINEINFOLOGPROC __glewGetProgramPipelineInfoLog;
PFNGLGETPROGRAMPIPELINEIVPROC __glewGetProgramPipelineiv;
PFNGLISPROGRAMPIPELINEPROC __glewIsProgramPipeline;
PFNGLPROGRAMUNIFORM1DPROC __glewProgramUniform1d;
PFNGLPROGRAMUNIFORM1DVPROC __glewProgramUniform1dv;
PFNGLPROGRAMUNIFORM1FPROC __glewProgramUniform1f;
PFNGLPROGRAMUNIFORM1FVPROC __glewProgramUniform1fv;
PFNGLPROGRAMUNIFORM1IPROC __glewProgramUniform1i;
PFNGLPROGRAMUNIFORM1IVPROC __glewProgramUniform1iv;
PFNGLPROGRAMUNIFORM1UIPROC __glewProgramUniform1ui;
PFNGLPROGRAMUNIFORM1UIVPROC __glewProgramUniform1uiv;
PFNGLPROGRAMUNIFORM2DPROC __glewProgramUniform2d;
PFNGLPROGRAMUNIFORM2DVPROC __glewProgramUniform2dv;
PFNGLPROGRAMUNIFORM2FPROC __glewProgramUniform2f;
PFNGLPROGRAMUNIFORM2FVPROC __glewProgramUniform2fv;
PFNGLPROGRAMUNIFORM2IPROC __glewProgramUniform2i;
PFNGLPROGRAMUNIFORM2IVPROC __glewProgramUniform2iv;
PFNGLPROGRAMUNIFORM2UIPROC __glewProgramUniform2ui;
PFNGLPROGRAMUNIFORM2UIVPROC __glewProgramUniform2uiv;
PFNGLPROGRAMUNIFORM3DPROC __glewProgramUniform3d;
PFNGLPROGRAMUNIFORM3DVPROC __glewProgramUniform3dv;
PFNGLPROGRAMUNIFORM3FPROC __glewProgramUniform3f;
PFNGLPROGRAMUNIFORM3FVPROC __glewProgramUniform3fv;
PFNGLPROGRAMUNIFORM3IPROC __glewProgramUniform3i;
PFNGLPROGRAMUNIFORM3IVPROC __glewProgramUniform3iv;
PFNGLPROGRAMUNIFORM3UIPROC __glewProgramUniform3ui;
PFNGLPROGRAMUNIFORM3UIVPROC __glewProgramUniform3uiv;
PFNGLPROGRAMUNIFORM4DPROC __glewProgramUniform4d;
PFNGLPROGRAMUNIFORM4DVPROC __glewProgramUniform4dv;
PFNGLPROGRAMUNIFORM4FPROC __glewProgramUniform4f;
PFNGLPROGRAMUNIFORM4FVPROC __glewProgramUniform4fv;
PFNGLPROGRAMUNIFORM4IPROC __glewProgramUniform4i;
PFNGLPROGRAMUNIFORM4IVPROC __glewProgramUniform4iv;
PFNGLPROGRAMUNIFORM4UIPROC __glewProgramUniform4ui;
PFNGLPROGRAMUNIFORM4UIVPROC __glewProgramUniform4uiv;
PFNGLPROGRAMUNIFORMMATRIX2DVPROC __glewProgramUniformMatrix2dv;
PFNGLPROGRAMUNIFORMMATRIX2FVPROC __glewProgramUniformMatrix2fv;
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC __glewProgramUniformMatrix2x3dv;
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC __glewProgramUniformMatrix2x3fv;
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC __glewProgramUniformMatrix2x4dv;
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC __glewProgramUniformMatrix2x4fv;
PFNGLPROGRAMUNIFORMMATRIX3DVPROC __glewProgramUniformMatrix3dv;
PFNGLPROGRAMUNIFORMMATRIX3FVPROC __glewProgramUniformMatrix3fv;
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC __glewProgramUniformMatrix3x2dv;
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC __glewProgramUniformMatrix3x2fv;
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC __glewProgramUniformMatrix3x4dv;
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC __glewProgramUniformMatrix3x4fv;
PFNGLPROGRAMUNIFORMMATRIX4DVPROC __glewProgramUniformMatrix4dv;
PFNGLPROGRAMUNIFORMMATRIX4FVPROC __glewProgramUniformMatrix4fv;
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC __glewProgramUniformMatrix4x2dv;
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC __glewProgramUniformMatrix4x2fv;
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC __glewProgramUniformMatrix4x3dv;
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC __glewProgramUniformMatrix4x3fv;
PFNGLUSEPROGRAMSTAGESPROC __glewUseProgramStages;
PFNGLVALIDATEPROGRAMPIPELINEPROC __glewValidateProgramPipeline;
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC __glewGetActiveAtomicCounterBufferiv;
PFNGLBINDIMAGETEXTUREPROC __glewBindImageTexture;
PFNGLMEMORYBARRIERPROC __glewMemoryBarrier;
PFNGLATTACHOBJECTARBPROC __glewAttachObjectARB;
PFNGLCOMPILESHADERARBPROC __glewCompileShaderARB;
PFNGLCREATEPROGRAMOBJECTARBPROC __glewCreateProgramObjectARB;
PFNGLCREATESHADEROBJECTARBPROC __glewCreateShaderObjectARB;
PFNGLDELETEOBJECTARBPROC __glewDeleteObjectARB;
PFNGLDETACHOBJECTARBPROC __glewDetachObjectARB;
PFNGLGETACTIVEUNIFORMARBPROC __glewGetActiveUniformARB;
PFNGLGETATTACHEDOBJECTSARBPROC __glewGetAttachedObjectsARB;
PFNGLGETHANDLEARBPROC __glewGetHandleARB;
PFNGLGETINFOLOGARBPROC __glewGetInfoLogARB;
PFNGLGETOBJECTPARAMETERFVARBPROC __glewGetObjectParameterfvARB;
PFNGLGETOBJECTPARAMETERIVARBPROC __glewGetObjectParameterivARB;
PFNGLGETSHADERSOURCEARBPROC __glewGetShaderSourceARB;
PFNGLGETUNIFORMLOCATIONARBPROC __glewGetUniformLocationARB;
PFNGLGETUNIFORMFVARBPROC __glewGetUniformfvARB;
PFNGLGETUNIFORMIVARBPROC __glewGetUniformivARB;
PFNGLLINKPROGRAMARBPROC __glewLinkProgramARB;
PFNGLSHADERSOURCEARBPROC __glewShaderSourceARB;
PFNGLUNIFORM1FARBPROC __glewUniform1fARB;
PFNGLUNIFORM1FVARBPROC __glewUniform1fvARB;
PFNGLUNIFORM1IARBPROC __glewUniform1iARB;
PFNGLUNIFORM1IVARBPROC __glewUniform1ivARB;
PFNGLUNIFORM2FARBPROC __glewUniform2fARB;
PFNGLUNIFORM2FVARBPROC __glewUniform2fvARB;
PFNGLUNIFORM2IARBPROC __glewUniform2iARB;
PFNGLUNIFORM2IVARBPROC __glewUniform2ivARB;
PFNGLUNIFORM3FARBPROC __glewUniform3fARB;
PFNGLUNIFORM3FVARBPROC __glewUniform3fvARB;
PFNGLUNIFORM3IARBPROC __glewUniform3iARB;
PFNGLUNIFORM3IVARBPROC __glewUniform3ivARB;
PFNGLUNIFORM4FARBPROC __glewUniform4fARB;
PFNGLUNIFORM4FVARBPROC __glewUniform4fvARB;
PFNGLUNIFORM4IARBPROC __glewUniform4iARB;
PFNGLUNIFORM4IVARBPROC __glewUniform4ivARB;
PFNGLUNIFORMMATRIX2FVARBPROC __glewUniformMatrix2fvARB;
PFNGLUNIFORMMATRIX3FVARBPROC __glewUniformMatrix3fvARB;
PFNGLUNIFORMMATRIX4FVARBPROC __glewUniformMatrix4fvARB;
PFNGLUSEPROGRAMOBJECTARBPROC __glewUseProgramObjectARB;
PFNGLVALIDATEPROGRAMARBPROC __glewValidateProgramARB;
PFNGLSHADERSTORAGEBLOCKBINDINGPROC __glewShaderStorageBlockBinding;
PFNGLGETACTIVESUBROUTINENAMEPROC __glewGetActiveSubroutineName;
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC __glewGetActiveSubroutineUniformName;
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC __glewGetActiveSubroutineUniformiv;
PFNGLGETPROGRAMSTAGEIVPROC __glewGetProgramStageiv;
PFNGLGETSUBROUTINEINDEXPROC __glewGetSubroutineIndex;
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC __glewGetSubroutineUniformLocation;
PFNGLGETUNIFORMSUBROUTINEUIVPROC __glewGetUniformSubroutineuiv;
PFNGLUNIFORMSUBROUTINESUIVPROC __glewUniformSubroutinesuiv;
PFNGLCOMPILESHADERINCLUDEARBPROC __glewCompileShaderIncludeARB;
PFNGLDELETENAMEDSTRINGARBPROC __glewDeleteNamedStringARB;
PFNGLGETNAMEDSTRINGARBPROC __glewGetNamedStringARB;
PFNGLGETNAMEDSTRINGIVARBPROC __glewGetNamedStringivARB;
PFNGLISNAMEDSTRINGARBPROC __glewIsNamedStringARB;
PFNGLNAMEDSTRINGARBPROC __glewNamedStringARB;
PFNGLCLIENTWAITSYNCPROC __glewClientWaitSync;
PFNGLDELETESYNCPROC __glewDeleteSync;
PFNGLFENCESYNCPROC __glewFenceSync;
PFNGLGETINTEGER64VPROC __glewGetInteger64v;
PFNGLGETSYNCIVPROC __glewGetSynciv;
PFNGLISSYNCPROC __glewIsSync;
PFNGLWAITSYNCPROC __glewWaitSync;
PFNGLPATCHPARAMETERFVPROC __glewPatchParameterfv;
PFNGLPATCHPARAMETERIPROC __glewPatchParameteri;
PFNGLTEXBUFFERARBPROC __glewTexBufferARB;
PFNGLTEXBUFFERRANGEPROC __glewTexBufferRange;
PFNGLTEXTUREBUFFERRANGEEXTPROC __glewTextureBufferRangeEXT;
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC __glewCompressedTexImage1DARB;
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC __glewCompressedTexImage2DARB;
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC __glewCompressedTexImage3DARB;
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC __glewCompressedTexSubImage1DARB;
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC __glewCompressedTexSubImage2DARB;
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC __glewCompressedTexSubImage3DARB;
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC __glewGetCompressedTexImageARB;
PFNGLGETMULTISAMPLEFVPROC __glewGetMultisamplefv;
PFNGLSAMPLEMASKIPROC __glewSampleMaski;
PFNGLTEXIMAGE2DMULTISAMPLEPROC __glewTexImage2DMultisample;
PFNGLTEXIMAGE3DMULTISAMPLEPROC __glewTexImage3DMultisample;
PFNGLTEXSTORAGE1DPROC __glewTexStorage1D;
PFNGLTEXSTORAGE2DPROC __glewTexStorage2D;
PFNGLTEXSTORAGE3DPROC __glewTexStorage3D;
PFNGLTEXTURESTORAGE1DEXTPROC __glewTextureStorage1DEXT;
PFNGLTEXTURESTORAGE2DEXTPROC __glewTextureStorage2DEXT;
PFNGLTEXTURESTORAGE3DEXTPROC __glewTextureStorage3DEXT;
PFNGLTEXSTORAGE2DMULTISAMPLEPROC __glewTexStorage2DMultisample;
PFNGLTEXSTORAGE3DMULTISAMPLEPROC __glewTexStorage3DMultisample;
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC __glewTextureStorage2DMultisampleEXT;
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC __glewTextureStorage3DMultisampleEXT;
PFNGLTEXTUREVIEWPROC __glewTextureView;
PFNGLGETQUERYOBJECTI64VPROC __glewGetQueryObjecti64v;
PFNGLGETQUERYOBJECTUI64VPROC __glewGetQueryObjectui64v;
PFNGLQUERYCOUNTERPROC __glewQueryCounter;
PFNGLBINDTRANSFORMFEEDBACKPROC __glewBindTransformFeedback;
PFNGLDELETETRANSFORMFEEDBACKSPROC __glewDeleteTransformFeedbacks;
PFNGLDRAWTRANSFORMFEEDBACKPROC __glewDrawTransformFeedback;
PFNGLGENTRANSFORMFEEDBACKSPROC __glewGenTransformFeedbacks;
PFNGLISTRANSFORMFEEDBACKPROC __glewIsTransformFeedback;
PFNGLPAUSETRANSFORMFEEDBACKPROC __glewPauseTransformFeedback;
PFNGLRESUMETRANSFORMFEEDBACKPROC __glewResumeTransformFeedback;
PFNGLBEGINQUERYINDEXEDPROC __glewBeginQueryIndexed;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC __glewDrawTransformFeedbackStream;
PFNGLENDQUERYINDEXEDPROC __glewEndQueryIndexed;
PFNGLGETQUERYINDEXEDIVPROC __glewGetQueryIndexediv;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC __glewDrawTransformFeedbackInstanced;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC __glewDrawTransformFeedbackStreamInstanced;
PFNGLLOADTRANSPOSEMATRIXDARBPROC __glewLoadTransposeMatrixdARB;
PFNGLLOADTRANSPOSEMATRIXFARBPROC __glewLoadTransposeMatrixfARB;
PFNGLMULTTRANSPOSEMATRIXDARBPROC __glewMultTransposeMatrixdARB;
PFNGLMULTTRANSPOSEMATRIXFARBPROC __glewMultTransposeMatrixfARB;
PFNGLBINDBUFFERBASEPROC __glewBindBufferBase;
PFNGLBINDBUFFERRANGEPROC __glewBindBufferRange;
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC __glewGetActiveUniformBlockName;
PFNGLGETACTIVEUNIFORMBLOCKIVPROC __glewGetActiveUniformBlockiv;
PFNGLGETACTIVEUNIFORMNAMEPROC __glewGetActiveUniformName;
PFNGLGETACTIVEUNIFORMSIVPROC __glewGetActiveUniformsiv;
PFNGLGETINTEGERI_VPROC __glewGetIntegeri_v;
PFNGLGETUNIFORMBLOCKINDEXPROC __glewGetUniformBlockIndex;
PFNGLGETUNIFORMINDICESPROC __glewGetUniformIndices;
PFNGLUNIFORMBLOCKBINDINGPROC __glewUniformBlockBinding;
PFNGLBINDVERTEXARRAYPROC __glewBindVertexArray;
PFNGLDELETEVERTEXARRAYSPROC __glewDeleteVertexArrays;
PFNGLGENVERTEXARRAYSPROC __glewGenVertexArrays;
PFNGLISVERTEXARRAYPROC __glewIsVertexArray;
PFNGLGETVERTEXATTRIBLDVPROC __glewGetVertexAttribLdv;
PFNGLVERTEXATTRIBL1DPROC __glewVertexAttribL1d;
PFNGLVERTEXATTRIBL1DVPROC __glewVertexAttribL1dv;
PFNGLVERTEXATTRIBL2DPROC __glewVertexAttribL2d;
PFNGLVERTEXATTRIBL2DVPROC __glewVertexAttribL2dv;
PFNGLVERTEXATTRIBL3DPROC __glewVertexAttribL3d;
PFNGLVERTEXATTRIBL3DVPROC __glewVertexAttribL3dv;
PFNGLVERTEXATTRIBL4DPROC __glewVertexAttribL4d;
PFNGLVERTEXATTRIBL4DVPROC __glewVertexAttribL4dv;
PFNGLVERTEXATTRIBLPOINTERPROC __glewVertexAttribLPointer;
PFNGLBINDVERTEXBUFFERPROC __glewBindVertexBuffer;
PFNGLVERTEXATTRIBBINDINGPROC __glewVertexAttribBinding;
PFNGLVERTEXATTRIBFORMATPROC __glewVertexAttribFormat;
PFNGLVERTEXATTRIBIFORMATPROC __glewVertexAttribIFormat;
PFNGLVERTEXATTRIBLFORMATPROC __glewVertexAttribLFormat;
PFNGLVERTEXBINDINGDIVISORPROC __glewVertexBindingDivisor;
PFNGLVERTEXBLENDARBPROC __glewVertexBlendARB;
PFNGLWEIGHTPOINTERARBPROC __glewWeightPointerARB;
PFNGLWEIGHTBVARBPROC __glewWeightbvARB;
PFNGLWEIGHTDVARBPROC __glewWeightdvARB;
PFNGLWEIGHTFVARBPROC __glewWeightfvARB;
PFNGLWEIGHTIVARBPROC __glewWeightivARB;
PFNGLWEIGHTSVARBPROC __glewWeightsvARB;
PFNGLWEIGHTUBVARBPROC __glewWeightubvARB;
PFNGLWEIGHTUIVARBPROC __glewWeightuivARB;
PFNGLWEIGHTUSVARBPROC __glewWeightusvARB;
PFNGLBINDBUFFERARBPROC __glewBindBufferARB;
PFNGLBUFFERDATAARBPROC __glewBufferDataARB;
PFNGLBUFFERSUBDATAARBPROC __glewBufferSubDataARB;
PFNGLDELETEBUFFERSARBPROC __glewDeleteBuffersARB;
PFNGLGENBUFFERSARBPROC __glewGenBuffersARB;
PFNGLGETBUFFERPARAMETERIVARBPROC __glewGetBufferParameterivARB;
PFNGLGETBUFFERPOINTERVARBPROC __glewGetBufferPointervARB;
PFNGLGETBUFFERSUBDATAARBPROC __glewGetBufferSubDataARB;
PFNGLISBUFFERARBPROC __glewIsBufferARB;
PFNGLMAPBUFFERARBPROC __glewMapBufferARB;
PFNGLUNMAPBUFFERARBPROC __glewUnmapBufferARB;
PFNGLBINDPROGRAMARBPROC __glewBindProgramARB;
PFNGLDELETEPROGRAMSARBPROC __glewDeleteProgramsARB;
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC __glewDisableVertexAttribArrayARB;
PFNGLENABLEVERTEXATTRIBARRAYARBPROC __glewEnableVertexAttribArrayARB;
PFNGLGENPROGRAMSARBPROC __glewGenProgramsARB;
PFNGLGETPROGRAMENVPARAMETERDVARBPROC __glewGetProgramEnvParameterdvARB;
PFNGLGETPROGRAMENVPARAMETERFVARBPROC __glewGetProgramEnvParameterfvARB;
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC __glewGetProgramLocalParameterdvARB;
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC __glewGetProgramLocalParameterfvARB;
PFNGLGETPROGRAMSTRINGARBPROC __glewGetProgramStringARB;
PFNGLGETPROGRAMIVARBPROC __glewGetProgramivARB;
PFNGLGETVERTEXATTRIBPOINTERVARBPROC __glewGetVertexAttribPointervARB;
PFNGLGETVERTEXATTRIBDVARBPROC __glewGetVertexAttribdvARB;
PFNGLGETVERTEXATTRIBFVARBPROC __glewGetVertexAttribfvARB;
PFNGLGETVERTEXATTRIBIVARBPROC __glewGetVertexAttribivARB;
PFNGLISPROGRAMARBPROC __glewIsProgramARB;
PFNGLPROGRAMENVPARAMETER4DARBPROC __glewProgramEnvParameter4dARB;
PFNGLPROGRAMENVPARAMETER4DVARBPROC __glewProgramEnvParameter4dvARB;
PFNGLPROGRAMENVPARAMETER4FARBPROC __glewProgramEnvParameter4fARB;
PFNGLPROGRAMENVPARAMETER4FVARBPROC __glewProgramEnvParameter4fvARB;
PFNGLPROGRAMLOCALPARAMETER4DARBPROC __glewProgramLocalParameter4dARB;
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC __glewProgramLocalParameter4dvARB;
PFNGLPROGRAMLOCALPARAMETER4FARBPROC __glewProgramLocalParameter4fARB;
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC __glewProgramLocalParameter4fvARB;
PFNGLPROGRAMSTRINGARBPROC __glewProgramStringARB;
PFNGLVERTEXATTRIB1DARBPROC __glewVertexAttrib1dARB;
PFNGLVERTEXATTRIB1DVARBPROC __glewVertexAttrib1dvARB;
PFNGLVERTEXATTRIB1FARBPROC __glewVertexAttrib1fARB;
PFNGLVERTEXATTRIB1FVARBPROC __glewVertexAttrib1fvARB;
PFNGLVERTEXATTRIB1SARBPROC __glewVertexAttrib1sARB;
PFNGLVERTEXATTRIB1SVARBPROC __glewVertexAttrib1svARB;
PFNGLVERTEXATTRIB2DARBPROC __glewVertexAttrib2dARB;
PFNGLVERTEXATTRIB2DVARBPROC __glewVertexAttrib2dvARB;
PFNGLVERTEXATTRIB2FARBPROC __glewVertexAttrib2fARB;
PFNGLVERTEXATTRIB2FVARBPROC __glewVertexAttrib2fvARB;
PFNGLVERTEXATTRIB2SARBPROC __glewVertexAttrib2sARB;
PFNGLVERTEXATTRIB2SVARBPROC __glewVertexAttrib2svARB;
PFNGLVERTEXATTRIB3DARBPROC __glewVertexAttrib3dARB;
PFNGLVERTEXATTRIB3DVARBPROC __glewVertexAttrib3dvARB;
PFNGLVERTEXATTRIB3FARBPROC __glewVertexAttrib3fARB;
PFNGLVERTEXATTRIB3FVARBPROC __glewVertexAttrib3fvARB;
PFNGLVERTEXATTRIB3SARBPROC __glewVertexAttrib3sARB;
PFNGLVERTEXATTRIB3SVARBPROC __glewVertexAttrib3svARB;
PFNGLVERTEXATTRIB4NBVARBPROC __glewVertexAttrib4NbvARB;
PFNGLVERTEXATTRIB4NIVARBPROC __glewVertexAttrib4NivARB;
PFNGLVERTEXATTRIB4NSVARBPROC __glewVertexAttrib4NsvARB;
PFNGLVERTEXATTRIB4NUBARBPROC __glewVertexAttrib4NubARB;
PFNGLVERTEXATTRIB4NUBVARBPROC __glewVertexAttrib4NubvARB;
PFNGLVERTEXATTRIB4NUIVARBPROC __glewVertexAttrib4NuivARB;
PFNGLVERTEXATTRIB4NUSVARBPROC __glewVertexAttrib4NusvARB;
PFNGLVERTEXATTRIB4BVARBPROC __glewVertexAttrib4bvARB;
PFNGLVERTEXATTRIB4DARBPROC __glewVertexAttrib4dARB;
PFNGLVERTEXATTRIB4DVARBPROC __glewVertexAttrib4dvARB;
PFNGLVERTEXATTRIB4FARBPROC __glewVertexAttrib4fARB;
PFNGLVERTEXATTRIB4FVARBPROC __glewVertexAttrib4fvARB;
PFNGLVERTEXATTRIB4IVARBPROC __glewVertexAttrib4ivARB;
PFNGLVERTEXATTRIB4SARBPROC __glewVertexAttrib4sARB;
PFNGLVERTEXATTRIB4SVARBPROC __glewVertexAttrib4svARB;
PFNGLVERTEXATTRIB4UBVARBPROC __glewVertexAttrib4ubvARB;
PFNGLVERTEXATTRIB4UIVARBPROC __glewVertexAttrib4uivARB;
PFNGLVERTEXATTRIB4USVARBPROC __glewVertexAttrib4usvARB;
PFNGLVERTEXATTRIBPOINTERARBPROC __glewVertexAttribPointerARB;
PFNGLBINDATTRIBLOCATIONARBPROC __glewBindAttribLocationARB;
PFNGLGETACTIVEATTRIBARBPROC __glewGetActiveAttribARB;
PFNGLGETATTRIBLOCATIONARBPROC __glewGetAttribLocationARB;
PFNGLCOLORP3UIPROC __glewColorP3ui;
PFNGLCOLORP3UIVPROC __glewColorP3uiv;
PFNGLCOLORP4UIPROC __glewColorP4ui;
PFNGLCOLORP4UIVPROC __glewColorP4uiv;
PFNGLMULTITEXCOORDP1UIPROC __glewMultiTexCoordP1ui;
PFNGLMULTITEXCOORDP1UIVPROC __glewMultiTexCoordP1uiv;
PFNGLMULTITEXCOORDP2UIPROC __glewMultiTexCoordP2ui;
PFNGLMULTITEXCOORDP2UIVPROC __glewMultiTexCoordP2uiv;
PFNGLMULTITEXCOORDP3UIPROC __glewMultiTexCoordP3ui;
PFNGLMULTITEXCOORDP3UIVPROC __glewMultiTexCoordP3uiv;
PFNGLMULTITEXCOORDP4UIPROC __glewMultiTexCoordP4ui;
PFNGLMULTITEXCOORDP4UIVPROC __glewMultiTexCoordP4uiv;
PFNGLNORMALP3UIPROC __glewNormalP3ui;
PFNGLNORMALP3UIVPROC __glewNormalP3uiv;
PFNGLSECONDARYCOLORP3UIPROC __glewSecondaryColorP3ui;
PFNGLSECONDARYCOLORP3UIVPROC __glewSecondaryColorP3uiv;
PFNGLTEXCOORDP1UIPROC __glewTexCoordP1ui;
PFNGLTEXCOORDP1UIVPROC __glewTexCoordP1uiv;
PFNGLTEXCOORDP2UIPROC __glewTexCoordP2ui;
PFNGLTEXCOORDP2UIVPROC __glewTexCoordP2uiv;
PFNGLTEXCOORDP3UIPROC __glewTexCoordP3ui;
PFNGLTEXCOORDP3UIVPROC __glewTexCoordP3uiv;
PFNGLTEXCOORDP4UIPROC __glewTexCoordP4ui;
PFNGLTEXCOORDP4UIVPROC __glewTexCoordP4uiv;
PFNGLVERTEXATTRIBP1UIPROC __glewVertexAttribP1ui;
PFNGLVERTEXATTRIBP1UIVPROC __glewVertexAttribP1uiv;
PFNGLVERTEXATTRIBP2UIPROC __glewVertexAttribP2ui;
PFNGLVERTEXATTRIBP2UIVPROC __glewVertexAttribP2uiv;
PFNGLVERTEXATTRIBP3UIPROC __glewVertexAttribP3ui;
PFNGLVERTEXATTRIBP3UIVPROC __glewVertexAttribP3uiv;
PFNGLVERTEXATTRIBP4UIPROC __glewVertexAttribP4ui;
PFNGLVERTEXATTRIBP4UIVPROC __glewVertexAttribP4uiv;
PFNGLVERTEXP2UIPROC __glewVertexP2ui;
PFNGLVERTEXP2UIVPROC __glewVertexP2uiv;
PFNGLVERTEXP3UIPROC __glewVertexP3ui;
PFNGLVERTEXP3UIVPROC __glewVertexP3uiv;
PFNGLVERTEXP4UIPROC __glewVertexP4ui;
PFNGLVERTEXP4UIVPROC __glewVertexP4uiv;
PFNGLDEPTHRANGEARRAYVPROC __glewDepthRangeArrayv;
PFNGLDEPTHRANGEINDEXEDPROC __glewDepthRangeIndexed;
PFNGLGETDOUBLEI_VPROC __glewGetDoublei_v;
PFNGLGETFLOATI_VPROC __glewGetFloati_v;
PFNGLSCISSORARRAYVPROC __glewScissorArrayv;
PFNGLSCISSORINDEXEDPROC __glewScissorIndexed;
PFNGLSCISSORINDEXEDVPROC __glewScissorIndexedv;
PFNGLVIEWPORTARRAYVPROC __glewViewportArrayv;
PFNGLVIEWPORTINDEXEDFPROC __glewViewportIndexedf;
PFNGLVIEWPORTINDEXEDFVPROC __glewViewportIndexedfv;
PFNGLWINDOWPOS2DARBPROC __glewWindowPos2dARB;
PFNGLWINDOWPOS2DVARBPROC __glewWindowPos2dvARB;
PFNGLWINDOWPOS2FARBPROC __glewWindowPos2fARB;
PFNGLWINDOWPOS2FVARBPROC __glewWindowPos2fvARB;
PFNGLWINDOWPOS2IARBPROC __glewWindowPos2iARB;
PFNGLWINDOWPOS2IVARBPROC __glewWindowPos2ivARB;
PFNGLWINDOWPOS2SARBPROC __glewWindowPos2sARB;
PFNGLWINDOWPOS2SVARBPROC __glewWindowPos2svARB;
PFNGLWINDOWPOS3DARBPROC __glewWindowPos3dARB;
PFNGLWINDOWPOS3DVARBPROC __glewWindowPos3dvARB;
PFNGLWINDOWPOS3FARBPROC __glewWindowPos3fARB;
PFNGLWINDOWPOS3FVARBPROC __glewWindowPos3fvARB;
PFNGLWINDOWPOS3IARBPROC __glewWindowPos3iARB;
PFNGLWINDOWPOS3IVARBPROC __glewWindowPos3ivARB;
PFNGLWINDOWPOS3SARBPROC __glewWindowPos3sARB;
PFNGLWINDOWPOS3SVARBPROC __glewWindowPos3svARB;
PFNGLDRAWBUFFERSATIPROC __glewDrawBuffersATI;
PFNGLDRAWELEMENTARRAYATIPROC __glewDrawElementArrayATI;
PFNGLDRAWRANGEELEMENTARRAYATIPROC __glewDrawRangeElementArrayATI;
PFNGLELEMENTPOINTERATIPROC __glewElementPointerATI;
PFNGLGETTEXBUMPPARAMETERFVATIPROC __glewGetTexBumpParameterfvATI;
PFNGLGETTEXBUMPPARAMETERIVATIPROC __glewGetTexBumpParameterivATI;
PFNGLTEXBUMPPARAMETERFVATIPROC __glewTexBumpParameterfvATI;
PFNGLTEXBUMPPARAMETERIVATIPROC __glewTexBumpParameterivATI;
PFNGLALPHAFRAGMENTOP1ATIPROC __glewAlphaFragmentOp1ATI;
PFNGLALPHAFRAGMENTOP2ATIPROC __glewAlphaFragmentOp2ATI;
PFNGLALPHAFRAGMENTOP3ATIPROC __glewAlphaFragmentOp3ATI;
PFNGLBEGINFRAGMENTSHADERATIPROC __glewBeginFragmentShaderATI;
PFNGLBINDFRAGMENTSHADERATIPROC __glewBindFragmentShaderATI;
PFNGLCOLORFRAGMENTOP1ATIPROC __glewColorFragmentOp1ATI;
PFNGLCOLORFRAGMENTOP2ATIPROC __glewColorFragmentOp2ATI;
PFNGLCOLORFRAGMENTOP3ATIPROC __glewColorFragmentOp3ATI;
PFNGLDELETEFRAGMENTSHADERATIPROC __glewDeleteFragmentShaderATI;
PFNGLENDFRAGMENTSHADERATIPROC __glewEndFragmentShaderATI;
PFNGLGENFRAGMENTSHADERSATIPROC __glewGenFragmentShadersATI;
PFNGLPASSTEXCOORDATIPROC __glewPassTexCoordATI;
PFNGLSAMPLEMAPATIPROC __glewSampleMapATI;
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC __glewSetFragmentShaderConstantATI;
PFNGLMAPOBJECTBUFFERATIPROC __glewMapObjectBufferATI;
PFNGLUNMAPOBJECTBUFFERATIPROC __glewUnmapObjectBufferATI;
PFNGLPNTRIANGLESFATIPROC __glewPNTrianglesfATI;
PFNGLPNTRIANGLESIATIPROC __glewPNTrianglesiATI;
PFNGLSTENCILFUNCSEPARATEATIPROC __glewStencilFuncSeparateATI;
PFNGLSTENCILOPSEPARATEATIPROC __glewStencilOpSeparateATI;
PFNGLARRAYOBJECTATIPROC __glewArrayObjectATI;
PFNGLFREEOBJECTBUFFERATIPROC __glewFreeObjectBufferATI;
PFNGLGETARRAYOBJECTFVATIPROC __glewGetArrayObjectfvATI;
PFNGLGETARRAYOBJECTIVATIPROC __glewGetArrayObjectivATI;
PFNGLGETOBJECTBUFFERFVATIPROC __glewGetObjectBufferfvATI;
PFNGLGETOBJECTBUFFERIVATIPROC __glewGetObjectBufferivATI;
PFNGLGETVARIANTARRAYOBJECTFVATIPROC __glewGetVariantArrayObjectfvATI;
PFNGLGETVARIANTARRAYOBJECTIVATIPROC __glewGetVariantArrayObjectivATI;
PFNGLISOBJECTBUFFERATIPROC __glewIsObjectBufferATI;
PFNGLNEWOBJECTBUFFERATIPROC __glewNewObjectBufferATI;
PFNGLUPDATEOBJECTBUFFERATIPROC __glewUpdateObjectBufferATI;
PFNGLVARIANTARRAYOBJECTATIPROC __glewVariantArrayObjectATI;
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC __glewGetVertexAttribArrayObjectfvATI;
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC __glewGetVertexAttribArrayObjectivATI;
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC __glewVertexAttribArrayObjectATI;
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC __glewClientActiveVertexStreamATI;
PFNGLNORMALSTREAM3BATIPROC __glewNormalStream3bATI;
PFNGLNORMALSTREAM3BVATIPROC __glewNormalStream3bvATI;
PFNGLNORMALSTREAM3DATIPROC __glewNormalStream3dATI;
PFNGLNORMALSTREAM3DVATIPROC __glewNormalStream3dvATI;
PFNGLNORMALSTREAM3FATIPROC __glewNormalStream3fATI;
PFNGLNORMALSTREAM3FVATIPROC __glewNormalStream3fvATI;
PFNGLNORMALSTREAM3IATIPROC __glewNormalStream3iATI;
PFNGLNORMALSTREAM3IVATIPROC __glewNormalStream3ivATI;
PFNGLNORMALSTREAM3SATIPROC __glewNormalStream3sATI;
PFNGLNORMALSTREAM3SVATIPROC __glewNormalStream3svATI;
PFNGLVERTEXBLENDENVFATIPROC __glewVertexBlendEnvfATI;
PFNGLVERTEXBLENDENVIATIPROC __glewVertexBlendEnviATI;
PFNGLVERTEXSTREAM1DATIPROC __glewVertexStream1dATI;
PFNGLVERTEXSTREAM1DVATIPROC __glewVertexStream1dvATI;
PFNGLVERTEXSTREAM1FATIPROC __glewVertexStream1fATI;
PFNGLVERTEXSTREAM1FVATIPROC __glewVertexStream1fvATI;
PFNGLVERTEXSTREAM1IATIPROC __glewVertexStream1iATI;
PFNGLVERTEXSTREAM1IVATIPROC __glewVertexStream1ivATI;
PFNGLVERTEXSTREAM1SATIPROC __glewVertexStream1sATI;
PFNGLVERTEXSTREAM1SVATIPROC __glewVertexStream1svATI;
PFNGLVERTEXSTREAM2DATIPROC __glewVertexStream2dATI;
PFNGLVERTEXSTREAM2DVATIPROC __glewVertexStream2dvATI;
PFNGLVERTEXSTREAM2FATIPROC __glewVertexStream2fATI;
PFNGLVERTEXSTREAM2FVATIPROC __glewVertexStream2fvATI;
PFNGLVERTEXSTREAM2IATIPROC __glewVertexStream2iATI;
PFNGLVERTEXSTREAM2IVATIPROC __glewVertexStream2ivATI;
PFNGLVERTEXSTREAM2SATIPROC __glewVertexStream2sATI;
PFNGLVERTEXSTREAM2SVATIPROC __glewVertexStream2svATI;
PFNGLVERTEXSTREAM3DATIPROC __glewVertexStream3dATI;
PFNGLVERTEXSTREAM3DVATIPROC __glewVertexStream3dvATI;
PFNGLVERTEXSTREAM3FATIPROC __glewVertexStream3fATI;
PFNGLVERTEXSTREAM3FVATIPROC __glewVertexStream3fvATI;
PFNGLVERTEXSTREAM3IATIPROC __glewVertexStream3iATI;
PFNGLVERTEXSTREAM3IVATIPROC __glewVertexStream3ivATI;
PFNGLVERTEXSTREAM3SATIPROC __glewVertexStream3sATI;
PFNGLVERTEXSTREAM3SVATIPROC __glewVertexStream3svATI;
PFNGLVERTEXSTREAM4DATIPROC __glewVertexStream4dATI;
PFNGLVERTEXSTREAM4DVATIPROC __glewVertexStream4dvATI;
PFNGLVERTEXSTREAM4FATIPROC __glewVertexStream4fATI;
PFNGLVERTEXSTREAM4FVATIPROC __glewVertexStream4fvATI;
PFNGLVERTEXSTREAM4IATIPROC __glewVertexStream4iATI;
PFNGLVERTEXSTREAM4IVATIPROC __glewVertexStream4ivATI;
PFNGLVERTEXSTREAM4SATIPROC __glewVertexStream4sATI;
PFNGLVERTEXSTREAM4SVATIPROC __glewVertexStream4svATI;
PFNGLGETUNIFORMBUFFERSIZEEXTPROC __glewGetUniformBufferSizeEXT;
PFNGLGETUNIFORMOFFSETEXTPROC __glewGetUniformOffsetEXT;
PFNGLUNIFORMBUFFEREXTPROC __glewUniformBufferEXT;
PFNGLBLENDCOLOREXTPROC __glewBlendColorEXT;
PFNGLBLENDEQUATIONSEPARATEEXTPROC __glewBlendEquationSeparateEXT;
PFNGLBLENDFUNCSEPARATEEXTPROC __glewBlendFuncSeparateEXT;
PFNGLBLENDEQUATIONEXTPROC __glewBlendEquationEXT;
PFNGLCOLORSUBTABLEEXTPROC __glewColorSubTableEXT;
PFNGLCOPYCOLORSUBTABLEEXTPROC __glewCopyColorSubTableEXT;
PFNGLLOCKARRAYSEXTPROC __glewLockArraysEXT;
PFNGLUNLOCKARRAYSEXTPROC __glewUnlockArraysEXT;
PFNGLCONVOLUTIONFILTER1DEXTPROC __glewConvolutionFilter1DEXT;
PFNGLCONVOLUTIONFILTER2DEXTPROC __glewConvolutionFilter2DEXT;
PFNGLCONVOLUTIONPARAMETERFEXTPROC __glewConvolutionParameterfEXT;
PFNGLCONVOLUTIONPARAMETERFVEXTPROC __glewConvolutionParameterfvEXT;
PFNGLCONVOLUTIONPARAMETERIEXTPROC __glewConvolutionParameteriEXT;
PFNGLCONVOLUTIONPARAMETERIVEXTPROC __glewConvolutionParameterivEXT;
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC __glewCopyConvolutionFilter1DEXT;
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC __glewCopyConvolutionFilter2DEXT;
PFNGLGETCONVOLUTIONFILTEREXTPROC __glewGetConvolutionFilterEXT;
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC __glewGetConvolutionParameterfvEXT;
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC __glewGetConvolutionParameterivEXT;
PFNGLGETSEPARABLEFILTEREXTPROC __glewGetSeparableFilterEXT;
PFNGLSEPARABLEFILTER2DEXTPROC __glewSeparableFilter2DEXT;
PFNGLBINORMALPOINTEREXTPROC __glewBinormalPointerEXT;
PFNGLTANGENTPOINTEREXTPROC __glewTangentPointerEXT;
PFNGLCOPYTEXIMAGE1DEXTPROC __glewCopyTexImage1DEXT;
PFNGLCOPYTEXIMAGE2DEXTPROC __glewCopyTexImage2DEXT;
PFNGLCOPYTEXSUBIMAGE1DEXTPROC __glewCopyTexSubImage1DEXT;
PFNGLCOPYTEXSUBIMAGE2DEXTPROC __glewCopyTexSubImage2DEXT;
PFNGLCOPYTEXSUBIMAGE3DEXTPROC __glewCopyTexSubImage3DEXT;
PFNGLCULLPARAMETERDVEXTPROC __glewCullParameterdvEXT;
PFNGLCULLPARAMETERFVEXTPROC __glewCullParameterfvEXT;
PFNGLINSERTEVENTMARKEREXTPROC __glewInsertEventMarkerEXT;
PFNGLPOPGROUPMARKEREXTPROC __glewPopGroupMarkerEXT;
PFNGLPUSHGROUPMARKEREXTPROC __glewPushGroupMarkerEXT;
PFNGLDEPTHBOUNDSEXTPROC __glewDepthBoundsEXT;
PFNGLBINDMULTITEXTUREEXTPROC __glewBindMultiTextureEXT;
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC __glewCheckNamedFramebufferStatusEXT;
PFNGLCLIENTATTRIBDEFAULTEXTPROC __glewClientAttribDefaultEXT;
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC __glewCompressedMultiTexImage1DEXT;
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC __glewCompressedMultiTexImage2DEXT;
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC __glewCompressedMultiTexImage3DEXT;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC __glewCompressedMultiTexSubImage1DEXT;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC __glewCompressedMultiTexSubImage2DEXT;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC __glewCompressedMultiTexSubImage3DEXT;
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC __glewCompressedTextureImage1DEXT;
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC __glewCompressedTextureImage2DEXT;
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC __glewCompressedTextureImage3DEXT;
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC __glewCompressedTextureSubImage1DEXT;
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC __glewCompressedTextureSubImage2DEXT;
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC __glewCompressedTextureSubImage3DEXT;
PFNGLCOPYMULTITEXIMAGE1DEXTPROC __glewCopyMultiTexImage1DEXT;
PFNGLCOPYMULTITEXIMAGE2DEXTPROC __glewCopyMultiTexImage2DEXT;
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC __glewCopyMultiTexSubImage1DEXT;
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC __glewCopyMultiTexSubImage2DEXT;
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC __glewCopyMultiTexSubImage3DEXT;
PFNGLCOPYTEXTUREIMAGE1DEXTPROC __glewCopyTextureImage1DEXT;
PFNGLCOPYTEXTUREIMAGE2DEXTPROC __glewCopyTextureImage2DEXT;
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC __glewCopyTextureSubImage1DEXT;
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC __glewCopyTextureSubImage2DEXT;
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC __glewCopyTextureSubImage3DEXT;
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC __glewDisableClientStateIndexedEXT;
PFNGLDISABLECLIENTSTATEIEXTPROC __glewDisableClientStateiEXT;
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC __glewDisableVertexArrayAttribEXT;
PFNGLDISABLEVERTEXARRAYEXTPROC __glewDisableVertexArrayEXT;
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC __glewEnableClientStateIndexedEXT;
PFNGLENABLECLIENTSTATEIEXTPROC __glewEnableClientStateiEXT;
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC __glewEnableVertexArrayAttribEXT;
PFNGLENABLEVERTEXARRAYEXTPROC __glewEnableVertexArrayEXT;
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC __glewFlushMappedNamedBufferRangeEXT;
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC __glewFramebufferDrawBufferEXT;
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC __glewFramebufferDrawBuffersEXT;
PFNGLFRAMEBUFFERREADBUFFEREXTPROC __glewFramebufferReadBufferEXT;
PFNGLGENERATEMULTITEXMIPMAPEXTPROC __glewGenerateMultiTexMipmapEXT;
PFNGLGENERATETEXTUREMIPMAPEXTPROC __glewGenerateTextureMipmapEXT;
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC __glewGetCompressedMultiTexImageEXT;
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC __glewGetCompressedTextureImageEXT;
PFNGLGETDOUBLEINDEXEDVEXTPROC __glewGetDoubleIndexedvEXT;
PFNGLGETDOUBLEI_VEXTPROC __glewGetDoublei_vEXT;
PFNGLGETFLOATINDEXEDVEXTPROC __glewGetFloatIndexedvEXT;
PFNGLGETFLOATI_VEXTPROC __glewGetFloati_vEXT;
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC __glewGetFramebufferParameterivEXT;
PFNGLGETMULTITEXENVFVEXTPROC __glewGetMultiTexEnvfvEXT;
PFNGLGETMULTITEXENVIVEXTPROC __glewGetMultiTexEnvivEXT;
PFNGLGETMULTITEXGENDVEXTPROC __glewGetMultiTexGendvEXT;
PFNGLGETMULTITEXGENFVEXTPROC __glewGetMultiTexGenfvEXT;
PFNGLGETMULTITEXGENIVEXTPROC __glewGetMultiTexGenivEXT;
PFNGLGETMULTITEXIMAGEEXTPROC __glewGetMultiTexImageEXT;
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC __glewGetMultiTexLevelParameterfvEXT;
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC __glewGetMultiTexLevelParameterivEXT;
PFNGLGETMULTITEXPARAMETERIIVEXTPROC __glewGetMultiTexParameterIivEXT;
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC __glewGetMultiTexParameterIuivEXT;
PFNGLGETMULTITEXPARAMETERFVEXTPROC __glewGetMultiTexParameterfvEXT;
PFNGLGETMULTITEXPARAMETERIVEXTPROC __glewGetMultiTexParameterivEXT;
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC __glewGetNamedBufferParameterivEXT;
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC __glewGetNamedBufferPointervEXT;
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC __glewGetNamedBufferSubDataEXT;
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC __glewGetNamedFramebufferAttachmentParameterivEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC __glewGetNamedProgramLocalParameterIivEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC __glewGetNamedProgramLocalParameterIuivEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC __glewGetNamedProgramLocalParameterdvEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC __glewGetNamedProgramLocalParameterfvEXT;
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC __glewGetNamedProgramStringEXT;
PFNGLGETNAMEDPROGRAMIVEXTPROC __glewGetNamedProgramivEXT;
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC __glewGetNamedRenderbufferParameterivEXT;
PFNGLGETPOINTERINDEXEDVEXTPROC __glewGetPointerIndexedvEXT;
PFNGLGETPOINTERI_VEXTPROC __glewGetPointeri_vEXT;
PFNGLGETTEXTUREIMAGEEXTPROC __glewGetTextureImageEXT;
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC __glewGetTextureLevelParameterfvEXT;
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC __glewGetTextureLevelParameterivEXT;
PFNGLGETTEXTUREPARAMETERIIVEXTPROC __glewGetTextureParameterIivEXT;
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC __glewGetTextureParameterIuivEXT;
PFNGLGETTEXTUREPARAMETERFVEXTPROC __glewGetTextureParameterfvEXT;
PFNGLGETTEXTUREPARAMETERIVEXTPROC __glewGetTextureParameterivEXT;
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC __glewGetVertexArrayIntegeri_vEXT;
PFNGLGETVERTEXARRAYINTEGERVEXTPROC __glewGetVertexArrayIntegervEXT;
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC __glewGetVertexArrayPointeri_vEXT;
PFNGLGETVERTEXARRAYPOINTERVEXTPROC __glewGetVertexArrayPointervEXT;
PFNGLMAPNAMEDBUFFEREXTPROC __glewMapNamedBufferEXT;
PFNGLMAPNAMEDBUFFERRANGEEXTPROC __glewMapNamedBufferRangeEXT;
PFNGLMATRIXFRUSTUMEXTPROC __glewMatrixFrustumEXT;
PFNGLMATRIXLOADIDENTITYEXTPROC __glewMatrixLoadIdentityEXT;
PFNGLMATRIXLOADTRANSPOSEDEXTPROC __glewMatrixLoadTransposedEXT;
PFNGLMATRIXLOADTRANSPOSEFEXTPROC __glewMatrixLoadTransposefEXT;
PFNGLMATRIXLOADDEXTPROC __glewMatrixLoaddEXT;
PFNGLMATRIXLOADFEXTPROC __glewMatrixLoadfEXT;
PFNGLMATRIXMULTTRANSPOSEDEXTPROC __glewMatrixMultTransposedEXT;
PFNGLMATRIXMULTTRANSPOSEFEXTPROC __glewMatrixMultTransposefEXT;
PFNGLMATRIXMULTDEXTPROC __glewMatrixMultdEXT;
PFNGLMATRIXMULTFEXTPROC __glewMatrixMultfEXT;
PFNGLMATRIXORTHOEXTPROC __glewMatrixOrthoEXT;
PFNGLMATRIXPOPEXTPROC __glewMatrixPopEXT;
PFNGLMATRIXPUSHEXTPROC __glewMatrixPushEXT;
PFNGLMATRIXROTATEDEXTPROC __glewMatrixRotatedEXT;
PFNGLMATRIXROTATEFEXTPROC __glewMatrixRotatefEXT;
PFNGLMATRIXSCALEDEXTPROC __glewMatrixScaledEXT;
PFNGLMATRIXSCALEFEXTPROC __glewMatrixScalefEXT;
PFNGLMATRIXTRANSLATEDEXTPROC __glewMatrixTranslatedEXT;
PFNGLMATRIXTRANSLATEFEXTPROC __glewMatrixTranslatefEXT;
PFNGLMULTITEXBUFFEREXTPROC __glewMultiTexBufferEXT;
PFNGLMULTITEXCOORDPOINTEREXTPROC __glewMultiTexCoordPointerEXT;
PFNGLMULTITEXENVFEXTPROC __glewMultiTexEnvfEXT;
PFNGLMULTITEXENVFVEXTPROC __glewMultiTexEnvfvEXT;
PFNGLMULTITEXENVIEXTPROC __glewMultiTexEnviEXT;
PFNGLMULTITEXENVIVEXTPROC __glewMultiTexEnvivEXT;
PFNGLMULTITEXGENDEXTPROC __glewMultiTexGendEXT;
PFNGLMULTITEXGENDVEXTPROC __glewMultiTexGendvEXT;
PFNGLMULTITEXGENFEXTPROC __glewMultiTexGenfEXT;
PFNGLMULTITEXGENFVEXTPROC __glewMultiTexGenfvEXT;
PFNGLMULTITEXGENIEXTPROC __glewMultiTexGeniEXT;
PFNGLMULTITEXGENIVEXTPROC __glewMultiTexGenivEXT;
PFNGLMULTITEXIMAGE1DEXTPROC __glewMultiTexImage1DEXT;
PFNGLMULTITEXIMAGE2DEXTPROC __glewMultiTexImage2DEXT;
PFNGLMULTITEXIMAGE3DEXTPROC __glewMultiTexImage3DEXT;
PFNGLMULTITEXPARAMETERIIVEXTPROC __glewMultiTexParameterIivEXT;
PFNGLMULTITEXPARAMETERIUIVEXTPROC __glewMultiTexParameterIuivEXT;
PFNGLMULTITEXPARAMETERFEXTPROC __glewMultiTexParameterfEXT;
PFNGLMULTITEXPARAMETERFVEXTPROC __glewMultiTexParameterfvEXT;
PFNGLMULTITEXPARAMETERIEXTPROC __glewMultiTexParameteriEXT;
PFNGLMULTITEXPARAMETERIVEXTPROC __glewMultiTexParameterivEXT;
PFNGLMULTITEXRENDERBUFFEREXTPROC __glewMultiTexRenderbufferEXT;
PFNGLMULTITEXSUBIMAGE1DEXTPROC __glewMultiTexSubImage1DEXT;
PFNGLMULTITEXSUBIMAGE2DEXTPROC __glewMultiTexSubImage2DEXT;
PFNGLMULTITEXSUBIMAGE3DEXTPROC __glewMultiTexSubImage3DEXT;
PFNGLNAMEDBUFFERDATAEXTPROC __glewNamedBufferDataEXT;
PFNGLNAMEDBUFFERSUBDATAEXTPROC __glewNamedBufferSubDataEXT;
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC __glewNamedCopyBufferSubDataEXT;
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC __glewNamedFramebufferRenderbufferEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC __glewNamedFramebufferTexture1DEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC __glewNamedFramebufferTexture2DEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC __glewNamedFramebufferTexture3DEXT;
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC __glewNamedFramebufferTextureEXT;
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC __glewNamedFramebufferTextureFaceEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC __glewNamedFramebufferTextureLayerEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC __glewNamedProgramLocalParameter4dEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC __glewNamedProgramLocalParameter4dvEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC __glewNamedProgramLocalParameter4fEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC __glewNamedProgramLocalParameter4fvEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC __glewNamedProgramLocalParameterI4iEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC __glewNamedProgramLocalParameterI4ivEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC __glewNamedProgramLocalParameterI4uiEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC __glewNamedProgramLocalParameterI4uivEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC __glewNamedProgramLocalParameters4fvEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC __glewNamedProgramLocalParametersI4ivEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC __glewNamedProgramLocalParametersI4uivEXT;
PFNGLNAMEDPROGRAMSTRINGEXTPROC __glewNamedProgramStringEXT;
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC __glewNamedRenderbufferStorageEXT;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC __glewNamedRenderbufferStorageMultisampleCoverageEXT;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC __glewNamedRenderbufferStorageMultisampleEXT;
PFNGLPROGRAMUNIFORM1DEXTPROC __glewProgramUniform1dEXT;
PFNGLPROGRAMUNIFORM1DVEXTPROC __glewProgramUniform1dvEXT;
PFNGLPROGRAMUNIFORM1FEXTPROC __glewProgramUniform1fEXT;
PFNGLPROGRAMUNIFORM1FVEXTPROC __glewProgramUniform1fvEXT;
PFNGLPROGRAMUNIFORM1IEXTPROC __glewProgramUniform1iEXT;
PFNGLPROGRAMUNIFORM1IVEXTPROC __glewProgramUniform1ivEXT;
PFNGLPROGRAMUNIFORM1UIEXTPROC __glewProgramUniform1uiEXT;
PFNGLPROGRAMUNIFORM1UIVEXTPROC __glewProgramUniform1uivEXT;
PFNGLPROGRAMUNIFORM2DEXTPROC __glewProgramUniform2dEXT;
PFNGLPROGRAMUNIFORM2DVEXTPROC __glewProgramUniform2dvEXT;
PFNGLPROGRAMUNIFORM2FEXTPROC __glewProgramUniform2fEXT;
PFNGLPROGRAMUNIFORM2FVEXTPROC __glewProgramUniform2fvEXT;
PFNGLPROGRAMUNIFORM2IEXTPROC __glewProgramUniform2iEXT;
PFNGLPROGRAMUNIFORM2IVEXTPROC __glewProgramUniform2ivEXT;
PFNGLPROGRAMUNIFORM2UIEXTPROC __glewProgramUniform2uiEXT;
PFNGLPROGRAMUNIFORM2UIVEXTPROC __glewProgramUniform2uivEXT;
PFNGLPROGRAMUNIFORM3DEXTPROC __glewProgramUniform3dEXT;
PFNGLPROGRAMUNIFORM3DVEXTPROC __glewProgramUniform3dvEXT;
PFNGLPROGRAMUNIFORM3FEXTPROC __glewProgramUniform3fEXT;
PFNGLPROGRAMUNIFORM3FVEXTPROC __glewProgramUniform3fvEXT;
PFNGLPROGRAMUNIFORM3IEXTPROC __glewProgramUniform3iEXT;
PFNGLPROGRAMUNIFORM3IVEXTPROC __glewProgramUniform3ivEXT;
PFNGLPROGRAMUNIFORM3UIEXTPROC __glewProgramUniform3uiEXT;
PFNGLPROGRAMUNIFORM3UIVEXTPROC __glewProgramUniform3uivEXT;
PFNGLPROGRAMUNIFORM4DEXTPROC __glewProgramUniform4dEXT;
PFNGLPROGRAMUNIFORM4DVEXTPROC __glewProgramUniform4dvEXT;
PFNGLPROGRAMUNIFORM4FEXTPROC __glewProgramUniform4fEXT;
PFNGLPROGRAMUNIFORM4FVEXTPROC __glewProgramUniform4fvEXT;
PFNGLPROGRAMUNIFORM4IEXTPROC __glewProgramUniform4iEXT;
PFNGLPROGRAMUNIFORM4IVEXTPROC __glewProgramUniform4ivEXT;
PFNGLPROGRAMUNIFORM4UIEXTPROC __glewProgramUniform4uiEXT;
PFNGLPROGRAMUNIFORM4UIVEXTPROC __glewProgramUniform4uivEXT;
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC __glewProgramUniformMatrix2dvEXT;
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC __glewProgramUniformMatrix2fvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC __glewProgramUniformMatrix2x3dvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC __glewProgramUniformMatrix2x3fvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC __glewProgramUniformMatrix2x4dvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC __glewProgramUniformMatrix2x4fvEXT;
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC __glewProgramUniformMatrix3dvEXT;
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC __glewProgramUniformMatrix3fvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC __glewProgramUniformMatrix3x2dvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC __glewProgramUniformMatrix3x2fvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC __glewProgramUniformMatrix3x4dvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC __glewProgramUniformMatrix3x4fvEXT;
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC __glewProgramUniformMatrix4dvEXT;
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC __glewProgramUniformMatrix4fvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC __glewProgramUniformMatrix4x2dvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC __glewProgramUniformMatrix4x2fvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC __glewProgramUniformMatrix4x3dvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC __glewProgramUniformMatrix4x3fvEXT;
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC __glewPushClientAttribDefaultEXT;
PFNGLTEXTUREBUFFEREXTPROC __glewTextureBufferEXT;
PFNGLTEXTUREIMAGE1DEXTPROC __glewTextureImage1DEXT;
PFNGLTEXTUREIMAGE2DEXTPROC __glewTextureImage2DEXT;
PFNGLTEXTUREIMAGE3DEXTPROC __glewTextureImage3DEXT;
PFNGLTEXTUREPARAMETERIIVEXTPROC __glewTextureParameterIivEXT;
PFNGLTEXTUREPARAMETERIUIVEXTPROC __glewTextureParameterIuivEXT;
PFNGLTEXTUREPARAMETERFEXTPROC __glewTextureParameterfEXT;
PFNGLTEXTUREPARAMETERFVEXTPROC __glewTextureParameterfvEXT;
PFNGLTEXTUREPARAMETERIEXTPROC __glewTextureParameteriEXT;
PFNGLTEXTUREPARAMETERIVEXTPROC __glewTextureParameterivEXT;
PFNGLTEXTURERENDERBUFFEREXTPROC __glewTextureRenderbufferEXT;
PFNGLTEXTURESUBIMAGE1DEXTPROC __glewTextureSubImage1DEXT;
PFNGLTEXTURESUBIMAGE2DEXTPROC __glewTextureSubImage2DEXT;
PFNGLTEXTURESUBIMAGE3DEXTPROC __glewTextureSubImage3DEXT;
PFNGLUNMAPNAMEDBUFFEREXTPROC __glewUnmapNamedBufferEXT;
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC __glewVertexArrayColorOffsetEXT;
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC __glewVertexArrayEdgeFlagOffsetEXT;
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC __glewVertexArrayFogCoordOffsetEXT;
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC __glewVertexArrayIndexOffsetEXT;
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC __glewVertexArrayMultiTexCoordOffsetEXT;
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC __glewVertexArrayNormalOffsetEXT;
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC __glewVertexArraySecondaryColorOffsetEXT;
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC __glewVertexArrayTexCoordOffsetEXT;
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC __glewVertexArrayVertexAttribIOffsetEXT;
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC __glewVertexArrayVertexAttribOffsetEXT;
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC __glewVertexArrayVertexOffsetEXT;
PFNGLCOLORMASKINDEXEDEXTPROC __glewColorMaskIndexedEXT;
PFNGLDISABLEINDEXEDEXTPROC __glewDisableIndexedEXT;
PFNGLENABLEINDEXEDEXTPROC __glewEnableIndexedEXT;
PFNGLGETBOOLEANINDEXEDVEXTPROC __glewGetBooleanIndexedvEXT;
PFNGLGETINTEGERINDEXEDVEXTPROC __glewGetIntegerIndexedvEXT;
PFNGLISENABLEDINDEXEDEXTPROC __glewIsEnabledIndexedEXT;
PFNGLDRAWARRAYSINSTANCEDEXTPROC __glewDrawArraysInstancedEXT;
PFNGLDRAWELEMENTSINSTANCEDEXTPROC __glewDrawElementsInstancedEXT;
PFNGLDRAWRANGEELEMENTSEXTPROC __glewDrawRangeElementsEXT;
PFNGLFOGCOORDPOINTEREXTPROC __glewFogCoordPointerEXT;
PFNGLFOGCOORDDEXTPROC __glewFogCoorddEXT;
PFNGLFOGCOORDDVEXTPROC __glewFogCoorddvEXT;
PFNGLFOGCOORDFEXTPROC __glewFogCoordfEXT;
PFNGLFOGCOORDFVEXTPROC __glewFogCoordfvEXT;
PFNGLFRAGMENTCOLORMATERIALEXTPROC __glewFragmentColorMaterialEXT;
PFNGLFRAGMENTLIGHTMODELFEXTPROC __glewFragmentLightModelfEXT;
PFNGLFRAGMENTLIGHTMODELFVEXTPROC __glewFragmentLightModelfvEXT;
PFNGLFRAGMENTLIGHTMODELIEXTPROC __glewFragmentLightModeliEXT;
PFNGLFRAGMENTLIGHTMODELIVEXTPROC __glewFragmentLightModelivEXT;
PFNGLFRAGMENTLIGHTFEXTPROC __glewFragmentLightfEXT;
PFNGLFRAGMENTLIGHTFVEXTPROC __glewFragmentLightfvEXT;
PFNGLFRAGMENTLIGHTIEXTPROC __glewFragmentLightiEXT;
PFNGLFRAGMENTLIGHTIVEXTPROC __glewFragmentLightivEXT;
PFNGLFRAGMENTMATERIALFEXTPROC __glewFragmentMaterialfEXT;
PFNGLFRAGMENTMATERIALFVEXTPROC __glewFragmentMaterialfvEXT;
PFNGLFRAGMENTMATERIALIEXTPROC __glewFragmentMaterialiEXT;
PFNGLFRAGMENTMATERIALIVEXTPROC __glewFragmentMaterialivEXT;
PFNGLGETFRAGMENTLIGHTFVEXTPROC __glewGetFragmentLightfvEXT;
PFNGLGETFRAGMENTLIGHTIVEXTPROC __glewGetFragmentLightivEXT;
PFNGLGETFRAGMENTMATERIALFVEXTPROC __glewGetFragmentMaterialfvEXT;
PFNGLGETFRAGMENTMATERIALIVEXTPROC __glewGetFragmentMaterialivEXT;
PFNGLLIGHTENVIEXTPROC __glewLightEnviEXT;
PFNGLBLITFRAMEBUFFEREXTPROC __glewBlitFramebufferEXT;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC __glewRenderbufferStorageMultisampleEXT;
PFNGLBINDFRAMEBUFFEREXTPROC __glewBindFramebufferEXT;
PFNGLBINDRENDERBUFFEREXTPROC __glewBindRenderbufferEXT;
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC __glewCheckFramebufferStatusEXT;
PFNGLDELETEFRAMEBUFFERSEXTPROC __glewDeleteFramebuffersEXT;
PFNGLDELETERENDERBUFFERSEXTPROC __glewDeleteRenderbuffersEXT;
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC __glewFramebufferRenderbufferEXT;
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC __glewFramebufferTexture1DEXT;
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC __glewFramebufferTexture2DEXT;
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC __glewFramebufferTexture3DEXT;
PFNGLGENFRAMEBUFFERSEXTPROC __glewGenFramebuffersEXT;
PFNGLGENRENDERBUFFERSEXTPROC __glewGenRenderbuffersEXT;
PFNGLGENERATEMIPMAPEXTPROC __glewGenerateMipmapEXT;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC __glewGetFramebufferAttachmentParameterivEXT;
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC __glewGetRenderbufferParameterivEXT;
PFNGLISFRAMEBUFFEREXTPROC __glewIsFramebufferEXT;
PFNGLISRENDERBUFFEREXTPROC __glewIsRenderbufferEXT;
PFNGLRENDERBUFFERSTORAGEEXTPROC __glewRenderbufferStorageEXT;
PFNGLFRAMEBUFFERTEXTUREEXTPROC __glewFramebufferTextureEXT;
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC __glewFramebufferTextureFaceEXT;
PFNGLPROGRAMPARAMETERIEXTPROC __glewProgramParameteriEXT;
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC __glewProgramEnvParameters4fvEXT;
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC __glewProgramLocalParameters4fvEXT;
PFNGLBINDFRAGDATALOCATIONEXTPROC __glewBindFragDataLocationEXT;
PFNGLGETFRAGDATALOCATIONEXTPROC __glewGetFragDataLocationEXT;
PFNGLGETUNIFORMUIVEXTPROC __glewGetUniformuivEXT;
PFNGLGETVERTEXATTRIBIIVEXTPROC __glewGetVertexAttribIivEXT;
PFNGLGETVERTEXATTRIBIUIVEXTPROC __glewGetVertexAttribIuivEXT;
PFNGLUNIFORM1UIEXTPROC __glewUniform1uiEXT;
PFNGLUNIFORM1UIVEXTPROC __glewUniform1uivEXT;
PFNGLUNIFORM2UIEXTPROC __glewUniform2uiEXT;
PFNGLUNIFORM2UIVEXTPROC __glewUniform2uivEXT;
PFNGLUNIFORM3UIEXTPROC __glewUniform3uiEXT;
PFNGLUNIFORM3UIVEXTPROC __glewUniform3uivEXT;
PFNGLUNIFORM4UIEXTPROC __glewUniform4uiEXT;
PFNGLUNIFORM4UIVEXTPROC __glewUniform4uivEXT;
PFNGLVERTEXATTRIBI1IEXTPROC __glewVertexAttribI1iEXT;
PFNGLVERTEXATTRIBI1IVEXTPROC __glewVertexAttribI1ivEXT;
PFNGLVERTEXATTRIBI1UIEXTPROC __glewVertexAttribI1uiEXT;
PFNGLVERTEXATTRIBI1UIVEXTPROC __glewVertexAttribI1uivEXT;
PFNGLVERTEXATTRIBI2IEXTPROC __glewVertexAttribI2iEXT;
PFNGLVERTEXATTRIBI2IVEXTPROC __glewVertexAttribI2ivEXT;
PFNGLVERTEXATTRIBI2UIEXTPROC __glewVertexAttribI2uiEXT;
PFNGLVERTEXATTRIBI2UIVEXTPROC __glewVertexAttribI2uivEXT;
PFNGLVERTEXATTRIBI3IEXTPROC __glewVertexAttribI3iEXT;
PFNGLVERTEXATTRIBI3IVEXTPROC __glewVertexAttribI3ivEXT;
PFNGLVERTEXATTRIBI3UIEXTPROC __glewVertexAttribI3uiEXT;
PFNGLVERTEXATTRIBI3UIVEXTPROC __glewVertexAttribI3uivEXT;
PFNGLVERTEXATTRIBI4BVEXTPROC __glewVertexAttribI4bvEXT;
PFNGLVERTEXATTRIBI4IEXTPROC __glewVertexAttribI4iEXT;
PFNGLVERTEXATTRIBI4IVEXTPROC __glewVertexAttribI4ivEXT;
PFNGLVERTEXATTRIBI4SVEXTPROC __glewVertexAttribI4svEXT;
PFNGLVERTEXATTRIBI4UBVEXTPROC __glewVertexAttribI4ubvEXT;
PFNGLVERTEXATTRIBI4UIEXTPROC __glewVertexAttribI4uiEXT;
PFNGLVERTEXATTRIBI4UIVEXTPROC __glewVertexAttribI4uivEXT;
PFNGLVERTEXATTRIBI4USVEXTPROC __glewVertexAttribI4usvEXT;
PFNGLVERTEXATTRIBIPOINTEREXTPROC __glewVertexAttribIPointerEXT;
PFNGLGETHISTOGRAMEXTPROC __glewGetHistogramEXT;
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC __glewGetHistogramParameterfvEXT;
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC __glewGetHistogramParameterivEXT;
PFNGLGETMINMAXEXTPROC __glewGetMinmaxEXT;
PFNGLGETMINMAXPARAMETERFVEXTPROC __glewGetMinmaxParameterfvEXT;
PFNGLGETMINMAXPARAMETERIVEXTPROC __glewGetMinmaxParameterivEXT;
PFNGLHISTOGRAMEXTPROC __glewHistogramEXT;
PFNGLMINMAXEXTPROC __glewMinmaxEXT;
PFNGLRESETHISTOGRAMEXTPROC __glewResetHistogramEXT;
PFNGLRESETMINMAXEXTPROC __glewResetMinmaxEXT;
PFNGLINDEXFUNCEXTPROC __glewIndexFuncEXT;
PFNGLINDEXMATERIALEXTPROC __glewIndexMaterialEXT;
PFNGLAPPLYTEXTUREEXTPROC __glewApplyTextureEXT;
PFNGLTEXTURELIGHTEXTPROC __glewTextureLightEXT;
PFNGLTEXTUREMATERIALEXTPROC __glewTextureMaterialEXT;
PFNGLMULTIDRAWARRAYSEXTPROC __glewMultiDrawArraysEXT;
PFNGLMULTIDRAWELEMENTSEXTPROC __glewMultiDrawElementsEXT;
PFNGLSAMPLEMASKEXTPROC __glewSampleMaskEXT;
PFNGLSAMPLEPATTERNEXTPROC __glewSamplePatternEXT;
PFNGLCOLORTABLEEXTPROC __glewColorTableEXT;
PFNGLGETCOLORTABLEEXTPROC __glewGetColorTableEXT;
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC __glewGetColorTableParameterfvEXT;
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC __glewGetColorTableParameterivEXT;
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC __glewGetPixelTransformParameterfvEXT;
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC __glewGetPixelTransformParameterivEXT;
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC __glewPixelTransformParameterfEXT;
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC __glewPixelTransformParameterfvEXT;
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC __glewPixelTransformParameteriEXT;
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC __glewPixelTransformParameterivEXT;
PFNGLPOINTPARAMETERFEXTPROC __glewPointParameterfEXT;
PFNGLPOINTPARAMETERFVEXTPROC __glewPointParameterfvEXT;
PFNGLPOLYGONOFFSETEXTPROC __glewPolygonOffsetEXT;
PFNGLPROVOKINGVERTEXEXTPROC __glewProvokingVertexEXT;
PFNGLBEGINSCENEEXTPROC __glewBeginSceneEXT;
PFNGLENDSCENEEXTPROC __glewEndSceneEXT;
PFNGLSECONDARYCOLOR3BEXTPROC __glewSecondaryColor3bEXT;
PFNGLSECONDARYCOLOR3BVEXTPROC __glewSecondaryColor3bvEXT;
PFNGLSECONDARYCOLOR3DEXTPROC __glewSecondaryColor3dEXT;
PFNGLSECONDARYCOLOR3DVEXTPROC __glewSecondaryColor3dvEXT;
PFNGLSECONDARYCOLOR3FEXTPROC __glewSecondaryColor3fEXT;
PFNGLSECONDARYCOLOR3FVEXTPROC __glewSecondaryColor3fvEXT;
PFNGLSECONDARYCOLOR3IEXTPROC __glewSecondaryColor3iEXT;
PFNGLSECONDARYCOLOR3IVEXTPROC __glewSecondaryColor3ivEXT;
PFNGLSECONDARYCOLOR3SEXTPROC __glewSecondaryColor3sEXT;
PFNGLSECONDARYCOLOR3SVEXTPROC __glewSecondaryColor3svEXT;
PFNGLSECONDARYCOLOR3UBEXTPROC __glewSecondaryColor3ubEXT;
PFNGLSECONDARYCOLOR3UBVEXTPROC __glewSecondaryColor3ubvEXT;
PFNGLSECONDARYCOLOR3UIEXTPROC __glewSecondaryColor3uiEXT;
PFNGLSECONDARYCOLOR3UIVEXTPROC __glewSecondaryColor3uivEXT;
PFNGLSECONDARYCOLOR3USEXTPROC __glewSecondaryColor3usEXT;
PFNGLSECONDARYCOLOR3USVEXTPROC __glewSecondaryColor3usvEXT;
PFNGLSECONDARYCOLORPOINTEREXTPROC __glewSecondaryColorPointerEXT;
PFNGLACTIVEPROGRAMEXTPROC __glewActiveProgramEXT;
PFNGLCREATESHADERPROGRAMEXTPROC __glewCreateShaderProgramEXT;
PFNGLUSESHADERPROGRAMEXTPROC __glewUseShaderProgramEXT;
PFNGLBINDIMAGETEXTUREEXTPROC __glewBindImageTextureEXT;
PFNGLMEMORYBARRIEREXTPROC __glewMemoryBarrierEXT;
PFNGLACTIVESTENCILFACEEXTPROC __glewActiveStencilFaceEXT;
PFNGLTEXSUBIMAGE1DEXTPROC __glewTexSubImage1DEXT;
PFNGLTEXSUBIMAGE2DEXTPROC __glewTexSubImage2DEXT;
PFNGLTEXSUBIMAGE3DEXTPROC __glewTexSubImage3DEXT;
PFNGLTEXIMAGE3DEXTPROC __glewTexImage3DEXT;
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC __glewFramebufferTextureLayerEXT;
PFNGLTEXBUFFEREXTPROC __glewTexBufferEXT;
PFNGLCLEARCOLORIIEXTPROC __glewClearColorIiEXT;
PFNGLCLEARCOLORIUIEXTPROC __glewClearColorIuiEXT;
PFNGLGETTEXPARAMETERIIVEXTPROC __glewGetTexParameterIivEXT;
PFNGLGETTEXPARAMETERIUIVEXTPROC __glewGetTexParameterIuivEXT;
PFNGLTEXPARAMETERIIVEXTPROC __glewTexParameterIivEXT;
PFNGLTEXPARAMETERIUIVEXTPROC __glewTexParameterIuivEXT;
PFNGLARETEXTURESRESIDENTEXTPROC __glewAreTexturesResidentEXT;
PFNGLBINDTEXTUREEXTPROC __glewBindTextureEXT;
PFNGLDELETETEXTURESEXTPROC __glewDeleteTexturesEXT;
PFNGLGENTEXTURESEXTPROC __glewGenTexturesEXT;
PFNGLISTEXTUREEXTPROC __glewIsTextureEXT;
PFNGLPRIORITIZETEXTURESEXTPROC __glewPrioritizeTexturesEXT;
PFNGLTEXTURENORMALEXTPROC __glewTextureNormalEXT;
PFNGLGETQUERYOBJECTI64VEXTPROC __glewGetQueryObjecti64vEXT;
PFNGLGETQUERYOBJECTUI64VEXTPROC __glewGetQueryObjectui64vEXT;
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC __glewBeginTransformFeedbackEXT;
PFNGLBINDBUFFERBASEEXTPROC __glewBindBufferBaseEXT;
PFNGLBINDBUFFEROFFSETEXTPROC __glewBindBufferOffsetEXT;
PFNGLBINDBUFFERRANGEEXTPROC __glewBindBufferRangeEXT;
PFNGLENDTRANSFORMFEEDBACKEXTPROC __glewEndTransformFeedbackEXT;
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC __glewGetTransformFeedbackVaryingEXT;
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC __glewTransformFeedbackVaryingsEXT;
PFNGLARRAYELEMENTEXTPROC __glewArrayElementEXT;
PFNGLCOLORPOINTEREXTPROC __glewColorPointerEXT;
PFNGLDRAWARRAYSEXTPROC __glewDrawArraysEXT;
PFNGLEDGEFLAGPOINTEREXTPROC __glewEdgeFlagPointerEXT;
PFNGLINDEXPOINTEREXTPROC __glewIndexPointerEXT;
PFNGLNORMALPOINTEREXTPROC __glewNormalPointerEXT;
PFNGLTEXCOORDPOINTEREXTPROC __glewTexCoordPointerEXT;
PFNGLVERTEXPOINTEREXTPROC __glewVertexPointerEXT;
PFNGLGETVERTEXATTRIBLDVEXTPROC __glewGetVertexAttribLdvEXT;
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC __glewVertexArrayVertexAttribLOffsetEXT;
PFNGLVERTEXATTRIBL1DEXTPROC __glewVertexAttribL1dEXT;
PFNGLVERTEXATTRIBL1DVEXTPROC __glewVertexAttribL1dvEXT;
PFNGLVERTEXATTRIBL2DEXTPROC __glewVertexAttribL2dEXT;
PFNGLVERTEXATTRIBL2DVEXTPROC __glewVertexAttribL2dvEXT;
PFNGLVERTEXATTRIBL3DEXTPROC __glewVertexAttribL3dEXT;
PFNGLVERTEXATTRIBL3DVEXTPROC __glewVertexAttribL3dvEXT;
PFNGLVERTEXATTRIBL4DEXTPROC __glewVertexAttribL4dEXT;
PFNGLVERTEXATTRIBL4DVEXTPROC __glewVertexAttribL4dvEXT;
PFNGLVERTEXATTRIBLPOINTEREXTPROC __glewVertexAttribLPointerEXT;
PFNGLBEGINVERTEXSHADEREXTPROC __glewBeginVertexShaderEXT;
PFNGLBINDLIGHTPARAMETEREXTPROC __glewBindLightParameterEXT;
PFNGLBINDMATERIALPARAMETEREXTPROC __glewBindMaterialParameterEXT;
PFNGLBINDPARAMETEREXTPROC __glewBindParameterEXT;
PFNGLBINDTEXGENPARAMETEREXTPROC __glewBindTexGenParameterEXT;
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC __glewBindTextureUnitParameterEXT;
PFNGLBINDVERTEXSHADEREXTPROC __glewBindVertexShaderEXT;
PFNGLDELETEVERTEXSHADEREXTPROC __glewDeleteVertexShaderEXT;
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC __glewDisableVariantClientStateEXT;
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC __glewEnableVariantClientStateEXT;
PFNGLENDVERTEXSHADEREXTPROC __glewEndVertexShaderEXT;
PFNGLEXTRACTCOMPONENTEXTPROC __glewExtractComponentEXT;
PFNGLGENSYMBOLSEXTPROC __glewGenSymbolsEXT;
PFNGLGENVERTEXSHADERSEXTPROC __glewGenVertexShadersEXT;
PFNGLGETINVARIANTBOOLEANVEXTPROC __glewGetInvariantBooleanvEXT;
PFNGLGETINVARIANTFLOATVEXTPROC __glewGetInvariantFloatvEXT;
PFNGLGETINVARIANTINTEGERVEXTPROC __glewGetInvariantIntegervEXT;
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC __glewGetLocalConstantBooleanvEXT;
PFNGLGETLOCALCONSTANTFLOATVEXTPROC __glewGetLocalConstantFloatvEXT;
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC __glewGetLocalConstantIntegervEXT;
PFNGLGETVARIANTBOOLEANVEXTPROC __glewGetVariantBooleanvEXT;
PFNGLGETVARIANTFLOATVEXTPROC __glewGetVariantFloatvEXT;
PFNGLGETVARIANTINTEGERVEXTPROC __glewGetVariantIntegervEXT;
PFNGLGETVARIANTPOINTERVEXTPROC __glewGetVariantPointervEXT;
PFNGLINSERTCOMPONENTEXTPROC __glewInsertComponentEXT;
PFNGLISVARIANTENABLEDEXTPROC __glewIsVariantEnabledEXT;
PFNGLSETINVARIANTEXTPROC __glewSetInvariantEXT;
PFNGLSETLOCALCONSTANTEXTPROC __glewSetLocalConstantEXT;
PFNGLSHADEROP1EXTPROC __glewShaderOp1EXT;
PFNGLSHADEROP2EXTPROC __glewShaderOp2EXT;
PFNGLSHADEROP3EXTPROC __glewShaderOp3EXT;
PFNGLSWIZZLEEXTPROC __glewSwizzleEXT;
PFNGLVARIANTPOINTEREXTPROC __glewVariantPointerEXT;
PFNGLVARIANTBVEXTPROC __glewVariantbvEXT;
PFNGLVARIANTDVEXTPROC __glewVariantdvEXT;
PFNGLVARIANTFVEXTPROC __glewVariantfvEXT;
PFNGLVARIANTIVEXTPROC __glewVariantivEXT;
PFNGLVARIANTSVEXTPROC __glewVariantsvEXT;
PFNGLVARIANTUBVEXTPROC __glewVariantubvEXT;
PFNGLVARIANTUIVEXTPROC __glewVariantuivEXT;
PFNGLVARIANTUSVEXTPROC __glewVariantusvEXT;
PFNGLWRITEMASKEXTPROC __glewWriteMaskEXT;
PFNGLVERTEXWEIGHTPOINTEREXTPROC __glewVertexWeightPointerEXT;
PFNGLVERTEXWEIGHTFEXTPROC __glewVertexWeightfEXT;
PFNGLVERTEXWEIGHTFVEXTPROC __glewVertexWeightfvEXT;
PFNGLIMPORTSYNCEXTPROC __glewImportSyncEXT;
PFNGLFRAMETERMINATORGREMEDYPROC __glewFrameTerminatorGREMEDY;
PFNGLSTRINGMARKERGREMEDYPROC __glewStringMarkerGREMEDY;
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC __glewGetImageTransformParameterfvHP;
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC __glewGetImageTransformParameterivHP;
PFNGLIMAGETRANSFORMPARAMETERFHPPROC __glewImageTransformParameterfHP;
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC __glewImageTransformParameterfvHP;
PFNGLIMAGETRANSFORMPARAMETERIHPPROC __glewImageTransformParameteriHP;
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC __glewImageTransformParameterivHP;
PFNGLMULTIMODEDRAWARRAYSIBMPROC __glewMultiModeDrawArraysIBM;
PFNGLMULTIMODEDRAWELEMENTSIBMPROC __glewMultiModeDrawElementsIBM;
PFNGLCOLORPOINTERLISTIBMPROC __glewColorPointerListIBM;
PFNGLEDGEFLAGPOINTERLISTIBMPROC __glewEdgeFlagPointerListIBM;
PFNGLFOGCOORDPOINTERLISTIBMPROC __glewFogCoordPointerListIBM;
PFNGLINDEXPOINTERLISTIBMPROC __glewIndexPointerListIBM;
PFNGLNORMALPOINTERLISTIBMPROC __glewNormalPointerListIBM;
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC __glewSecondaryColorPointerListIBM;
PFNGLTEXCOORDPOINTERLISTIBMPROC __glewTexCoordPointerListIBM;
PFNGLVERTEXPOINTERLISTIBMPROC __glewVertexPointerListIBM;
PFNGLCOLORPOINTERVINTELPROC __glewColorPointervINTEL;
PFNGLNORMALPOINTERVINTELPROC __glewNormalPointervINTEL;
PFNGLTEXCOORDPOINTERVINTELPROC __glewTexCoordPointervINTEL;
PFNGLVERTEXPOINTERVINTELPROC __glewVertexPointervINTEL;
PFNGLTEXSCISSORFUNCINTELPROC __glewTexScissorFuncINTEL;
PFNGLTEXSCISSORINTELPROC __glewTexScissorINTEL;
PFNGLDEBUGMESSAGECALLBACKPROC __glewDebugMessageCallback;
PFNGLDEBUGMESSAGECONTROLPROC __glewDebugMessageControl;
PFNGLDEBUGMESSAGEINSERTPROC __glewDebugMessageInsert;
PFNGLGETDEBUGMESSAGELOGPROC __glewGetDebugMessageLog;
PFNGLGETOBJECTLABELPROC __glewGetObjectLabel;
PFNGLGETOBJECTPTRLABELPROC __glewGetObjectPtrLabel;
PFNGLGETPOINTERVPROC __glewGetPointerv;
PFNGLOBJECTLABELPROC __glewObjectLabel;
PFNGLOBJECTPTRLABELPROC __glewObjectPtrLabel;
PFNGLPUSHDEBUGGROUPPROC __glewPushDebugGroup;
PFNGLBUFFERREGIONENABLEDPROC __glewBufferRegionEnabled;
PFNGLDELETEBUFFERREGIONPROC __glewDeleteBufferRegion;
PFNGLDRAWBUFFERREGIONPROC __glewDrawBufferRegion;
PFNGLNEWBUFFERREGIONPROC __glewNewBufferRegion;
PFNGLREADBUFFERREGIONPROC __glewReadBufferRegion;
PFNGLRESIZEBUFFERSMESAPROC __glewResizeBuffersMESA;
PFNGLWINDOWPOS2DMESAPROC __glewWindowPos2dMESA;
PFNGLWINDOWPOS2DVMESAPROC __glewWindowPos2dvMESA;
PFNGLWINDOWPOS2FMESAPROC __glewWindowPos2fMESA;
PFNGLWINDOWPOS2FVMESAPROC __glewWindowPos2fvMESA;
PFNGLWINDOWPOS2IMESAPROC __glewWindowPos2iMESA;
PFNGLWINDOWPOS2IVMESAPROC __glewWindowPos2ivMESA;
PFNGLWINDOWPOS2SMESAPROC __glewWindowPos2sMESA;
PFNGLWINDOWPOS2SVMESAPROC __glewWindowPos2svMESA;
PFNGLWINDOWPOS3DMESAPROC __glewWindowPos3dMESA;
PFNGLWINDOWPOS3DVMESAPROC __glewWindowPos3dvMESA;
PFNGLWINDOWPOS3FMESAPROC __glewWindowPos3fMESA;
PFNGLWINDOWPOS3FVMESAPROC __glewWindowPos3fvMESA;
PFNGLWINDOWPOS3IMESAPROC __glewWindowPos3iMESA;
PFNGLWINDOWPOS3IVMESAPROC __glewWindowPos3ivMESA;
PFNGLWINDOWPOS3SMESAPROC __glewWindowPos3sMESA;
PFNGLWINDOWPOS3SVMESAPROC __glewWindowPos3svMESA;
PFNGLWINDOWPOS4DMESAPROC __glewWindowPos4dMESA;
PFNGLWINDOWPOS4DVMESAPROC __glewWindowPos4dvMESA;
PFNGLWINDOWPOS4FMESAPROC __glewWindowPos4fMESA;
PFNGLWINDOWPOS4FVMESAPROC __glewWindowPos4fvMESA;
PFNGLWINDOWPOS4IMESAPROC __glewWindowPos4iMESA;
PFNGLWINDOWPOS4IVMESAPROC __glewWindowPos4ivMESA;
PFNGLWINDOWPOS4SMESAPROC __glewWindowPos4sMESA;
PFNGLWINDOWPOS4SVMESAPROC __glewWindowPos4svMESA;
PFNGLGETIMAGEHANDLENVPROC __glewGetImageHandleNV;
PFNGLGETTEXTUREHANDLENVPROC __glewGetTextureHandleNV;
PFNGLGETTEXTURESAMPLERHANDLENVPROC __glewGetTextureSamplerHandleNV;
PFNGLISIMAGEHANDLERESIDENTNVPROC __glewIsImageHandleResidentNV;
PFNGLISTEXTUREHANDLERESIDENTNVPROC __glewIsTextureHandleResidentNV;
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC __glewMakeImageHandleNonResidentNV;
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC __glewMakeImageHandleResidentNV;
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC __glewMakeTextureHandleNonResidentNV;
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC __glewMakeTextureHandleResidentNV;
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC __glewProgramUniformHandleui64NV;
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC __glewProgramUniformHandleui64vNV;
PFNGLUNIFORMHANDLEUI64NVPROC __glewUniformHandleui64NV;
PFNGLUNIFORMHANDLEUI64VNVPROC __glewUniformHandleui64vNV;
PFNGLBEGINCONDITIONALRENDERNVPROC __glewBeginConditionalRenderNV;
PFNGLENDCONDITIONALRENDERNVPROC __glewEndConditionalRenderNV;
PFNGLCOPYIMAGESUBDATANVPROC __glewCopyImageSubDataNV;
PFNGLCLEARDEPTHDNVPROC __glewClearDepthdNV;
PFNGLDEPTHBOUNDSDNVPROC __glewDepthBoundsdNV;
PFNGLDEPTHRANGEDNVPROC __glewDepthRangedNV;
PFNGLEVALMAPSNVPROC __glewEvalMapsNV;
PFNGLGETMAPATTRIBPARAMETERFVNVPROC __glewGetMapAttribParameterfvNV;
PFNGLGETMAPATTRIBPARAMETERIVNVPROC __glewGetMapAttribParameterivNV;
PFNGLGETMAPCONTROLPOINTSNVPROC __glewGetMapControlPointsNV;
PFNGLGETMAPPARAMETERFVNVPROC __glewGetMapParameterfvNV;
PFNGLGETMAPPARAMETERIVNVPROC __glewGetMapParameterivNV;
PFNGLMAPCONTROLPOINTSNVPROC __glewMapControlPointsNV;
PFNGLMAPPARAMETERFVNVPROC __glewMapParameterfvNV;
PFNGLMAPPARAMETERIVNVPROC __glewMapParameterivNV;
PFNGLGETMULTISAMPLEFVNVPROC __glewGetMultisamplefvNV;
PFNGLSAMPLEMASKINDEXEDNVPROC __glewSampleMaskIndexedNV;
PFNGLTEXRENDERBUFFERNVPROC __glewTexRenderbufferNV;
PFNGLDELETEFENCESNVPROC __glewDeleteFencesNV;
PFNGLFINISHFENCENVPROC __glewFinishFenceNV;
PFNGLGENFENCESNVPROC __glewGenFencesNV;
PFNGLGETFENCEIVNVPROC __glewGetFenceivNV;
PFNGLISFENCENVPROC __glewIsFenceNV;
PFNGLSETFENCENVPROC __glewSetFenceNV;
PFNGLTESTFENCENVPROC __glewTestFenceNV;
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC __glewGetProgramNamedParameterdvNV;
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC __glewGetProgramNamedParameterfvNV;
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC __glewProgramNamedParameter4dNV;
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC __glewProgramNamedParameter4dvNV;
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC __glewProgramNamedParameter4fNV;
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC __glewProgramNamedParameter4fvNV;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC __glewRenderbufferStorageMultisampleCoverageNV;
PFNGLPROGRAMVERTEXLIMITNVPROC __glewProgramVertexLimitNV;
PFNGLPROGRAMENVPARAMETERI4INVPROC __glewProgramEnvParameterI4iNV;
PFNGLPROGRAMENVPARAMETERI4IVNVPROC __glewProgramEnvParameterI4ivNV;
PFNGLPROGRAMENVPARAMETERI4UINVPROC __glewProgramEnvParameterI4uiNV;
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC __glewProgramEnvParameterI4uivNV;
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC __glewProgramEnvParametersI4ivNV;
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC __glewProgramEnvParametersI4uivNV;
PFNGLPROGRAMLOCALPARAMETERI4INVPROC __glewProgramLocalParameterI4iNV;
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC __glewProgramLocalParameterI4ivNV;
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC __glewProgramLocalParameterI4uiNV;
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC __glewProgramLocalParameterI4uivNV;
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC __glewProgramLocalParametersI4ivNV;
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC __glewProgramLocalParametersI4uivNV;
PFNGLGETUNIFORMI64VNVPROC __glewGetUniformi64vNV;
PFNGLGETUNIFORMUI64VNVPROC __glewGetUniformui64vNV;
PFNGLPROGRAMUNIFORM1I64NVPROC __glewProgramUniform1i64NV;
PFNGLPROGRAMUNIFORM1I64VNVPROC __glewProgramUniform1i64vNV;
PFNGLPROGRAMUNIFORM1UI64NVPROC __glewProgramUniform1ui64NV;
PFNGLPROGRAMUNIFORM1UI64VNVPROC __glewProgramUniform1ui64vNV;
PFNGLPROGRAMUNIFORM2I64NVPROC __glewProgramUniform2i64NV;
PFNGLPROGRAMUNIFORM2I64VNVPROC __glewProgramUniform2i64vNV;
PFNGLPROGRAMUNIFORM2UI64NVPROC __glewProgramUniform2ui64NV;
PFNGLPROGRAMUNIFORM2UI64VNVPROC __glewProgramUniform2ui64vNV;
PFNGLPROGRAMUNIFORM3I64NVPROC __glewProgramUniform3i64NV;
PFNGLPROGRAMUNIFORM3I64VNVPROC __glewProgramUniform3i64vNV;
PFNGLPROGRAMUNIFORM3UI64NVPROC __glewProgramUniform3ui64NV;
PFNGLPROGRAMUNIFORM3UI64VNVPROC __glewProgramUniform3ui64vNV;
PFNGLPROGRAMUNIFORM4I64NVPROC __glewProgramUniform4i64NV;
PFNGLPROGRAMUNIFORM4I64VNVPROC __glewProgramUniform4i64vNV;
PFNGLPROGRAMUNIFORM4UI64NVPROC __glewProgramUniform4ui64NV;
PFNGLPROGRAMUNIFORM4UI64VNVPROC __glewProgramUniform4ui64vNV;
PFNGLUNIFORM1I64NVPROC __glewUniform1i64NV;
PFNGLUNIFORM1I64VNVPROC __glewUniform1i64vNV;
PFNGLUNIFORM1UI64NVPROC __glewUniform1ui64NV;
PFNGLUNIFORM1UI64VNVPROC __glewUniform1ui64vNV;
PFNGLUNIFORM2I64NVPROC __glewUniform2i64NV;
PFNGLUNIFORM2I64VNVPROC __glewUniform2i64vNV;
PFNGLUNIFORM2UI64NVPROC __glewUniform2ui64NV;
PFNGLUNIFORM2UI64VNVPROC __glewUniform2ui64vNV;
PFNGLUNIFORM3I64NVPROC __glewUniform3i64NV;
PFNGLUNIFORM3I64VNVPROC __glewUniform3i64vNV;
PFNGLUNIFORM3UI64NVPROC __glewUniform3ui64NV;
PFNGLUNIFORM3UI64VNVPROC __glewUniform3ui64vNV;
PFNGLUNIFORM4I64NVPROC __glewUniform4i64NV;
PFNGLUNIFORM4I64VNVPROC __glewUniform4i64vNV;
PFNGLUNIFORM4UI64NVPROC __glewUniform4ui64NV;
PFNGLUNIFORM4UI64VNVPROC __glewUniform4ui64vNV;
PFNGLCOLOR3HNVPROC __glewColor3hNV;
PFNGLCOLOR3HVNVPROC __glewColor3hvNV;
PFNGLCOLOR4HNVPROC __glewColor4hNV;
PFNGLCOLOR4HVNVPROC __glewColor4hvNV;
PFNGLFOGCOORDHNVPROC __glewFogCoordhNV;
PFNGLFOGCOORDHVNVPROC __glewFogCoordhvNV;
PFNGLMULTITEXCOORD1HNVPROC __glewMultiTexCoord1hNV;
PFNGLMULTITEXCOORD1HVNVPROC __glewMultiTexCoord1hvNV;
PFNGLMULTITEXCOORD2HNVPROC __glewMultiTexCoord2hNV;
PFNGLMULTITEXCOORD2HVNVPROC __glewMultiTexCoord2hvNV;
PFNGLMULTITEXCOORD3HNVPROC __glewMultiTexCoord3hNV;
PFNGLMULTITEXCOORD3HVNVPROC __glewMultiTexCoord3hvNV;
PFNGLMULTITEXCOORD4HNVPROC __glewMultiTexCoord4hNV;
PFNGLMULTITEXCOORD4HVNVPROC __glewMultiTexCoord4hvNV;
PFNGLNORMAL3HNVPROC __glewNormal3hNV;
PFNGLNORMAL3HVNVPROC __glewNormal3hvNV;
PFNGLSECONDARYCOLOR3HNVPROC __glewSecondaryColor3hNV;
PFNGLSECONDARYCOLOR3HVNVPROC __glewSecondaryColor3hvNV;
PFNGLTEXCOORD1HNVPROC __glewTexCoord1hNV;
PFNGLTEXCOORD1HVNVPROC __glewTexCoord1hvNV;
PFNGLTEXCOORD2HNVPROC __glewTexCoord2hNV;
PFNGLTEXCOORD2HVNVPROC __glewTexCoord2hvNV;
PFNGLTEXCOORD3HNVPROC __glewTexCoord3hNV;
PFNGLTEXCOORD3HVNVPROC __glewTexCoord3hvNV;
PFNGLTEXCOORD4HNVPROC __glewTexCoord4hNV;
PFNGLTEXCOORD4HVNVPROC __glewTexCoord4hvNV;
PFNGLVERTEX2HNVPROC __glewVertex2hNV;
PFNGLVERTEX2HVNVPROC __glewVertex2hvNV;
PFNGLVERTEX3HNVPROC __glewVertex3hNV;
PFNGLVERTEX3HVNVPROC __glewVertex3hvNV;
PFNGLVERTEX4HNVPROC __glewVertex4hNV;
PFNGLVERTEX4HVNVPROC __glewVertex4hvNV;
PFNGLVERTEXATTRIB1HNVPROC __glewVertexAttrib1hNV;
PFNGLVERTEXATTRIB1HVNVPROC __glewVertexAttrib1hvNV;
PFNGLVERTEXATTRIB2HNVPROC __glewVertexAttrib2hNV;
PFNGLVERTEXATTRIB2HVNVPROC __glewVertexAttrib2hvNV;
PFNGLVERTEXATTRIB3HNVPROC __glewVertexAttrib3hNV;
PFNGLVERTEXATTRIB3HVNVPROC __glewVertexAttrib3hvNV;
PFNGLVERTEXATTRIB4HNVPROC __glewVertexAttrib4hNV;
PFNGLVERTEXATTRIB4HVNVPROC __glewVertexAttrib4hvNV;
PFNGLVERTEXATTRIBS1HVNVPROC __glewVertexAttribs1hvNV;
PFNGLVERTEXATTRIBS2HVNVPROC __glewVertexAttribs2hvNV;
PFNGLVERTEXATTRIBS3HVNVPROC __glewVertexAttribs3hvNV;
PFNGLVERTEXATTRIBS4HVNVPROC __glewVertexAttribs4hvNV;
PFNGLVERTEXWEIGHTHNVPROC __glewVertexWeighthNV;
PFNGLVERTEXWEIGHTHVNVPROC __glewVertexWeighthvNV;
PFNGLBEGINOCCLUSIONQUERYNVPROC __glewBeginOcclusionQueryNV;
PFNGLDELETEOCCLUSIONQUERIESNVPROC __glewDeleteOcclusionQueriesNV;
PFNGLENDOCCLUSIONQUERYNVPROC __glewEndOcclusionQueryNV;
PFNGLGENOCCLUSIONQUERIESNVPROC __glewGenOcclusionQueriesNV;
PFNGLGETOCCLUSIONQUERYIVNVPROC __glewGetOcclusionQueryivNV;
PFNGLGETOCCLUSIONQUERYUIVNVPROC __glewGetOcclusionQueryuivNV;
PFNGLISOCCLUSIONQUERYNVPROC __glewIsOcclusionQueryNV;
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC __glewProgramBufferParametersIivNV;
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC __glewProgramBufferParametersIuivNV;
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC __glewProgramBufferParametersfvNV;
PFNGLCOPYPATHNVPROC __glewCopyPathNV;
PFNGLCOVERFILLPATHINSTANCEDNVPROC __glewCoverFillPathInstancedNV;
PFNGLCOVERFILLPATHNVPROC __glewCoverFillPathNV;
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC __glewCoverStrokePathInstancedNV;
PFNGLCOVERSTROKEPATHNVPROC __glewCoverStrokePathNV;
PFNGLDELETEPATHSNVPROC __glewDeletePathsNV;
PFNGLGENPATHSNVPROC __glewGenPathsNV;
PFNGLGETPATHCOLORGENFVNVPROC __glewGetPathColorGenfvNV;
PFNGLGETPATHCOLORGENIVNVPROC __glewGetPathColorGenivNV;
PFNGLGETPATHCOMMANDSNVPROC __glewGetPathCommandsNV;
PFNGLGETPATHCOORDSNVPROC __glewGetPathCoordsNV;
PFNGLGETPATHDASHARRAYNVPROC __glewGetPathDashArrayNV;
PFNGLGETPATHLENGTHNVPROC __glewGetPathLengthNV;
PFNGLGETPATHMETRICRANGENVPROC __glewGetPathMetricRangeNV;
PFNGLGETPATHMETRICSNVPROC __glewGetPathMetricsNV;
PFNGLGETPATHPARAMETERFVNVPROC __glewGetPathParameterfvNV;
PFNGLGETPATHPARAMETERIVNVPROC __glewGetPathParameterivNV;
PFNGLGETPATHSPACINGNVPROC __glewGetPathSpacingNV;
PFNGLGETPATHTEXGENFVNVPROC __glewGetPathTexGenfvNV;
PFNGLGETPATHTEXGENIVNVPROC __glewGetPathTexGenivNV;
PFNGLINTERPOLATEPATHSNVPROC __glewInterpolatePathsNV;
PFNGLISPATHNVPROC __glewIsPathNV;
PFNGLISPOINTINFILLPATHNVPROC __glewIsPointInFillPathNV;
PFNGLISPOINTINSTROKEPATHNVPROC __glewIsPointInStrokePathNV;
PFNGLPATHCOLORGENNVPROC __glewPathColorGenNV;
PFNGLPATHCOMMANDSNVPROC __glewPathCommandsNV;
PFNGLPATHCOORDSNVPROC __glewPathCoordsNV;
PFNGLPATHCOVERDEPTHFUNCNVPROC __glewPathCoverDepthFuncNV;
PFNGLPATHDASHARRAYNVPROC __glewPathDashArrayNV;
PFNGLPATHFOGGENNVPROC __glewPathFogGenNV;
PFNGLPATHGLYPHRANGENVPROC __glewPathGlyphRangeNV;
PFNGLPATHGLYPHSNVPROC __glewPathGlyphsNV;
PFNGLPATHPARAMETERFNVPROC __glewPathParameterfNV;
PFNGLPATHPARAMETERFVNVPROC __glewPathParameterfvNV;
PFNGLPATHPARAMETERINVPROC __glewPathParameteriNV;
PFNGLPATHPARAMETERIVNVPROC __glewPathParameterivNV;
PFNGLPATHSTENCILDEPTHOFFSETNVPROC __glewPathStencilDepthOffsetNV;
PFNGLPATHSTENCILFUNCNVPROC __glewPathStencilFuncNV;
PFNGLPATHSTRINGNVPROC __glewPathStringNV;
PFNGLPATHSUBCOMMANDSNVPROC __glewPathSubCommandsNV;
PFNGLPATHSUBCOORDSNVPROC __glewPathSubCoordsNV;
PFNGLPATHTEXGENNVPROC __glewPathTexGenNV;
PFNGLPOINTALONGPATHNVPROC __glewPointAlongPathNV;
PFNGLSTENCILFILLPATHINSTANCEDNVPROC __glewStencilFillPathInstancedNV;
PFNGLSTENCILFILLPATHNVPROC __glewStencilFillPathNV;
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC __glewStencilStrokePathInstancedNV;
PFNGLSTENCILSTROKEPATHNVPROC __glewStencilStrokePathNV;
PFNGLTRANSFORMPATHNVPROC __glewTransformPathNV;
PFNGLWEIGHTPATHSNVPROC __glewWeightPathsNV;
PFNGLFLUSHPIXELDATARANGENVPROC __glewFlushPixelDataRangeNV;
PFNGLPIXELDATARANGENVPROC __glewPixelDataRangeNV;
PFNGLPOINTPARAMETERINVPROC __glewPointParameteriNV;
PFNGLPOINTPARAMETERIVNVPROC __glewPointParameterivNV;
PFNGLGETVIDEOI64VNVPROC __glewGetVideoi64vNV;
PFNGLGETVIDEOIVNVPROC __glewGetVideoivNV;
PFNGLGETVIDEOUI64VNVPROC __glewGetVideoui64vNV;
PFNGLGETVIDEOUIVNVPROC __glewGetVideouivNV;
PFNGLPRESENTFRAMEDUALFILLNVPROC __glewPresentFrameDualFillNV;
PFNGLPRESENTFRAMEKEYEDNVPROC __glewPresentFrameKeyedNV;
PFNGLPRIMITIVERESTARTINDEXNVPROC __glewPrimitiveRestartIndexNV;
PFNGLPRIMITIVERESTARTNVPROC __glewPrimitiveRestartNV;
PFNGLCOMBINERINPUTNVPROC __glewCombinerInputNV;
PFNGLCOMBINEROUTPUTNVPROC __glewCombinerOutputNV;
PFNGLCOMBINERPARAMETERFNVPROC __glewCombinerParameterfNV;
PFNGLCOMBINERPARAMETERFVNVPROC __glewCombinerParameterfvNV;
PFNGLCOMBINERPARAMETERINVPROC __glewCombinerParameteriNV;
PFNGLCOMBINERPARAMETERIVNVPROC __glewCombinerParameterivNV;
PFNGLFINALCOMBINERINPUTNVPROC __glewFinalCombinerInputNV;
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC __glewGetCombinerInputParameterfvNV;
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC __glewGetCombinerInputParameterivNV;
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC __glewGetCombinerOutputParameterfvNV;
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC __glewGetCombinerOutputParameterivNV;
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC __glewGetFinalCombinerInputParameterfvNV;
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC __glewGetFinalCombinerInputParameterivNV;
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC __glewCombinerStageParameterfvNV;
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC __glewGetCombinerStageParameterfvNV;
PFNGLGETBUFFERPARAMETERUI64VNVPROC __glewGetBufferParameterui64vNV;
PFNGLGETINTEGERUI64VNVPROC __glewGetIntegerui64vNV;
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC __glewGetNamedBufferParameterui64vNV;
PFNGLISBUFFERRESIDENTNVPROC __glewIsBufferResidentNV;
PFNGLISNAMEDBUFFERRESIDENTNVPROC __glewIsNamedBufferResidentNV;
PFNGLMAKEBUFFERNONRESIDENTNVPROC __glewMakeBufferNonResidentNV;
PFNGLMAKEBUFFERRESIDENTNVPROC __glewMakeBufferResidentNV;
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC __glewMakeNamedBufferNonResidentNV;
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC __glewMakeNamedBufferResidentNV;
PFNGLPROGRAMUNIFORMUI64NVPROC __glewProgramUniformui64NV;
PFNGLPROGRAMUNIFORMUI64VNVPROC __glewProgramUniformui64vNV;
PFNGLUNIFORMUI64NVPROC __glewUniformui64NV;
PFNGLUNIFORMUI64VNVPROC __glewUniformui64vNV;
PFNGLTEXTUREBARRIERNVPROC __glewTextureBarrierNV;
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC __glewTexImage2DMultisampleCoverageNV;
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC __glewTexImage3DMultisampleCoverageNV;
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC __glewTextureImage2DMultisampleCoverageNV;
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC __glewTextureImage2DMultisampleNV;
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC __glewTextureImage3DMultisampleCoverageNV;
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC __glewTextureImage3DMultisampleNV;
PFNGLACTIVEVARYINGNVPROC __glewActiveVaryingNV;
PFNGLBEGINTRANSFORMFEEDBACKNVPROC __glewBeginTransformFeedbackNV;
PFNGLBINDBUFFERBASENVPROC __glewBindBufferBaseNV;
PFNGLBINDBUFFEROFFSETNVPROC __glewBindBufferOffsetNV;
PFNGLBINDBUFFERRANGENVPROC __glewBindBufferRangeNV;
PFNGLENDTRANSFORMFEEDBACKNVPROC __glewEndTransformFeedbackNV;
PFNGLGETACTIVEVARYINGNVPROC __glewGetActiveVaryingNV;
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC __glewGetTransformFeedbackVaryingNV;
PFNGLGETVARYINGLOCATIONNVPROC __glewGetVaryingLocationNV;
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC __glewTransformFeedbackAttribsNV;
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC __glewTransformFeedbackVaryingsNV;
PFNGLBINDTRANSFORMFEEDBACKNVPROC __glewBindTransformFeedbackNV;
PFNGLDELETETRANSFORMFEEDBACKSNVPROC __glewDeleteTransformFeedbacksNV;
PFNGLDRAWTRANSFORMFEEDBACKNVPROC __glewDrawTransformFeedbackNV;
PFNGLGENTRANSFORMFEEDBACKSNVPROC __glewGenTransformFeedbacksNV;
PFNGLISTRANSFORMFEEDBACKNVPROC __glewIsTransformFeedbackNV;
PFNGLPAUSETRANSFORMFEEDBACKNVPROC __glewPauseTransformFeedbackNV;
PFNGLRESUMETRANSFORMFEEDBACKNVPROC __glewResumeTransformFeedbackNV;
PFNGLVDPAUFININVPROC __glewVDPAUFiniNV;
PFNGLVDPAUGETSURFACEIVNVPROC __glewVDPAUGetSurfaceivNV;
PFNGLVDPAUINITNVPROC __glewVDPAUInitNV;
PFNGLVDPAUISSURFACENVPROC __glewVDPAUIsSurfaceNV;
PFNGLVDPAUMAPSURFACESNVPROC __glewVDPAUMapSurfacesNV;
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC __glewVDPAURegisterOutputSurfaceNV;
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC __glewVDPAURegisterVideoSurfaceNV;
PFNGLVDPAUSURFACEACCESSNVPROC __glewVDPAUSurfaceAccessNV;
PFNGLVDPAUUNMAPSURFACESNVPROC __glewVDPAUUnmapSurfacesNV;
PFNGLVDPAUUNREGISTERSURFACENVPROC __glewVDPAUUnregisterSurfaceNV;
PFNGLFLUSHVERTEXARRAYRANGENVPROC __glewFlushVertexArrayRangeNV;
PFNGLVERTEXARRAYRANGENVPROC __glewVertexArrayRangeNV;
PFNGLGETVERTEXATTRIBLI64VNVPROC __glewGetVertexAttribLi64vNV;
PFNGLGETVERTEXATTRIBLUI64VNVPROC __glewGetVertexAttribLui64vNV;
PFNGLVERTEXATTRIBL1I64NVPROC __glewVertexAttribL1i64NV;
PFNGLVERTEXATTRIBL1I64VNVPROC __glewVertexAttribL1i64vNV;
PFNGLVERTEXATTRIBL1UI64NVPROC __glewVertexAttribL1ui64NV;
PFNGLVERTEXATTRIBL1UI64VNVPROC __glewVertexAttribL1ui64vNV;
PFNGLVERTEXATTRIBL2I64NVPROC __glewVertexAttribL2i64NV;
PFNGLVERTEXATTRIBL2I64VNVPROC __glewVertexAttribL2i64vNV;
PFNGLVERTEXATTRIBL2UI64NVPROC __glewVertexAttribL2ui64NV;
PFNGLVERTEXATTRIBL2UI64VNVPROC __glewVertexAttribL2ui64vNV;
PFNGLVERTEXATTRIBL3I64NVPROC __glewVertexAttribL3i64NV;
PFNGLVERTEXATTRIBL3I64VNVPROC __glewVertexAttribL3i64vNV;
PFNGLVERTEXATTRIBL3UI64NVPROC __glewVertexAttribL3ui64NV;
PFNGLVERTEXATTRIBL3UI64VNVPROC __glewVertexAttribL3ui64vNV;
PFNGLVERTEXATTRIBL4I64NVPROC __glewVertexAttribL4i64NV;
PFNGLVERTEXATTRIBL4I64VNVPROC __glewVertexAttribL4i64vNV;
PFNGLVERTEXATTRIBL4UI64NVPROC __glewVertexAttribL4ui64NV;
PFNGLVERTEXATTRIBL4UI64VNVPROC __glewVertexAttribL4ui64vNV;
PFNGLVERTEXATTRIBLFORMATNVPROC __glewVertexAttribLFormatNV;
PFNGLBUFFERADDRESSRANGENVPROC __glewBufferAddressRangeNV;
PFNGLCOLORFORMATNVPROC __glewColorFormatNV;
PFNGLEDGEFLAGFORMATNVPROC __glewEdgeFlagFormatNV;
PFNGLFOGCOORDFORMATNVPROC __glewFogCoordFormatNV;
PFNGLGETINTEGERUI64I_VNVPROC __glewGetIntegerui64i_vNV;
PFNGLINDEXFORMATNVPROC __glewIndexFormatNV;
PFNGLNORMALFORMATNVPROC __glewNormalFormatNV;
PFNGLSECONDARYCOLORFORMATNVPROC __glewSecondaryColorFormatNV;
PFNGLTEXCOORDFORMATNVPROC __glewTexCoordFormatNV;
PFNGLVERTEXATTRIBFORMATNVPROC __glewVertexAttribFormatNV;
PFNGLVERTEXATTRIBIFORMATNVPROC __glewVertexAttribIFormatNV;
PFNGLVERTEXFORMATNVPROC __glewVertexFormatNV;
PFNGLAREPROGRAMSRESIDENTNVPROC __glewAreProgramsResidentNV;
PFNGLBINDPROGRAMNVPROC __glewBindProgramNV;
PFNGLDELETEPROGRAMSNVPROC __glewDeleteProgramsNV;
PFNGLEXECUTEPROGRAMNVPROC __glewExecuteProgramNV;
PFNGLGENPROGRAMSNVPROC __glewGenProgramsNV;
PFNGLGETPROGRAMPARAMETERDVNVPROC __glewGetProgramParameterdvNV;
PFNGLGETPROGRAMPARAMETERFVNVPROC __glewGetProgramParameterfvNV;
PFNGLGETPROGRAMSTRINGNVPROC __glewGetProgramStringNV;
PFNGLGETPROGRAMIVNVPROC __glewGetProgramivNV;
PFNGLGETTRACKMATRIXIVNVPROC __glewGetTrackMatrixivNV;
PFNGLGETVERTEXATTRIBPOINTERVNVPROC __glewGetVertexAttribPointervNV;
PFNGLGETVERTEXATTRIBDVNVPROC __glewGetVertexAttribdvNV;
PFNGLGETVERTEXATTRIBFVNVPROC __glewGetVertexAttribfvNV;
PFNGLGETVERTEXATTRIBIVNVPROC __glewGetVertexAttribivNV;
PFNGLISPROGRAMNVPROC __glewIsProgramNV;
PFNGLLOADPROGRAMNVPROC __glewLoadProgramNV;
PFNGLPROGRAMPARAMETER4DNVPROC __glewProgramParameter4dNV;
PFNGLPROGRAMPARAMETER4DVNVPROC __glewProgramParameter4dvNV;
PFNGLPROGRAMPARAMETER4FNVPROC __glewProgramParameter4fNV;
PFNGLPROGRAMPARAMETER4FVNVPROC __glewProgramParameter4fvNV;
PFNGLPROGRAMPARAMETERS4DVNVPROC __glewProgramParameters4dvNV;
PFNGLPROGRAMPARAMETERS4FVNVPROC __glewProgramParameters4fvNV;
PFNGLREQUESTRESIDENTPROGRAMSNVPROC __glewRequestResidentProgramsNV;
PFNGLTRACKMATRIXNVPROC __glewTrackMatrixNV;
PFNGLVERTEXATTRIB1DNVPROC __glewVertexAttrib1dNV;
PFNGLVERTEXATTRIB1DVNVPROC __glewVertexAttrib1dvNV;
PFNGLVERTEXATTRIB1FNVPROC __glewVertexAttrib1fNV;
PFNGLVERTEXATTRIB1FVNVPROC __glewVertexAttrib1fvNV;
PFNGLVERTEXATTRIB1SNVPROC __glewVertexAttrib1sNV;
PFNGLVERTEXATTRIB1SVNVPROC __glewVertexAttrib1svNV;
PFNGLVERTEXATTRIB2DNVPROC __glewVertexAttrib2dNV;
PFNGLVERTEXATTRIB2DVNVPROC __glewVertexAttrib2dvNV;
PFNGLVERTEXATTRIB2FNVPROC __glewVertexAttrib2fNV;
PFNGLVERTEXATTRIB2FVNVPROC __glewVertexAttrib2fvNV;
PFNGLVERTEXATTRIB2SNVPROC __glewVertexAttrib2sNV;
PFNGLVERTEXATTRIB2SVNVPROC __glewVertexAttrib2svNV;
PFNGLVERTEXATTRIB3DNVPROC __glewVertexAttrib3dNV;
PFNGLVERTEXATTRIB3DVNVPROC __glewVertexAttrib3dvNV;
PFNGLVERTEXATTRIB3FNVPROC __glewVertexAttrib3fNV;
PFNGLVERTEXATTRIB3FVNVPROC __glewVertexAttrib3fvNV;
PFNGLVERTEXATTRIB3SNVPROC __glewVertexAttrib3sNV;
PFNGLVERTEXATTRIB3SVNVPROC __glewVertexAttrib3svNV;
PFNGLVERTEXATTRIB4DNVPROC __glewVertexAttrib4dNV;
PFNGLVERTEXATTRIB4DVNVPROC __glewVertexAttrib4dvNV;
PFNGLVERTEXATTRIB4FNVPROC __glewVertexAttrib4fNV;
PFNGLVERTEXATTRIB4FVNVPROC __glewVertexAttrib4fvNV;
PFNGLVERTEXATTRIB4SNVPROC __glewVertexAttrib4sNV;
PFNGLVERTEXATTRIB4SVNVPROC __glewVertexAttrib4svNV;
PFNGLVERTEXATTRIB4UBNVPROC __glewVertexAttrib4ubNV;
PFNGLVERTEXATTRIB4UBVNVPROC __glewVertexAttrib4ubvNV;
PFNGLVERTEXATTRIBPOINTERNVPROC __glewVertexAttribPointerNV;
PFNGLVERTEXATTRIBS1DVNVPROC __glewVertexAttribs1dvNV;
PFNGLVERTEXATTRIBS1FVNVPROC __glewVertexAttribs1fvNV;
PFNGLVERTEXATTRIBS1SVNVPROC __glewVertexAttribs1svNV;
PFNGLVERTEXATTRIBS2DVNVPROC __glewVertexAttribs2dvNV;
PFNGLVERTEXATTRIBS2FVNVPROC __glewVertexAttribs2fvNV;
PFNGLVERTEXATTRIBS2SVNVPROC __glewVertexAttribs2svNV;
PFNGLVERTEXATTRIBS3DVNVPROC __glewVertexAttribs3dvNV;
PFNGLVERTEXATTRIBS3FVNVPROC __glewVertexAttribs3fvNV;
PFNGLVERTEXATTRIBS3SVNVPROC __glewVertexAttribs3svNV;
PFNGLVERTEXATTRIBS4DVNVPROC __glewVertexAttribs4dvNV;
PFNGLVERTEXATTRIBS4FVNVPROC __glewVertexAttribs4fvNV;
PFNGLVERTEXATTRIBS4SVNVPROC __glewVertexAttribs4svNV;
PFNGLVERTEXATTRIBS4UBVNVPROC __glewVertexAttribs4ubvNV;
PFNGLBEGINVIDEOCAPTURENVPROC __glewBeginVideoCaptureNV;
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC __glewBindVideoCaptureStreamBufferNV;
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC __glewBindVideoCaptureStreamTextureNV;
PFNGLENDVIDEOCAPTURENVPROC __glewEndVideoCaptureNV;
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC __glewGetVideoCaptureStreamdvNV;
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC __glewGetVideoCaptureStreamfvNV;
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC __glewGetVideoCaptureStreamivNV;
PFNGLGETVIDEOCAPTUREIVNVPROC __glewGetVideoCaptureivNV;
PFNGLVIDEOCAPTURENVPROC __glewVideoCaptureNV;
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC __glewVideoCaptureStreamParameterdvNV;
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC __glewVideoCaptureStreamParameterfvNV;
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC __glewVideoCaptureStreamParameterivNV;
PFNGLCLEARDEPTHFOESPROC __glewClearDepthfOES;
PFNGLCLIPPLANEFOESPROC __glewClipPlanefOES;
PFNGLDEPTHRANGEFOESPROC __glewDepthRangefOES;
PFNGLFRUSTUMFOESPROC __glewFrustumfOES;
PFNGLGETCLIPPLANEFOESPROC __glewGetClipPlanefOES;
PFNGLORTHOFOESPROC __glewOrthofOES;
PFNGLERRORSTRINGREGALPROC __glewErrorStringREGAL;
PFNGLGETEXTENSIONREGALPROC __glewGetExtensionREGAL;
PFNGLISSUPPORTEDREGALPROC __glewIsSupportedREGAL;
PFNGLDETAILTEXFUNCSGISPROC __glewDetailTexFuncSGIS;
PFNGLGETDETAILTEXFUNCSGISPROC __glewGetDetailTexFuncSGIS;
PFNGLFOGFUNCSGISPROC __glewFogFuncSGIS;
PFNGLGETFOGFUNCSGISPROC __glewGetFogFuncSGIS;
PFNGLSAMPLEMASKSGISPROC __glewSampleMaskSGIS;
PFNGLSAMPLEPATTERNSGISPROC __glewSamplePatternSGIS;
PFNGLGETSHARPENTEXFUNCSGISPROC __glewGetSharpenTexFuncSGIS;
PFNGLSHARPENTEXFUNCSGISPROC __glewSharpenTexFuncSGIS;
PFNGLTEXIMAGE4DSGISPROC __glewTexImage4DSGIS;
PFNGLTEXSUBIMAGE4DSGISPROC __glewTexSubImage4DSGIS;
PFNGLGETTEXFILTERFUNCSGISPROC __glewGetTexFilterFuncSGIS;
PFNGLTEXFILTERFUNCSGISPROC __glewTexFilterFuncSGIS;
PFNGLASYNCMARKERSGIXPROC __glewAsyncMarkerSGIX;
PFNGLDELETEASYNCMARKERSSGIXPROC __glewDeleteAsyncMarkersSGIX;
PFNGLFINISHASYNCSGIXPROC __glewFinishAsyncSGIX;
PFNGLGENASYNCMARKERSSGIXPROC __glewGenAsyncMarkersSGIX;
PFNGLISASYNCMARKERSGIXPROC __glewIsAsyncMarkerSGIX;
PFNGLPOLLASYNCSGIXPROC __glewPollAsyncSGIX;
PFNGLFLUSHRASTERSGIXPROC __glewFlushRasterSGIX;
PFNGLTEXTUREFOGSGIXPROC __glewTextureFogSGIX;
PFNGLFRAGMENTCOLORMATERIALSGIXPROC __glewFragmentColorMaterialSGIX;
PFNGLFRAGMENTLIGHTMODELFSGIXPROC __glewFragmentLightModelfSGIX;
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC __glewFragmentLightModelfvSGIX;
PFNGLFRAGMENTLIGHTMODELISGIXPROC __glewFragmentLightModeliSGIX;
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC __glewFragmentLightModelivSGIX;
PFNGLFRAGMENTLIGHTFSGIXPROC __glewFragmentLightfSGIX;
PFNGLFRAGMENTLIGHTFVSGIXPROC __glewFragmentLightfvSGIX;
PFNGLFRAGMENTLIGHTISGIXPROC __glewFragmentLightiSGIX;
PFNGLFRAGMENTLIGHTIVSGIXPROC __glewFragmentLightivSGIX;
PFNGLFRAGMENTMATERIALFSGIXPROC __glewFragmentMaterialfSGIX;
PFNGLFRAGMENTMATERIALFVSGIXPROC __glewFragmentMaterialfvSGIX;
PFNGLFRAGMENTMATERIALISGIXPROC __glewFragmentMaterialiSGIX;
PFNGLFRAGMENTMATERIALIVSGIXPROC __glewFragmentMaterialivSGIX;
PFNGLGETFRAGMENTLIGHTFVSGIXPROC __glewGetFragmentLightfvSGIX;
PFNGLGETFRAGMENTLIGHTIVSGIXPROC __glewGetFragmentLightivSGIX;
PFNGLGETFRAGMENTMATERIALFVSGIXPROC __glewGetFragmentMaterialfvSGIX;
PFNGLGETFRAGMENTMATERIALIVSGIXPROC __glewGetFragmentMaterialivSGIX;
PFNGLFRAMEZOOMSGIXPROC __glewFrameZoomSGIX;
PFNGLPIXELTEXGENSGIXPROC __glewPixelTexGenSGIX;
PFNGLREFERENCEPLANESGIXPROC __glewReferencePlaneSGIX;
PFNGLSPRITEPARAMETERFSGIXPROC __glewSpriteParameterfSGIX;
PFNGLSPRITEPARAMETERFVSGIXPROC __glewSpriteParameterfvSGIX;
PFNGLSPRITEPARAMETERISGIXPROC __glewSpriteParameteriSGIX;
PFNGLSPRITEPARAMETERIVSGIXPROC __glewSpriteParameterivSGIX;
PFNGLTAGSAMPLEBUFFERSGIXPROC __glewTagSampleBufferSGIX;
PFNGLCOLORTABLEPARAMETERFVSGIPROC __glewColorTableParameterfvSGI;
PFNGLCOLORTABLEPARAMETERIVSGIPROC __glewColorTableParameterivSGI;
PFNGLCOLORTABLESGIPROC __glewColorTableSGI;
PFNGLCOPYCOLORTABLESGIPROC __glewCopyColorTableSGI;
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC __glewGetColorTableParameterfvSGI;
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC __glewGetColorTableParameterivSGI;
PFNGLGETCOLORTABLESGIPROC __glewGetColorTableSGI;
PFNGLFINISHTEXTURESUNXPROC __glewFinishTextureSUNX;
PFNGLGLOBALALPHAFACTORBSUNPROC __glewGlobalAlphaFactorbSUN;
PFNGLGLOBALALPHAFACTORDSUNPROC __glewGlobalAlphaFactordSUN;
PFNGLGLOBALALPHAFACTORFSUNPROC __glewGlobalAlphaFactorfSUN;
PFNGLGLOBALALPHAFACTORISUNPROC __glewGlobalAlphaFactoriSUN;
PFNGLGLOBALALPHAFACTORSSUNPROC __glewGlobalAlphaFactorsSUN;
PFNGLGLOBALALPHAFACTORUBSUNPROC __glewGlobalAlphaFactorubSUN;
PFNGLGLOBALALPHAFACTORUISUNPROC __glewGlobalAlphaFactoruiSUN;
PFNGLGLOBALALPHAFACTORUSSUNPROC __glewGlobalAlphaFactorusSUN;
PFNGLREADVIDEOPIXELSSUNPROC __glewReadVideoPixelsSUN;
PFNGLREPLACEMENTCODEPOINTERSUNPROC __glewReplacementCodePointerSUN;
PFNGLREPLACEMENTCODEUBSUNPROC __glewReplacementCodeubSUN;
PFNGLREPLACEMENTCODEUBVSUNPROC __glewReplacementCodeubvSUN;
PFNGLREPLACEMENTCODEUISUNPROC __glewReplacementCodeuiSUN;
PFNGLREPLACEMENTCODEUIVSUNPROC __glewReplacementCodeuivSUN;
PFNGLREPLACEMENTCODEUSSUNPROC __glewReplacementCodeusSUN;
PFNGLREPLACEMENTCODEUSVSUNPROC __glewReplacementCodeusvSUN;
PFNGLCOLOR3FVERTEX3FSUNPROC __glewColor3fVertex3fSUN;
PFNGLCOLOR3FVERTEX3FVSUNPROC __glewColor3fVertex3fvSUN;
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewColor4fNormal3fVertex3fSUN;
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewColor4fNormal3fVertex3fvSUN;
PFNGLCOLOR4UBVERTEX2FSUNPROC __glewColor4ubVertex2fSUN;
PFNGLCOLOR4UBVERTEX2FVSUNPROC __glewColor4ubVertex2fvSUN;
PFNGLCOLOR4UBVERTEX3FSUNPROC __glewColor4ubVertex3fSUN;
PFNGLCOLOR4UBVERTEX3FVSUNPROC __glewColor4ubVertex3fvSUN;
PFNGLNORMAL3FVERTEX3FSUNPROC __glewNormal3fVertex3fSUN;
PFNGLNORMAL3FVERTEX3FVSUNPROC __glewNormal3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC __glewReplacementCodeuiColor3fVertex3fSUN;
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC __glewReplacementCodeuiColor3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiColor4fNormal3fVertex3fSUN;
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiColor4fNormal3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC __glewReplacementCodeuiColor4ubVertex3fSUN;
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC __glewReplacementCodeuiColor4ubVertex3fvSUN;
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiNormal3fVertex3fSUN;
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiNormal3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC __glewReplacementCodeuiTexCoord2fVertex3fSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC __glewReplacementCodeuiTexCoord2fVertex3fvSUN;
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC __glewReplacementCodeuiVertex3fSUN;
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC __glewReplacementCodeuiVertex3fvSUN;
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC __glewTexCoord2fColor3fVertex3fSUN;
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC __glewTexCoord2fColor3fVertex3fvSUN;
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewTexCoord2fColor4fNormal3fVertex3fSUN;
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewTexCoord2fColor4fNormal3fVertex3fvSUN;
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC __glewTexCoord2fColor4ubVertex3fSUN;
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC __glewTexCoord2fColor4ubVertex3fvSUN;
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC __glewTexCoord2fNormal3fVertex3fSUN;
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC __glewTexCoord2fNormal3fVertex3fvSUN;
PFNGLTEXCOORD2FVERTEX3FSUNPROC __glewTexCoord2fVertex3fSUN;
PFNGLTEXCOORD2FVERTEX3FVSUNPROC __glewTexCoord2fVertex3fvSUN;
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC __glewTexCoord4fColor4fNormal3fVertex4fSUN;
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC __glewTexCoord4fColor4fNormal3fVertex4fvSUN;
PFNGLTEXCOORD4FVERTEX4FSUNPROC __glewTexCoord4fVertex4fSUN;
PFNGLTEXCOORD4FVERTEX4FVSUNPROC __glewTexCoord4fVertex4fvSUN;
PFNGLADDSWAPHINTRECTWINPROC __glewAddSwapHintRectWIN;

GLboolean __GLEW_VERSION_1_1;
GLboolean __GLEW_VERSION_1_2;
GLboolean __GLEW_VERSION_1_2_1;
GLboolean __GLEW_VERSION_1_3;
GLboolean __GLEW_VERSION_1_4;
GLboolean __GLEW_VERSION_1_5;
GLboolean __GLEW_VERSION_2_0;
GLboolean __GLEW_VERSION_2_1;
GLboolean __GLEW_VERSION_3_0;
GLboolean __GLEW_VERSION_3_1;
GLboolean __GLEW_VERSION_3_2;
GLboolean __GLEW_VERSION_3_3;
GLboolean __GLEW_VERSION_4_0;
GLboolean __GLEW_VERSION_4_1;
GLboolean __GLEW_VERSION_4_2;
GLboolean __GLEW_VERSION_4_3;
GLboolean __GLEW_3DFX_multisample;
GLboolean __GLEW_3DFX_tbuffer;
GLboolean __GLEW_3DFX_texture_compression_FXT1;
GLboolean __GLEW_AMD_blend_minmax_factor;
GLboolean __GLEW_AMD_conservative_depth;
GLboolean __GLEW_AMD_debug_output;
GLboolean __GLEW_AMD_depth_clamp_separate;
GLboolean __GLEW_AMD_draw_buffers_blend;
GLboolean __GLEW_AMD_multi_draw_indirect;
GLboolean __GLEW_AMD_name_gen_delete;
GLboolean __GLEW_AMD_performance_monitor;
GLboolean __GLEW_AMD_pinned_memory;
GLboolean __GLEW_AMD_query_buffer_object;
GLboolean __GLEW_AMD_sample_positions;
GLboolean __GLEW_AMD_seamless_cubemap_per_texture;
GLboolean __GLEW_AMD_shader_stencil_export;
GLboolean __GLEW_AMD_stencil_operation_extended;
GLboolean __GLEW_AMD_texture_texture4;
GLboolean __GLEW_AMD_transform_feedback3_lines_triangles;
GLboolean __GLEW_AMD_vertex_shader_layer;
GLboolean __GLEW_AMD_vertex_shader_tessellator;
GLboolean __GLEW_AMD_vertex_shader_viewport_index;
GLboolean __GLEW_APPLE_aux_depth_stencil;
GLboolean __GLEW_APPLE_client_storage;
GLboolean __GLEW_APPLE_element_array;
GLboolean __GLEW_APPLE_fence;
GLboolean __GLEW_APPLE_float_pixels;
GLboolean __GLEW_APPLE_flush_buffer_range;
GLboolean __GLEW_APPLE_object_purgeable;
GLboolean __GLEW_APPLE_pixel_buffer;
GLboolean __GLEW_APPLE_rgb_422;
GLboolean __GLEW_APPLE_row_bytes;
GLboolean __GLEW_APPLE_specular_vector;
GLboolean __GLEW_APPLE_texture_range;
GLboolean __GLEW_APPLE_transform_hint;
GLboolean __GLEW_APPLE_vertex_array_object;
GLboolean __GLEW_APPLE_vertex_array_range;
GLboolean __GLEW_APPLE_vertex_program_evaluators;
GLboolean __GLEW_APPLE_ycbcr_422;
GLboolean __GLEW_ARB_ES2_compatibility;
GLboolean __GLEW_ARB_ES3_compatibility;
GLboolean __GLEW_ARB_arrays_of_arrays;
GLboolean __GLEW_ARB_base_instance;
GLboolean __GLEW_ARB_blend_func_extended;
GLboolean __GLEW_ARB_cl_event;
GLboolean __GLEW_ARB_clear_buffer_object;
GLboolean __GLEW_ARB_color_buffer_float;
GLboolean __GLEW_ARB_compatibility;
GLboolean __GLEW_ARB_compressed_texture_pixel_storage;
GLboolean __GLEW_ARB_compute_shader;
GLboolean __GLEW_ARB_conservative_depth;
GLboolean __GLEW_ARB_copy_buffer;
GLboolean __GLEW_ARB_copy_image;
GLboolean __GLEW_ARB_debug_output;
GLboolean __GLEW_ARB_depth_buffer_float;
GLboolean __GLEW_ARB_depth_clamp;
GLboolean __GLEW_ARB_depth_texture;
GLboolean __GLEW_ARB_draw_buffers;
GLboolean __GLEW_ARB_draw_buffers_blend;
GLboolean __GLEW_ARB_draw_elements_base_vertex;
GLboolean __GLEW_ARB_draw_indirect;
GLboolean __GLEW_ARB_draw_instanced;
GLboolean __GLEW_ARB_explicit_attrib_location;
GLboolean __GLEW_ARB_explicit_uniform_location;
GLboolean __GLEW_ARB_fragment_coord_conventions;
GLboolean __GLEW_ARB_fragment_layer_viewport;
GLboolean __GLEW_ARB_fragment_program;
GLboolean __GLEW_ARB_fragment_program_shadow;
GLboolean __GLEW_ARB_fragment_shader;
GLboolean __GLEW_ARB_framebuffer_no_attachments;
GLboolean __GLEW_ARB_framebuffer_object;
GLboolean __GLEW_ARB_framebuffer_sRGB;
GLboolean __GLEW_ARB_geometry_shader4;
GLboolean __GLEW_ARB_get_program_binary;
GLboolean __GLEW_ARB_gpu_shader5;
GLboolean __GLEW_ARB_gpu_shader_fp64;
GLboolean __GLEW_ARB_half_float_pixel;
GLboolean __GLEW_ARB_half_float_vertex;
GLboolean __GLEW_ARB_imaging;
GLboolean __GLEW_ARB_instanced_arrays;
GLboolean __GLEW_ARB_internalformat_query;
GLboolean __GLEW_ARB_internalformat_query2;
GLboolean __GLEW_ARB_invalidate_subdata;
GLboolean __GLEW_ARB_map_buffer_alignment;
GLboolean __GLEW_ARB_map_buffer_range;
GLboolean __GLEW_ARB_matrix_palette;
GLboolean __GLEW_ARB_multi_draw_indirect;
GLboolean __GLEW_ARB_multisample;
GLboolean __GLEW_ARB_multitexture;
GLboolean __GLEW_ARB_occlusion_query;
GLboolean __GLEW_ARB_occlusion_query2;
GLboolean __GLEW_ARB_pixel_buffer_object;
GLboolean __GLEW_ARB_point_parameters;
GLboolean __GLEW_ARB_point_sprite;
GLboolean __GLEW_ARB_program_interface_query;
GLboolean __GLEW_ARB_provoking_vertex;
GLboolean __GLEW_ARB_robust_buffer_access_behavior;
GLboolean __GLEW_ARB_robustness;
GLboolean __GLEW_ARB_robustness_application_isolation;
GLboolean __GLEW_ARB_robustness_share_group_isolation;
GLboolean __GLEW_ARB_sample_shading;
GLboolean __GLEW_ARB_sampler_objects;
GLboolean __GLEW_ARB_seamless_cube_map;
GLboolean __GLEW_ARB_separate_shader_objects;
GLboolean __GLEW_ARB_shader_atomic_counters;
GLboolean __GLEW_ARB_shader_bit_encoding;
GLboolean __GLEW_ARB_shader_image_load_store;
GLboolean __GLEW_ARB_shader_image_size;
GLboolean __GLEW_ARB_shader_objects;
GLboolean __GLEW_ARB_shader_precision;
GLboolean __GLEW_ARB_shader_stencil_export;
GLboolean __GLEW_ARB_shader_storage_buffer_object;
GLboolean __GLEW_ARB_shader_subroutine;
GLboolean __GLEW_ARB_shader_texture_lod;
GLboolean __GLEW_ARB_shading_language_100;
GLboolean __GLEW_ARB_shading_language_420pack;
GLboolean __GLEW_ARB_shading_language_include;
GLboolean __GLEW_ARB_shading_language_packing;
GLboolean __GLEW_ARB_shadow;
GLboolean __GLEW_ARB_shadow_ambient;
GLboolean __GLEW_ARB_stencil_texturing;
GLboolean __GLEW_ARB_sync;
GLboolean __GLEW_ARB_tessellation_shader;
GLboolean __GLEW_ARB_texture_border_clamp;
GLboolean __GLEW_ARB_texture_buffer_object;
GLboolean __GLEW_ARB_texture_buffer_object_rgb32;
GLboolean __GLEW_ARB_texture_buffer_range;
GLboolean __GLEW_ARB_texture_compression;
GLboolean __GLEW_ARB_texture_compression_bptc;
GLboolean __GLEW_ARB_texture_compression_rgtc;
GLboolean __GLEW_ARB_texture_cube_map;
GLboolean __GLEW_ARB_texture_cube_map_array;
GLboolean __GLEW_ARB_texture_env_add;
GLboolean __GLEW_ARB_texture_env_combine;
GLboolean __GLEW_ARB_texture_env_crossbar;
GLboolean __GLEW_ARB_texture_env_dot3;
GLboolean __GLEW_ARB_texture_float;
GLboolean __GLEW_ARB_texture_gather;
GLboolean __GLEW_ARB_texture_mirrored_repeat;
GLboolean __GLEW_ARB_texture_multisample;
GLboolean __GLEW_ARB_texture_non_power_of_two;
GLboolean __GLEW_ARB_texture_query_levels;
GLboolean __GLEW_ARB_texture_query_lod;
GLboolean __GLEW_ARB_texture_rectangle;
GLboolean __GLEW_ARB_texture_rg;
GLboolean __GLEW_ARB_texture_rgb10_a2ui;
GLboolean __GLEW_ARB_texture_storage;
GLboolean __GLEW_ARB_texture_storage_multisample;
GLboolean __GLEW_ARB_texture_swizzle;
GLboolean __GLEW_ARB_texture_view;
GLboolean __GLEW_ARB_timer_query;
GLboolean __GLEW_ARB_transform_feedback2;
GLboolean __GLEW_ARB_transform_feedback3;
GLboolean __GLEW_ARB_transform_feedback_instanced;
GLboolean __GLEW_ARB_transpose_matrix;
GLboolean __GLEW_ARB_uniform_buffer_object;
GLboolean __GLEW_ARB_vertex_array_bgra;
GLboolean __GLEW_ARB_vertex_array_object;
GLboolean __GLEW_ARB_vertex_attrib_64bit;
GLboolean __GLEW_ARB_vertex_attrib_binding;
GLboolean __GLEW_ARB_vertex_blend;
GLboolean __GLEW_ARB_vertex_buffer_object;
GLboolean __GLEW_ARB_vertex_program;
GLboolean __GLEW_ARB_vertex_shader;
GLboolean __GLEW_ARB_vertex_type_2_10_10_10_rev;
GLboolean __GLEW_ARB_viewport_array;
GLboolean __GLEW_ARB_window_pos;
GLboolean __GLEW_ATIX_point_sprites;
GLboolean __GLEW_ATIX_texture_env_combine3;
GLboolean __GLEW_ATIX_texture_env_route;
GLboolean __GLEW_ATIX_vertex_shader_output_point_size;
GLboolean __GLEW_ATI_draw_buffers;
GLboolean __GLEW_ATI_element_array;
GLboolean __GLEW_ATI_envmap_bumpmap;
GLboolean __GLEW_ATI_fragment_shader;
GLboolean __GLEW_ATI_map_object_buffer;
GLboolean __GLEW_ATI_meminfo;
GLboolean __GLEW_ATI_pn_triangles;
GLboolean __GLEW_ATI_separate_stencil;
GLboolean __GLEW_ATI_shader_texture_lod;
GLboolean __GLEW_ATI_text_fragment_shader;
GLboolean __GLEW_ATI_texture_compression_3dc;
GLboolean __GLEW_ATI_texture_env_combine3;
GLboolean __GLEW_ATI_texture_float;
GLboolean __GLEW_ATI_texture_mirror_once;
GLboolean __GLEW_ATI_vertex_array_object;
GLboolean __GLEW_ATI_vertex_attrib_array_object;
GLboolean __GLEW_ATI_vertex_streams;
GLboolean __GLEW_EXT_422_pixels;
GLboolean __GLEW_EXT_Cg_shader;
GLboolean __GLEW_EXT_abgr;
GLboolean __GLEW_EXT_bgra;
GLboolean __GLEW_EXT_bindable_uniform;
GLboolean __GLEW_EXT_blend_color;
GLboolean __GLEW_EXT_blend_equation_separate;
GLboolean __GLEW_EXT_blend_func_separate;
GLboolean __GLEW_EXT_blend_logic_op;
GLboolean __GLEW_EXT_blend_minmax;
GLboolean __GLEW_EXT_blend_subtract;
GLboolean __GLEW_EXT_clip_volume_hint;
GLboolean __GLEW_EXT_cmyka;
GLboolean __GLEW_EXT_color_subtable;
GLboolean __GLEW_EXT_compiled_vertex_array;
GLboolean __GLEW_EXT_convolution;
GLboolean __GLEW_EXT_coordinate_frame;
GLboolean __GLEW_EXT_copy_texture;
GLboolean __GLEW_EXT_cull_vertex;
GLboolean __GLEW_EXT_debug_marker;
GLboolean __GLEW_EXT_depth_bounds_test;
GLboolean __GLEW_EXT_direct_state_access;
GLboolean __GLEW_EXT_draw_buffers2;
GLboolean __GLEW_EXT_draw_instanced;
GLboolean __GLEW_EXT_draw_range_elements;
GLboolean __GLEW_EXT_fog_coord;
GLboolean __GLEW_EXT_fragment_lighting;
GLboolean __GLEW_EXT_framebuffer_blit;
GLboolean __GLEW_EXT_framebuffer_multisample;
GLboolean __GLEW_EXT_framebuffer_multisample_blit_scaled;
GLboolean __GLEW_EXT_framebuffer_object;
GLboolean __GLEW_EXT_framebuffer_sRGB;
GLboolean __GLEW_EXT_geometry_shader4;
GLboolean __GLEW_EXT_gpu_program_parameters;
GLboolean __GLEW_EXT_gpu_shader4;
GLboolean __GLEW_EXT_histogram;
GLboolean __GLEW_EXT_index_array_formats;
GLboolean __GLEW_EXT_index_func;
GLboolean __GLEW_EXT_index_material;
GLboolean __GLEW_EXT_index_texture;
GLboolean __GLEW_EXT_light_texture;
GLboolean __GLEW_EXT_misc_attribute;
GLboolean __GLEW_EXT_multi_draw_arrays;
GLboolean __GLEW_EXT_multisample;
GLboolean __GLEW_EXT_packed_depth_stencil;
GLboolean __GLEW_EXT_packed_float;
GLboolean __GLEW_EXT_packed_pixels;
GLboolean __GLEW_EXT_paletted_texture;
GLboolean __GLEW_EXT_pixel_buffer_object;
GLboolean __GLEW_EXT_pixel_transform;
GLboolean __GLEW_EXT_pixel_transform_color_table;
GLboolean __GLEW_EXT_point_parameters;
GLboolean __GLEW_EXT_polygon_offset;
GLboolean __GLEW_EXT_provoking_vertex;
GLboolean __GLEW_EXT_rescale_normal;
GLboolean __GLEW_EXT_scene_marker;
GLboolean __GLEW_EXT_secondary_color;
GLboolean __GLEW_EXT_separate_shader_objects;
GLboolean __GLEW_EXT_separate_specular_color;
GLboolean __GLEW_EXT_shader_image_load_store;
GLboolean __GLEW_EXT_shadow_funcs;
GLboolean __GLEW_EXT_shared_texture_palette;
GLboolean __GLEW_EXT_stencil_clear_tag;
GLboolean __GLEW_EXT_stencil_two_side;
GLboolean __GLEW_EXT_stencil_wrap;
GLboolean __GLEW_EXT_subtexture;
GLboolean __GLEW_EXT_texture;
GLboolean __GLEW_EXT_texture3D;
GLboolean __GLEW_EXT_texture_array;
GLboolean __GLEW_EXT_texture_buffer_object;
GLboolean __GLEW_EXT_texture_compression_dxt1;
GLboolean __GLEW_EXT_texture_compression_latc;
GLboolean __GLEW_EXT_texture_compression_rgtc;
GLboolean __GLEW_EXT_texture_compression_s3tc;
GLboolean __GLEW_EXT_texture_cube_map;
GLboolean __GLEW_EXT_texture_edge_clamp;
GLboolean __GLEW_EXT_texture_env;
GLboolean __GLEW_EXT_texture_env_add;
GLboolean __GLEW_EXT_texture_env_combine;
GLboolean __GLEW_EXT_texture_env_dot3;
GLboolean __GLEW_EXT_texture_filter_anisotropic;
GLboolean __GLEW_EXT_texture_integer;
GLboolean __GLEW_EXT_texture_lod_bias;
GLboolean __GLEW_EXT_texture_mirror_clamp;
GLboolean __GLEW_EXT_texture_object;
GLboolean __GLEW_EXT_texture_perturb_normal;
GLboolean __GLEW_EXT_texture_rectangle;
GLboolean __GLEW_EXT_texture_sRGB;
GLboolean __GLEW_EXT_texture_sRGB_decode;
GLboolean __GLEW_EXT_texture_shared_exponent;
GLboolean __GLEW_EXT_texture_snorm;
GLboolean __GLEW_EXT_texture_swizzle;
GLboolean __GLEW_EXT_timer_query;
GLboolean __GLEW_EXT_transform_feedback;
GLboolean __GLEW_EXT_vertex_array;
GLboolean __GLEW_EXT_vertex_array_bgra;
GLboolean __GLEW_EXT_vertex_attrib_64bit;
GLboolean __GLEW_EXT_vertex_shader;
GLboolean __GLEW_EXT_vertex_weighting;
GLboolean __GLEW_EXT_x11_sync_object;
GLboolean __GLEW_GREMEDY_frame_terminator;
GLboolean __GLEW_GREMEDY_string_marker;
GLboolean __GLEW_HP_convolution_border_modes;
GLboolean __GLEW_HP_image_transform;
GLboolean __GLEW_HP_occlusion_test;
GLboolean __GLEW_HP_texture_lighting;
GLboolean __GLEW_IBM_cull_vertex;
GLboolean __GLEW_IBM_multimode_draw_arrays;
GLboolean __GLEW_IBM_rasterpos_clip;
GLboolean __GLEW_IBM_static_data;
GLboolean __GLEW_IBM_texture_mirrored_repeat;
GLboolean __GLEW_IBM_vertex_array_lists;
GLboolean __GLEW_INGR_color_clamp;
GLboolean __GLEW_INGR_interlace_read;
GLboolean __GLEW_INTEL_parallel_arrays;
GLboolean __GLEW_INTEL_texture_scissor;
GLboolean __GLEW_KHR_debug;
GLboolean __GLEW_KHR_texture_compression_astc_ldr;
GLboolean __GLEW_KTX_buffer_region;
GLboolean __GLEW_MESAX_texture_stack;
GLboolean __GLEW_MESA_pack_invert;
GLboolean __GLEW_MESA_resize_buffers;
GLboolean __GLEW_MESA_window_pos;
GLboolean __GLEW_MESA_ycbcr_texture;
GLboolean __GLEW_NVX_gpu_memory_info;
GLboolean __GLEW_NV_bindless_texture;
GLboolean __GLEW_NV_blend_square;
GLboolean __GLEW_NV_conditional_render;
GLboolean __GLEW_NV_copy_depth_to_color;
GLboolean __GLEW_NV_copy_image;
GLboolean __GLEW_NV_depth_buffer_float;
GLboolean __GLEW_NV_depth_clamp;
GLboolean __GLEW_NV_depth_range_unclamped;
GLboolean __GLEW_NV_evaluators;
GLboolean __GLEW_NV_explicit_multisample;
GLboolean __GLEW_NV_fence;
GLboolean __GLEW_NV_float_buffer;
GLboolean __GLEW_NV_fog_distance;
GLboolean __GLEW_NV_fragment_program;
GLboolean __GLEW_NV_fragment_program2;
GLboolean __GLEW_NV_fragment_program4;
GLboolean __GLEW_NV_fragment_program_option;
GLboolean __GLEW_NV_framebuffer_multisample_coverage;
GLboolean __GLEW_NV_geometry_program4;
GLboolean __GLEW_NV_geometry_shader4;
GLboolean __GLEW_NV_gpu_program4;
GLboolean __GLEW_NV_gpu_program5;
GLboolean __GLEW_NV_gpu_program_fp64;
GLboolean __GLEW_NV_gpu_shader5;
GLboolean __GLEW_NV_half_float;
GLboolean __GLEW_NV_light_max_exponent;
GLboolean __GLEW_NV_multisample_coverage;
GLboolean __GLEW_NV_multisample_filter_hint;
GLboolean __GLEW_NV_occlusion_query;
GLboolean __GLEW_NV_packed_depth_stencil;
GLboolean __GLEW_NV_parameter_buffer_object;
GLboolean __GLEW_NV_parameter_buffer_object2;
GLboolean __GLEW_NV_path_rendering;
GLboolean __GLEW_NV_pixel_data_range;
GLboolean __GLEW_NV_point_sprite;
GLboolean __GLEW_NV_present_video;
GLboolean __GLEW_NV_primitive_restart;
GLboolean __GLEW_NV_register_combiners;
GLboolean __GLEW_NV_register_combiners2;
GLboolean __GLEW_NV_shader_atomic_float;
GLboolean __GLEW_NV_shader_buffer_load;
GLboolean __GLEW_NV_tessellation_program5;
GLboolean __GLEW_NV_texgen_emboss;
GLboolean __GLEW_NV_texgen_reflection;
GLboolean __GLEW_NV_texture_barrier;
GLboolean __GLEW_NV_texture_compression_vtc;
GLboolean __GLEW_NV_texture_env_combine4;
GLboolean __GLEW_NV_texture_expand_normal;
GLboolean __GLEW_NV_texture_multisample;
GLboolean __GLEW_NV_texture_rectangle;
GLboolean __GLEW_NV_texture_shader;
GLboolean __GLEW_NV_texture_shader2;
GLboolean __GLEW_NV_texture_shader3;
GLboolean __GLEW_NV_transform_feedback;
GLboolean __GLEW_NV_transform_feedback2;
GLboolean __GLEW_NV_vdpau_interop;
GLboolean __GLEW_NV_vertex_array_range;
GLboolean __GLEW_NV_vertex_array_range2;
GLboolean __GLEW_NV_vertex_attrib_integer_64bit;
GLboolean __GLEW_NV_vertex_buffer_unified_memory;
GLboolean __GLEW_NV_vertex_program;
GLboolean __GLEW_NV_vertex_program1_1;
GLboolean __GLEW_NV_vertex_program2;
GLboolean __GLEW_NV_vertex_program2_option;
GLboolean __GLEW_NV_vertex_program3;
GLboolean __GLEW_NV_vertex_program4;
GLboolean __GLEW_NV_video_capture;
GLboolean __GLEW_OES_byte_coordinates;
GLboolean __GLEW_OES_compressed_paletted_texture;
GLboolean __GLEW_OES_read_format;
GLboolean __GLEW_OES_single_precision;
GLboolean __GLEW_OML_interlace;
GLboolean __GLEW_OML_resample;
GLboolean __GLEW_OML_subsample;
GLboolean __GLEW_PGI_misc_hints;
GLboolean __GLEW_PGI_vertex_hints;
GLboolean __GLEW_REGAL_error_string;
GLboolean __GLEW_REGAL_extension_query;
GLboolean __GLEW_REGAL_log;
GLboolean __GLEW_REND_screen_coordinates;
GLboolean __GLEW_S3_s3tc;
GLboolean __GLEW_SGIS_color_range;
GLboolean __GLEW_SGIS_detail_texture;
GLboolean __GLEW_SGIS_fog_function;
GLboolean __GLEW_SGIS_generate_mipmap;
GLboolean __GLEW_SGIS_multisample;
GLboolean __GLEW_SGIS_pixel_texture;
GLboolean __GLEW_SGIS_point_line_texgen;
GLboolean __GLEW_SGIS_sharpen_texture;
GLboolean __GLEW_SGIS_texture4D;
GLboolean __GLEW_SGIS_texture_border_clamp;
GLboolean __GLEW_SGIS_texture_edge_clamp;
GLboolean __GLEW_SGIS_texture_filter4;
GLboolean __GLEW_SGIS_texture_lod;
GLboolean __GLEW_SGIS_texture_select;
GLboolean __GLEW_SGIX_async;
GLboolean __GLEW_SGIX_async_histogram;
GLboolean __GLEW_SGIX_async_pixel;
GLboolean __GLEW_SGIX_blend_alpha_minmax;
GLboolean __GLEW_SGIX_clipmap;
GLboolean __GLEW_SGIX_convolution_accuracy;
GLboolean __GLEW_SGIX_depth_texture;
GLboolean __GLEW_SGIX_flush_raster;
GLboolean __GLEW_SGIX_fog_offset;
GLboolean __GLEW_SGIX_fog_texture;
GLboolean __GLEW_SGIX_fragment_specular_lighting;
GLboolean __GLEW_SGIX_framezoom;
GLboolean __GLEW_SGIX_interlace;
GLboolean __GLEW_SGIX_ir_instrument1;
GLboolean __GLEW_SGIX_list_priority;
GLboolean __GLEW_SGIX_pixel_texture;
GLboolean __GLEW_SGIX_pixel_texture_bits;
GLboolean __GLEW_SGIX_reference_plane;
GLboolean __GLEW_SGIX_resample;
GLboolean __GLEW_SGIX_shadow;
GLboolean __GLEW_SGIX_shadow_ambient;
GLboolean __GLEW_SGIX_sprite;
GLboolean __GLEW_SGIX_tag_sample_buffer;
GLboolean __GLEW_SGIX_texture_add_env;
GLboolean __GLEW_SGIX_texture_coordinate_clamp;
GLboolean __GLEW_SGIX_texture_lod_bias;
GLboolean __GLEW_SGIX_texture_multi_buffer;
GLboolean __GLEW_SGIX_texture_range;
GLboolean __GLEW_SGIX_texture_scale_bias;
GLboolean __GLEW_SGIX_vertex_preclip;
GLboolean __GLEW_SGIX_vertex_preclip_hint;
GLboolean __GLEW_SGIX_ycrcb;
GLboolean __GLEW_SGI_color_matrix;
GLboolean __GLEW_SGI_color_table;
GLboolean __GLEW_SGI_texture_color_table;
GLboolean __GLEW_SUNX_constant_data;
GLboolean __GLEW_SUN_convolution_border_modes;
GLboolean __GLEW_SUN_global_alpha;
GLboolean __GLEW_SUN_mesh_array;
GLboolean __GLEW_SUN_read_video_pixels;
GLboolean __GLEW_SUN_slice_accum;
GLboolean __GLEW_SUN_triangle_list;
GLboolean __GLEW_SUN_vertex;
GLboolean __GLEW_WIN_phong_shading;
GLboolean __GLEW_WIN_specular_fog;
GLboolean __GLEW_WIN_swap_hint;
GLenum glewInit (void);
GLboolean glewIsSupported (const char *name);

GLboolean glewExperimental;
GLboolean glewGetExtension (const char *name);
const GLubyte * glewGetErrorString (GLenum error);
const GLubyte * glewGetString (GLenum name);

}