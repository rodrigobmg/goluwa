do -- curses keys	local trigger = input.SetupInputEvent("ConsoleKey")	event.AddListener("OnConsoleKeyPressed", "input", function(key)		local ret = trigger(key, true)				-- :(		timer.Simple(0, function() trigger(key, false) end)				return ret	end)	local trigger = input.SetupInputEvent("ConsoleChar")	event.AddListener("OnConsoleCharPressed", "input", function(char)		local ret = trigger(char, true)				-- :(		timer.Simple(0, function() trigger(char, false) end)				return ret	end)enddo -- sfml keys 	local trigger = input.SetupInputEvent("Key")	local key_names = {}	for k,v in pairs(e) do		if k:sub(0, 4) == "KEY_" then			key_names[tonumber(v)] = k:sub(5):lower()		end	end	event.AddListener("OnKeyPressed", "input", function(params)		local ret = trigger(key_names[tonumber(params.key.code)], true)					return ret	end)	event.AddListener("OnKeyReleased", "input", function(params)		local ret = trigger(key_names[tonumber(params.key.code)], false)				return ret	end)enddo -- sfml mouse 	local trigger = input.SetupInputEvent("Mouse")	local key_names = {}	for k,v in pairs(e) do		if k:sub(0, 6) == "MOUSE_" then			key_names[tonumber(v)] = k:sub(7):lower()		end	end	event.AddListener("OnMouseButtonPressed", "input", function(params)		local ret = trigger(key_names[tonumber(params.mouseButton.button)], true)					return ret	end)	event.AddListener("OnMouseButtonReleased", "input", function(params)		local ret = trigger(key_names[tonumber(params.mouseButton.button)], false)				return ret	end)endinput.Binds = {}function input.Bind(key, cmd)	check(key, "string")	check(cmd, "string", "nil")	luadata.SetKeyValueInFile("%DATA%/input.txt", key, cmd)	input.Binds[key] = cmdendfunction input.Initialize()	input.Binds = luadata.ReadFile("%DATA%/input.txt")endfunction input.Call(key, press)	if input.DisableFocus then return end	press = press and "" or "~"	local cmd = input.Binds[press .. key]	if cmd then		console.RunString(cmd)		return false	endendevent.AddListener("OnKeyInput", "keybind", input.Call, print, math.huge)function input.Command(line, key, ...)	if key then		cmd = table.concat({...}, " ")		input.Bind(key, cmd)	endendconsole.AddCommand("bind", input.Command)