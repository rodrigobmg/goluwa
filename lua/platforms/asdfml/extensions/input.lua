local key_input = input.SetupInputEvent("Key")event.AddListener("OnConsoleKeyPressed", "input", function(key)	local ret = key_input(key, true)		-- :(	timer.Simple(0, function() key_input(key, false) end)		return retend)local char_input = input.SetupInputEvent("Char")event.AddListener("OnConsoleCharPressed", "input", function(char)	local ret = char_input(char, true)		-- :(	timer.Simple(0, function() char_input(char, false) end)		return retend)if CLIENT then -- bind	input.Binds = {}	function input.Bind(key, cmd)		check(key, "string")		check(cmd, "string", "nil")		luadata.SetKeyValueInFile("%APPDATA%/asdfml/input.txt", key, cmd)		input.Binds[key] = cmd	end	function input.Initialize()		input.Binds = luadata.ReadFile("%APPDATA%/asdfml/input.txt")	end	function input.Call(key, press)		if input.DisableFocus then return end		press = press and "" or "~"		local cmd = input.Binds[press .. key]		if cmd then			console.RunString(cmd)			return false		end	end	event.AddListener("OnKeyInput", "keybind", input.Call, print, math.huge)	function input.Command(ply, line, key, ...)		if key then			cmd = table.concat({...}, " ")			input.Bind(key, cmd)		end	end		console.AddCommand("bind", input.Command)end