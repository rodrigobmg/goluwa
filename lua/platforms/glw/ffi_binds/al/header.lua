return [[

typedef struct ALCdevice_struct ALCdevice;
typedef struct ALCcontext_struct ALCcontext;
typedef char ALCboolean;
typedef char ALCchar;
typedef signed char ALCbyte;
typedef unsigned char ALCubyte;
typedef short ALCshort;
typedef unsigned short ALCushort;
typedef int ALCint;
typedef unsigned int ALCuint;
typedef int ALCsizei;
typedef int ALCenum;
typedef float ALCfloat;
typedef double ALCdouble;
typedef void ALCvoid;
typedef char ALboolean;
typedef char ALchar;
typedef signed char ALbyte;
typedef unsigned char ALubyte;
typedef short ALshort;
typedef unsigned short ALushort;
typedef int ALint;
typedef unsigned int ALuint;
typedef int ALsizei;
typedef int ALenum;
typedef float ALfloat;
typedef double ALdouble;
typedef void ALvoid;


typedef ALCcontext*    (__cdecl *LPALCCREATECONTEXT)(ALCdevice *device, const ALCint *attrlist);
typedef ALCboolean     (__cdecl *LPALCMAKECONTEXTCURRENT)(ALCcontext *context);
typedef void           (__cdecl *LPALCPROCESSCONTEXT)(ALCcontext *context);
typedef void           (__cdecl *LPALCSUSPENDCONTEXT)(ALCcontext *context);
typedef void           (__cdecl *LPALCDESTROYCONTEXT)(ALCcontext *context);
typedef ALCcontext*    (__cdecl *LPALCGETCURRENTCONTEXT)(void);
typedef ALCdevice*     (__cdecl *LPALCGETCONTEXTSDEVICE)(ALCcontext *context);
typedef ALCdevice*     (__cdecl *LPALCOPENDEVICE)(const ALCchar *devicename);
typedef ALCboolean     (__cdecl *LPALCCLOSEDEVICE)(ALCdevice *device);
typedef ALCenum        (__cdecl *LPALCGETERROR)(ALCdevice *device);
typedef ALCboolean     (__cdecl *LPALCISEXTENSIONPRESENT)(ALCdevice *device, const ALCchar *extname);
typedef void*          (__cdecl *LPALCGETPROCADDRESS)(ALCdevice *device, const ALCchar *funcname);
typedef ALCenum        (__cdecl *LPALCGETENUMVALUE)(ALCdevice *device, const ALCchar *enumname);
typedef const ALCchar* (__cdecl *LPALCGETSTRING)(ALCdevice *device, ALCenum param);
typedef void           (__cdecl *LPALCGETINTEGERV)(ALCdevice *device, ALCenum param, ALCsizei size, ALCint *values);
typedef ALCdevice*     (__cdecl *LPALCCAPTUREOPENDEVICE)(const ALCchar *devicename, ALCuint frequency, ALCenum format, ALCsizei buffersize);
typedef ALCboolean     (__cdecl *LPALCCAPTURECLOSEDEVICE)(ALCdevice *device);
typedef void           (__cdecl *LPALCCAPTURESTART)(ALCdevice *device);
typedef void           (__cdecl *LPALCCAPTURESTOP)(ALCdevice *device);
typedef void           (__cdecl *LPALCCAPTURESAMPLES)(ALCdevice *device, ALCvoid *buffer, ALCsizei samples);

typedef void          (__cdecl *LPALENABLE)(ALenum capability);
typedef void          (__cdecl *LPALDISABLE)(ALenum capability);
typedef ALboolean     (__cdecl *LPALISENABLED)(ALenum capability);
typedef const ALchar* (__cdecl *LPALGETSTRING)(ALenum param);
typedef void          (__cdecl *LPALGETBOOLEANV)(ALenum param, ALboolean *values);
typedef void          (__cdecl *LPALGETINTEGERV)(ALenum param, ALint *values);
typedef void          (__cdecl *LPALGETFLOATV)(ALenum param, ALfloat *values);
typedef void          (__cdecl *LPALGETDOUBLEV)(ALenum param, ALdouble *values);
typedef ALboolean     (__cdecl *LPALGETBOOLEAN)(ALenum param);
typedef ALint         (__cdecl *LPALGETINTEGER)(ALenum param);
typedef ALfloat       (__cdecl *LPALGETFLOAT)(ALenum param);
typedef ALdouble      (__cdecl *LPALGETDOUBLE)(ALenum param);
typedef ALenum        (__cdecl *LPALGETERROR)(void);
typedef ALboolean     (__cdecl *LPALISEXTENSIONPRESENT)(const ALchar *extname);
typedef void*         (__cdecl *LPALGETPROCADDRESS)(const ALchar *fname);
typedef ALenum        (__cdecl *LPALGETENUMVALUE)(const ALchar *ename);
typedef void          (__cdecl *LPALLISTENERF)(ALenum param, ALfloat value);
typedef void          (__cdecl *LPALLISTENER3F)(ALenum param, ALfloat value1, ALfloat value2, ALfloat value3);
typedef void          (__cdecl *LPALLISTENERFV)(ALenum param, const ALfloat *values);
typedef void          (__cdecl *LPALLISTENERI)(ALenum param, ALint value);
typedef void          (__cdecl *LPALLISTENER3I)(ALenum param, ALint value1, ALint value2, ALint value3);
typedef void          (__cdecl *LPALLISTENERIV)(ALenum param, const ALint *values);
typedef void          (__cdecl *LPALGETLISTENERF)(ALenum param, ALfloat *value);
typedef void          (__cdecl *LPALGETLISTENER3F)(ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3);
typedef void          (__cdecl *LPALGETLISTENERFV)(ALenum param, ALfloat *values);
typedef void          (__cdecl *LPALGETLISTENERI)(ALenum param, ALint *value);
typedef void          (__cdecl *LPALGETLISTENER3I)(ALenum param, ALint *value1, ALint *value2, ALint *value3);
typedef void          (__cdecl *LPALGETLISTENERIV)(ALenum param, ALint *values);
typedef void          (__cdecl *LPALGENSOURCES)(ALsizei n, ALuint *sources);
typedef void          (__cdecl *LPALDELETESOURCES)(ALsizei n, const ALuint *sources);
typedef ALboolean     (__cdecl *LPALISSOURCE)(ALuint source);
typedef void          (__cdecl *LPALSOURCEF)(ALuint source, ALenum param, ALfloat value);
typedef void          (__cdecl *LPALSOURCE3F)(ALuint source, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3);
typedef void          (__cdecl *LPALSOURCEFV)(ALuint source, ALenum param, const ALfloat *values);
typedef void          (__cdecl *LPALSOURCEI)(ALuint source, ALenum param, ALint value);
typedef void          (__cdecl *LPALSOURCE3I)(ALuint source, ALenum param, ALint value1, ALint value2, ALint value3);
typedef void          (__cdecl *LPALSOURCEIV)(ALuint source, ALenum param, const ALint *values);
typedef void          (__cdecl *LPALGETSOURCEF)(ALuint source, ALenum param, ALfloat *value);
typedef void          (__cdecl *LPALGETSOURCE3F)(ALuint source, ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3);
typedef void          (__cdecl *LPALGETSOURCEFV)(ALuint source, ALenum param, ALfloat *values);
typedef void          (__cdecl *LPALGETSOURCEI)(ALuint source, ALenum param, ALint *value);
typedef void          (__cdecl *LPALGETSOURCE3I)(ALuint source, ALenum param, ALint *value1, ALint *value2, ALint *value3);
typedef void          (__cdecl *LPALGETSOURCEIV)(ALuint source, ALenum param, ALint *values);
typedef void          (__cdecl *LPALSOURCEPLAYV)(ALsizei n, const ALuint *sources);
typedef void          (__cdecl *LPALSOURCESTOPV)(ALsizei n, const ALuint *sources);
typedef void          (__cdecl *LPALSOURCEREWINDV)(ALsizei n, const ALuint *sources);
typedef void          (__cdecl *LPALSOURCEPAUSEV)(ALsizei n, const ALuint *sources);
typedef void          (__cdecl *LPALSOURCEPLAY)(ALuint source);
typedef void          (__cdecl *LPALSOURCESTOP)(ALuint source);
typedef void          (__cdecl *LPALSOURCEREWIND)(ALuint source);
typedef void          (__cdecl *LPALSOURCEPAUSE)(ALuint source);
typedef void          (__cdecl *LPALSOURCEQUEUEBUFFERS)(ALuint source, ALsizei nb, const ALuint *buffers);
typedef void          (__cdecl *LPALSOURCEUNQUEUEBUFFERS)(ALuint source, ALsizei nb, ALuint *buffers);
typedef void          (__cdecl *LPALGENBUFFERS)(ALsizei n, ALuint *buffers);
typedef void          (__cdecl *LPALDELETEBUFFERS)(ALsizei n, const ALuint *buffers);
typedef ALboolean     (__cdecl *LPALISBUFFER)(ALuint buffer);
typedef void          (__cdecl *LPALBUFFERDATA)(ALuint buffer, ALenum format, const ALvoid *data, ALsizei size, ALsizei freq);
typedef void          (__cdecl *LPALBUFFERF)(ALuint buffer, ALenum param, ALfloat value);
typedef void          (__cdecl *LPALBUFFER3F)(ALuint buffer, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3);
typedef void          (__cdecl *LPALBUFFERFV)(ALuint buffer, ALenum param, const ALfloat *values);
typedef void          (__cdecl *LPALBUFFERI)(ALuint buffer, ALenum param, ALint value);
typedef void          (__cdecl *LPALBUFFER3I)(ALuint buffer, ALenum param, ALint value1, ALint value2, ALint value3);
typedef void          (__cdecl *LPALBUFFERIV)(ALuint buffer, ALenum param, const ALint *values);
typedef void          (__cdecl *LPALGETBUFFERF)(ALuint buffer, ALenum param, ALfloat *value);
typedef void          (__cdecl *LPALGETBUFFER3F)(ALuint buffer, ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3);
typedef void          (__cdecl *LPALGETBUFFERFV)(ALuint buffer, ALenum param, ALfloat *values);
typedef void          (__cdecl *LPALGETBUFFERI)(ALuint buffer, ALenum param, ALint *value);
typedef void          (__cdecl *LPALGETBUFFER3I)(ALuint buffer, ALenum param, ALint *value1, ALint *value2, ALint *value3);
typedef void          (__cdecl *LPALGETBUFFERIV)(ALuint buffer, ALenum param, ALint *values);
typedef void          (__cdecl *LPALDOPPLERFACTOR)(ALfloat value);
typedef void          (__cdecl *LPALDOPPLERVELOCITY)(ALfloat value);
typedef void          (__cdecl *LPALSPEEDOFSOUND)(ALfloat value);
typedef void          (__cdecl *LPALDISTANCEMODEL)(ALenum distanceModel);

typedef ALvoid (__cdecl*PFNALBUFFERDATASTATICPROC)(const ALint,ALenum,ALvoid*,ALsizei,ALsizei);
typedef void (__cdecl *LPALGENEFFECTS)(ALsizei, ALuint*);
typedef void (__cdecl *LPALDELETEEFFECTS)(ALsizei, const ALuint*);
typedef ALboolean (__cdecl *LPALISEFFECT)(ALuint);
typedef void (__cdecl *LPALEFFECTI)(ALuint, ALenum, ALint);
typedef void (__cdecl *LPALEFFECTIV)(ALuint, ALenum, const ALint*);
typedef void (__cdecl *LPALEFFECTF)(ALuint, ALenum, ALfloat);
typedef void (__cdecl *LPALEFFECTFV)(ALuint, ALenum, const ALfloat*);
typedef void (__cdecl *LPALGETEFFECTI)(ALuint, ALenum, ALint*);
typedef void (__cdecl *LPALGETEFFECTIV)(ALuint, ALenum, ALint*);
typedef void (__cdecl *LPALGETEFFECTF)(ALuint, ALenum, ALfloat*);
typedef void (__cdecl *LPALGETEFFECTFV)(ALuint, ALenum, ALfloat*);
typedef void (__cdecl *LPALGENFILTERS)(ALsizei, ALuint*);
typedef void (__cdecl *LPALDELETEFILTERS)(ALsizei, const ALuint*);
typedef ALboolean (__cdecl *LPALISFILTER)(ALuint);
typedef void (__cdecl *LPALFILTERI)(ALuint, ALenum, ALint);
typedef void (__cdecl *LPALFILTERIV)(ALuint, ALenum, const ALint*);
typedef void (__cdecl *LPALFILTERF)(ALuint, ALenum, ALfloat);
typedef void (__cdecl *LPALFILTERFV)(ALuint, ALenum, const ALfloat*);
typedef void (__cdecl *LPALGETFILTERI)(ALuint, ALenum, ALint*);
typedef void (__cdecl *LPALGETFILTERIV)(ALuint, ALenum, ALint*);
typedef void (__cdecl *LPALGETFILTERF)(ALuint, ALenum, ALfloat*);
typedef void (__cdecl *LPALGETFILTERFV)(ALuint, ALenum, ALfloat*);
typedef void (__cdecl *LPALGENAUXILIARYEFFECTSLOTS)(ALsizei, ALuint*);
typedef void (__cdecl *LPALDELETEAUXILIARYEFFECTSLOTS)(ALsizei, const ALuint*);
typedef ALboolean (__cdecl *LPALISAUXILIARYEFFECTSLOT)(ALuint);
typedef void (__cdecl *LPALAUXILIARYEFFECTSLOTI)(ALuint, ALenum, ALint);
typedef void (__cdecl *LPALAUXILIARYEFFECTSLOTIV)(ALuint, ALenum, const ALint*);
typedef void (__cdecl *LPALAUXILIARYEFFECTSLOTF)(ALuint, ALenum, ALfloat);
typedef void (__cdecl *LPALAUXILIARYEFFECTSLOTFV)(ALuint, ALenum, const ALfloat*);
typedef void (__cdecl *LPALGETAUXILIARYEFFECTSLOTI)(ALuint, ALenum, ALint*);
typedef void (__cdecl *LPALGETAUXILIARYEFFECTSLOTIV)(ALuint, ALenum, ALint*);
typedef void (__cdecl *LPALGETAUXILIARYEFFECTSLOTF)(ALuint, ALenum, ALfloat*);
typedef void (__cdecl *LPALGETAUXILIARYEFFECTSLOTFV)(ALuint, ALenum, ALfloat*);

typedef ALCboolean  (__cdecl*PFNALCSETTHREADCONTEXTPROC)(ALCcontext *context);
typedef ALCcontext* (__cdecl*PFNALCGETTHREADCONTEXTPROC)(void);
typedef ALvoid (__cdecl*PFNALBUFFERSUBDATASOFTPROC)(ALuint,ALenum,const ALvoid*,ALsizei,ALsizei);
typedef void (__cdecl*LPALFOLDBACKCALLBACK)(ALenum,ALsizei);
typedef void (__cdecl*LPALREQUESTFOLDBACKSTART)(ALenum,ALsizei,ALsizei,ALfloat*,LPALFOLDBACKCALLBACK);
typedef void (__cdecl*LPALREQUESTFOLDBACKSTOP)(void);
typedef void (__cdecl*LPALBUFFERSAMPLESSOFT)(ALuint,ALuint,ALenum,ALsizei,ALenum,ALenum,const ALvoid*);
typedef void (__cdecl*LPALBUFFERSUBSAMPLESSOFT)(ALuint,ALsizei,ALsizei,ALenum,ALenum,const ALvoid*);
typedef void (__cdecl*LPALGETBUFFERSAMPLESSOFT)(ALuint,ALsizei,ALsizei,ALenum,ALenum,ALvoid*);
typedef ALboolean (__cdecl*LPALISBUFFERFORMATSUPPORTEDSOFT)(ALenum);
typedef ALCdevice* (__cdecl*LPALCLOOPBACKOPENDEVICESOFT)(const ALCchar*);
typedef ALCboolean (__cdecl*LPALCISRENDERFORMATSUPPORTEDSOFT)(ALCdevice*,ALCsizei,ALCenum,ALCenum);
typedef void (__cdecl*LPALCRENDERSAMPLESSOFT)(ALCdevice*,ALCvoid*,ALCsizei);

typedef void (__cdecl*LPALSOURCEDSOFT)(ALuint,ALenum,ALdouble);
typedef void (__cdecl*LPALSOURCE3DSOFT)(ALuint,ALenum,ALdouble,ALdouble,ALdouble);
typedef void (__cdecl*LPALSOURCEDVSOFT)(ALuint,ALenum,const ALdouble*);
typedef void (__cdecl*LPALGETSOURCEDSOFT)(ALuint,ALenum,ALdouble*);
typedef void (__cdecl*LPALGETSOURCE3DSOFT)(ALuint,ALenum,ALdouble*,ALdouble*,ALdouble*);
typedef void (__cdecl*LPALGETSOURCEDVSOFT)(ALuint,ALenum,ALdouble*);
typedef struct {
    float flDensity;
    float flDiffusion;
    float flGain;
    float flGainHF;
    float flGainLF;
    float flDecayTime;
    float flDecayHFRatio;
    float flDecayLFRatio;
    float flReflectionsGain;
    float flReflectionsDelay;
    float flReflectionsPan[3];
    float flLateReverbGain;
    float flLateReverbDelay;
    float flLateReverbPan[3];
    float flEchoTime;
    float flEchoDepth;
    float flModulationTime;
    float flModulationDepth;
    float flAirAbsorptionGainHF;
    float flHFReference;
    float flLFReference;
    float flRoomRolloffFactor;
    int   iDecayHFLimit;
} EFXEAXREVERBPROPERTIES, *LPEFXEAXREVERBPROPERTIES;


__declspec(dllimport) ALCcontext* __cdecl alcCreateContext(ALCdevice *device, const ALCint* attrlist);
__declspec(dllimport) ALCboolean  __cdecl alcMakeContextCurrent(ALCcontext *context);
__declspec(dllimport) void        __cdecl alcProcessContext(ALCcontext *context);
__declspec(dllimport) void        __cdecl alcSuspendContext(ALCcontext *context);
__declspec(dllimport) void        __cdecl alcDestroyContext(ALCcontext *context);
__declspec(dllimport) ALCcontext* __cdecl alcGetCurrentContext(void);
__declspec(dllimport) ALCdevice*  __cdecl alcGetContextsDevice(ALCcontext *context);
__declspec(dllimport) ALCdevice* __cdecl alcOpenDevice(const ALCchar *devicename);
__declspec(dllimport) ALCboolean __cdecl alcCloseDevice(ALCdevice *device);
__declspec(dllimport) ALCenum __cdecl alcGetError(ALCdevice *device);
__declspec(dllimport) ALCboolean __cdecl alcIsExtensionPresent(ALCdevice *device, const ALCchar *extname);
__declspec(dllimport) void*      __cdecl alcGetProcAddress(ALCdevice *device, const ALCchar *funcname);
__declspec(dllimport) ALCenum    __cdecl alcGetEnumValue(ALCdevice *device, const ALCchar *enumname);
__declspec(dllimport) const ALCchar* __cdecl alcGetString(ALCdevice *device, ALCenum param);
__declspec(dllimport) void           __cdecl alcGetIntegerv(ALCdevice *device, ALCenum param, ALCsizei size, ALCint *values);
__declspec(dllimport) ALCdevice* __cdecl alcCaptureOpenDevice(const ALCchar *devicename, ALCuint frequency, ALCenum format, ALCsizei buffersize);
__declspec(dllimport) ALCboolean __cdecl alcCaptureCloseDevice(ALCdevice *device);
__declspec(dllimport) void       __cdecl alcCaptureStart(ALCdevice *device);
__declspec(dllimport) void       __cdecl alcCaptureStop(ALCdevice *device);
__declspec(dllimport) void       __cdecl alcCaptureSamples(ALCdevice *device, ALCvoid *buffer, ALCsizei samples);

__declspec(dllimport) void __cdecl alDopplerFactor(ALfloat value);
__declspec(dllimport) void __cdecl alDopplerVelocity(ALfloat value);
__declspec(dllimport) void __cdecl alSpeedOfSound(ALfloat value);
__declspec(dllimport) void __cdecl alDistanceModel(ALenum distanceModel);
__declspec(dllimport) void __cdecl alEnable(ALenum capability);
__declspec(dllimport) void __cdecl alDisable(ALenum capability);
__declspec(dllimport) ALboolean __cdecl alIsEnabled(ALenum capability);
__declspec(dllimport) const ALchar* __cdecl alGetString(ALenum param);
__declspec(dllimport) void __cdecl alGetBooleanv(ALenum param, ALboolean *values);
__declspec(dllimport) void __cdecl alGetIntegerv(ALenum param, ALint *values);
__declspec(dllimport) void __cdecl alGetFloatv(ALenum param, ALfloat *values);
__declspec(dllimport) void __cdecl alGetDoublev(ALenum param, ALdouble *values);
__declspec(dllimport) ALboolean __cdecl alGetBoolean(ALenum param);
__declspec(dllimport) ALint __cdecl alGetInteger(ALenum param);
__declspec(dllimport) ALfloat __cdecl alGetFloat(ALenum param);
__declspec(dllimport) ALdouble __cdecl alGetDouble(ALenum param);
__declspec(dllimport) ALenum __cdecl alGetError(void);
__declspec(dllimport) ALboolean __cdecl alIsExtensionPresent(const ALchar *extname);
__declspec(dllimport) void* __cdecl alGetProcAddress(const ALchar *fname);
__declspec(dllimport) ALenum __cdecl alGetEnumValue(const ALchar *ename);
__declspec(dllimport) void __cdecl alListenerf(ALenum param, ALfloat value);
__declspec(dllimport) void __cdecl alListener3f(ALenum param, ALfloat value1, ALfloat value2, ALfloat value3);
__declspec(dllimport) void __cdecl alListenerfv(ALenum param, const ALfloat *values);
__declspec(dllimport) void __cdecl alListeneri(ALenum param, ALint value);
__declspec(dllimport) void __cdecl alListener3i(ALenum param, ALint value1, ALint value2, ALint value3);
__declspec(dllimport) void __cdecl alListeneriv(ALenum param, const ALint *values);
__declspec(dllimport) void __cdecl alGetListenerf(ALenum param, ALfloat *value);
__declspec(dllimport) void __cdecl alGetListener3f(ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3);
__declspec(dllimport) void __cdecl alGetListenerfv(ALenum param, ALfloat *values);
__declspec(dllimport) void __cdecl alGetListeneri(ALenum param, ALint *value);
__declspec(dllimport) void __cdecl alGetListener3i(ALenum param, ALint *value1, ALint *value2, ALint *value3);
__declspec(dllimport) void __cdecl alGetListeneriv(ALenum param, ALint *values);
__declspec(dllimport) void __cdecl alGenSources(ALsizei n, ALuint *sources);
__declspec(dllimport) void __cdecl alDeleteSources(ALsizei n, const ALuint *sources);
__declspec(dllimport) ALboolean __cdecl alIsSource(ALuint source);
__declspec(dllimport) void __cdecl alSourcef(ALuint source, ALenum param, ALfloat value);
__declspec(dllimport) void __cdecl alSource3f(ALuint source, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3);
__declspec(dllimport) void __cdecl alSourcefv(ALuint source, ALenum param, const ALfloat *values);
__declspec(dllimport) void __cdecl alSourcei(ALuint source, ALenum param, ALint value);
__declspec(dllimport) void __cdecl alSource3i(ALuint source, ALenum param, ALint value1, ALint value2, ALint value3);
__declspec(dllimport) void __cdecl alSourceiv(ALuint source, ALenum param, const ALint *values);
__declspec(dllimport) void __cdecl alGetSourcef(ALuint source, ALenum param, ALfloat *value);
__declspec(dllimport) void __cdecl alGetSource3f(ALuint source, ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3);
__declspec(dllimport) void __cdecl alGetSourcefv(ALuint source, ALenum param, ALfloat *values);
__declspec(dllimport) void __cdecl alGetSourcei(ALuint source,  ALenum param, ALint *value);
__declspec(dllimport) void __cdecl alGetSource3i(ALuint source, ALenum param, ALint *value1, ALint *value2, ALint *value3);
__declspec(dllimport) void __cdecl alGetSourceiv(ALuint source,  ALenum param, ALint *values);
__declspec(dllimport) void __cdecl alSourcePlayv(ALsizei n, const ALuint *sources);
__declspec(dllimport) void __cdecl alSourceStopv(ALsizei n, const ALuint *sources);
__declspec(dllimport) void __cdecl alSourceRewindv(ALsizei n, const ALuint *sources);
__declspec(dllimport) void __cdecl alSourcePausev(ALsizei n, const ALuint *sources);
__declspec(dllimport) void __cdecl alSourcePlay(ALuint source);
__declspec(dllimport) void __cdecl alSourceStop(ALuint source);
__declspec(dllimport) void __cdecl alSourceRewind(ALuint source);
__declspec(dllimport) void __cdecl alSourcePause(ALuint source);
__declspec(dllimport) void __cdecl alSourceQueueBuffers(ALuint source, ALsizei nb, const ALuint *buffers);
__declspec(dllimport) void __cdecl alSourceUnqueueBuffers(ALuint source, ALsizei nb, ALuint *buffers);
__declspec(dllimport) void __cdecl alGenBuffers(ALsizei n, ALuint *buffers);
__declspec(dllimport) void __cdecl alDeleteBuffers(ALsizei n, const ALuint *buffers);
__declspec(dllimport) ALboolean __cdecl alIsBuffer(ALuint buffer);
__declspec(dllimport) void __cdecl alBufferData(ALuint buffer, ALenum format, const ALvoid *data, ALsizei size, ALsizei freq);
__declspec(dllimport) void __cdecl alBufferf(ALuint buffer, ALenum param, ALfloat value);
__declspec(dllimport) void __cdecl alBuffer3f(ALuint buffer, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3);
__declspec(dllimport) void __cdecl alBufferfv(ALuint buffer, ALenum param, const ALfloat *values);
__declspec(dllimport) void __cdecl alBufferi(ALuint buffer, ALenum param, ALint value);
__declspec(dllimport) void __cdecl alBuffer3i(ALuint buffer, ALenum param, ALint value1, ALint value2, ALint value3);
__declspec(dllimport) void __cdecl alBufferiv(ALuint buffer, ALenum param, const ALint *values);
__declspec(dllimport) void __cdecl alGetBufferf(ALuint buffer, ALenum param, ALfloat *value);
__declspec(dllimport) void __cdecl alGetBuffer3f(ALuint buffer, ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3);
__declspec(dllimport) void __cdecl alGetBufferfv(ALuint buffer, ALenum param, ALfloat *values);
__declspec(dllimport) void __cdecl alGetBufferi(ALuint buffer, ALenum param, ALint *value);
__declspec(dllimport) void __cdecl alGetBuffer3i(ALuint buffer, ALenum param, ALint *value1, ALint *value2, ALint *value3);
__declspec(dllimport) void __cdecl alGetBufferiv(ALuint buffer, ALenum param, ALint *values);
]]