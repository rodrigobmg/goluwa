local trigger = input.SetupInputEvent("Key")function glw.OnKey(key, scancode, action, mods)	if action == e.GLFW_REPEAT then return end		trigger(glfw.KeyToString(key), action == e.GLFW_PRESS)endlocal trigger = input.SetupInputEvent("Mouse")function glw.OnMouseButton(button, action, mods)	trigger(glfw.MouseToString(button), action == e.GLFW_PRESS)endfunction input.GetMousePos()	local x, y = ffi.new("double[1]"), ffi.new("double[1]")	glfw.GetCursorPos(glw.window.__ptr, x, y)	x = x[0]	y = y[0]			return Vec2(x, y)endfunction input.SetMousePos(pos)	glfw.SetCursorPos(glw.window.__ptr, pos.x, pos.y)endfunction input.ShowCursor(b)	if b then		glfw.SetInputMode(glw.window.__ptr, e.GLFW_CURSOR, e.GLFW_CURSOR_NORMAL)	else		glfw.SetInputMode(glw.window.__ptr, e.GLFW_CURSOR, e.GLFW_CURSOR_HIDDEN)	endend	function input.SetMouseTrapped(b)	input.mouse_trapped = bendfunction input.GetMouseDelta()	return input.mouse_delta or Vec2()endinput.Binds = {}function input.Bind(key, cmd)	check(key, "string")	check(cmd, "string", "nil")	luadata.SetKeyValueInFile("%DATA%/input.txt", key, cmd)	input.Binds[key] = cmdendfunction input.Initialize()	input.Binds = luadata.ReadFile("%DATA%/input.txt")endfunction input.Call(key, press)	if input.DisableFocus then return end	press = press and "" or "~"	local cmd = input.Binds[press .. key]	if cmd then		console.RunString(cmd)		return false	endendevent.AddListener("OnKeyInput", "keybind", input.Call, print, math.huge)function input.Command(line, key, ...)	if key then		cmd = table.concat({...}, " ")		input.Bind(key, cmd)	endendconsole.AddCommand("bind", input.Command)